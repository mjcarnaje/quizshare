{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _taggedTemplateLiteral from \"@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectDestructuringEmpty from \"@babel/runtime/helpers/esm/objectDestructuringEmpty\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\mj\\\\Documents\\\\Codes\\\\PROJECTS\\\\quizshare-typescript\\\\client\\\\src\\\\pages\\\\quiz\\\\take\\\\[id]\\\\index.tsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteral([\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tfragment _ on Quiz {\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\ttakersCount\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tfragment _ on Quiz {\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\ttakersCount\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { AspectRatio, Avatar, Box, Button, Flex, Grid, Heading, Text, useColorModeValue, VStack, Icon, Tooltip } from '@chakra-ui/react';\nimport { useRouter } from 'next/dist/client/router';\nimport Image from 'next/image';\nimport React, { useContext, useRef, useState } from 'react';\nimport { useCheckAnswerMutation, useQuestionsQuery, useSingleQuizQuery } from '../../../../generated/graphql';\nimport { MainContainer } from '../../../../layouts/MainContainer';\nimport { SubContainer } from '../../../../layouts/SubContainer';\nimport { QuizResultContext } from '../../../../store/context';\nimport { withApollo } from '../../../../utils/withApollo';\nimport { gql } from '@apollo/client';\nimport { BiCheckDouble } from 'react-icons/bi';\n\nvar TakeQuiz = function TakeQuiz(_ref) {\n  _s();\n\n  var _quizdata$singleQuiz, _quizdata$singleQuiz$, _quizdata$singleQuiz2, _quizdata$singleQuiz$2, _quizdata$singleQuiz3, _quizdata$singleQuiz4, _quizdata$singleQuiz5, _data$questions3;\n\n  _objectDestructuringEmpty(_ref);\n\n  var choiceBgHover = useColorModeValue('gray.200', 'rgba(255, 255, 255, 0.04)');\n  var choiceBgSelected = useColorModeValue('gray.300', 'rgba(255, 255, 255, 0.06');\n  var router = useRouter();\n  var questionsRefs = useRef([]);\n\n  var _useState = useState([]),\n      usersAnswer = _useState[0],\n      setUsersAnswer = _useState[1];\n\n  var _ref2 = useContext(QuizResultContext),\n      setQuizResult = _ref2.setQuizResult,\n      setAnswerByUser = _ref2.setAnswerByUser;\n\n  var _useQuestionsQuery = useQuestionsQuery({\n    variables: {\n      quiz_id: parseInt(router.query.id),\n      withAnswer: false\n    }\n  }),\n      data = _useQuestionsQuery.data,\n      loading = _useQuestionsQuery.loading;\n\n  var _useSingleQuizQuery = useSingleQuizQuery({\n    variables: {\n      quiz_id: parseInt(router.query.id)\n    }\n  }),\n      quizdata = _useSingleQuizQuery.data,\n      quizloading = _useSingleQuizQuery.loading;\n\n  var _useCheckAnswerMutati = useCheckAnswerMutation(),\n      _useCheckAnswerMutati2 = _slicedToArray(_useCheckAnswerMutati, 2),\n      checkAnswer = _useCheckAnswerMutati2[0],\n      checking = _useCheckAnswerMutati2[1].loading;\n\n  var selectAnswer = function selectAnswer(question_id, choice_id, i) {\n    var _data$questions, _data$questions2;\n\n    var isAnsweredIndex = usersAnswer.findIndex(function (ans) {\n      return ans.question_id === question_id;\n    });\n\n    if (isAnsweredIndex !== -1) {\n      var newArr = _toConsumableArray(usersAnswer);\n\n      newArr[isAnsweredIndex] = _objectSpread(_objectSpread({}, newArr[isAnsweredIndex]), {}, {\n        choice_id: choice_id\n      });\n      setUsersAnswer(newArr);\n    } else {\n      setUsersAnswer(function (ans) {\n        return [].concat(_toConsumableArray(ans), [{\n          question_id: question_id,\n          choice_id: choice_id\n        }]);\n      });\n    } // automatic scrolling until second to the last question\n\n\n    if ((data === null || data === void 0 ? void 0 : (_data$questions = data.questions) === null || _data$questions === void 0 ? void 0 : _data$questions.length) !== undefined && (data === null || data === void 0 ? void 0 : (_data$questions2 = data.questions) === null || _data$questions2 === void 0 ? void 0 : _data$questions2.length) > i + 1) {\n      questionsRefs.current[i + 1].scrollIntoView({\n        behavior: 'smooth'\n      });\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(MainContainer, {\n    children: /*#__PURE__*/_jsxDEV(SubContainer, {\n      position: \"relative\",\n      children: [/*#__PURE__*/_jsxDEV(Flex, {\n        justify: \"between\",\n        children: [/*#__PURE__*/_jsxDEV(Box, {\n          ml: \"10px\",\n          children: [/*#__PURE__*/_jsxDEV(Heading, {\n            as: \"h2\",\n            fontSize: \"24px\",\n            children: quizdata === null || quizdata === void 0 ? void 0 : (_quizdata$singleQuiz = quizdata.singleQuiz) === null || _quizdata$singleQuiz === void 0 ? void 0 : _quizdata$singleQuiz.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 7\n          }, _this), /*#__PURE__*/_jsxDEV(Flex, {\n            mt: \"2px\",\n            children: [/*#__PURE__*/_jsxDEV(Avatar, {\n              size: \"xs\",\n              src: (_quizdata$singleQuiz$ = quizdata === null || quizdata === void 0 ? void 0 : (_quizdata$singleQuiz2 = quizdata.singleQuiz) === null || _quizdata$singleQuiz2 === void 0 ? void 0 : _quizdata$singleQuiz2.author.avatar) !== null && _quizdata$singleQuiz$ !== void 0 ? _quizdata$singleQuiz$ : '',\n              name: (_quizdata$singleQuiz$2 = quizdata === null || quizdata === void 0 ? void 0 : (_quizdata$singleQuiz3 = quizdata.singleQuiz) === null || _quizdata$singleQuiz3 === void 0 ? void 0 : _quizdata$singleQuiz3.author.profile.name) !== null && _quizdata$singleQuiz$2 !== void 0 ? _quizdata$singleQuiz$2 : ''\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 102,\n              columnNumber: 8\n            }, _this), /*#__PURE__*/_jsxDEV(Text, {\n              ml: \"10px\",\n              as: \"p\",\n              children: quizdata === null || quizdata === void 0 ? void 0 : (_quizdata$singleQuiz4 = quizdata.singleQuiz) === null || _quizdata$singleQuiz4 === void 0 ? void 0 : _quizdata$singleQuiz4.author.profile.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 107,\n              columnNumber: 8\n            }, _this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 7\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 6\n        }, _this), (quizdata === null || quizdata === void 0 ? void 0 : (_quizdata$singleQuiz5 = quizdata.singleQuiz) === null || _quizdata$singleQuiz5 === void 0 ? void 0 : _quizdata$singleQuiz5.isTaken) && /*#__PURE__*/_jsxDEV(Tooltip, {\n          label: \"You have taken this\",\n          \"aria-label\": \"A tooltip\",\n          children: /*#__PURE__*/_jsxDEV(Box, {\n            children: /*#__PURE__*/_jsxDEV(Icon, {\n              as: BiCheckDouble,\n              color: \"gray.500\",\n              boxSize: \"24px\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 115,\n              columnNumber: 9\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 8\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 7\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 5\n      }, _this), /*#__PURE__*/_jsxDEV(VStack, {\n        spacing: \"48px\",\n        my: \"20px\",\n        children: data === null || data === void 0 ? void 0 : (_data$questions3 = data.questions) === null || _data$questions3 === void 0 ? void 0 : _data$questions3.map(function (question, i) {\n          var _data$questions4;\n\n          return /*#__PURE__*/_jsxDEV(Box, {\n            ref: function ref(_ref3) {\n              return questionsRefs.current[i] = _ref3;\n            },\n            w: \"full\",\n            children: [(question === null || question === void 0 ? void 0 : question.question_photo) && /*#__PURE__*/_jsxDEV(Box, {\n              mx: \"auto\",\n              my: \"8px\",\n              overflow: \"hidden\",\n              borderRadius: \"sm\",\n              bg: \"gray.100\",\n              maxW: ['100%', '67%'],\n              children: /*#__PURE__*/_jsxDEV(AspectRatio, {\n                ratio: 16 / 9,\n                children: /*#__PURE__*/_jsxDEV(Image, {\n                  src: question.question_photo,\n                  layout: \"fill\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 137,\n                  columnNumber: 11\n                }, _this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 136,\n                columnNumber: 10\n              }, _this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 128,\n              columnNumber: 9\n            }, _this), /*#__PURE__*/_jsxDEV(Box, {\n              boxShadow: \"sm\",\n              py: \"14px\",\n              px: \"28px\",\n              borderRadius: \"4px\",\n              pos: \"relative\",\n              borderWidth: \"1px\",\n              children: [/*#__PURE__*/_jsxDEV(VStack, {\n                pos: \"absolute\",\n                left: \"8px\",\n                spacing: \"2px\",\n                children: [/*#__PURE__*/_jsxDEV(Text, {\n                  as: \"p\",\n                  fontSize: \"14px\",\n                  lineHeight: \"1\",\n                  children: i + 1\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 150,\n                  columnNumber: 10\n                }, _this), /*#__PURE__*/_jsxDEV(Text, {\n                  as: \"small\",\n                  fontSize: \"11px\",\n                  lineHeight: \"1\",\n                  children: (_data$questions4 = data.questions) === null || _data$questions4 === void 0 ? void 0 : _data$questions4.length\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 153,\n                  columnNumber: 10\n                }, _this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 149,\n                columnNumber: 9\n              }, _this), /*#__PURE__*/_jsxDEV(Text, {\n                fontSize: \"18px\",\n                wordBreak: \"break-word\",\n                whiteSpace: \"pre-line\",\n                fontWeight: \"semibold\",\n                children: question.question\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 157,\n                columnNumber: 9\n              }, _this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 141,\n              columnNumber: 8\n            }, _this), /*#__PURE__*/_jsxDEV(Grid, {\n              templateColumns: \"repeat(auto-fit, minmax(360px, 1fr))\",\n              gap: 2,\n              my: \"15px\",\n              mx: ['20px', '0'],\n              children: question.choices.map(function (choice) {\n                var answer = usersAnswer.find(function (ans) {\n                  return ans.question_id === question.question_id;\n                });\n                var isAnswered = (answer === null || answer === void 0 ? void 0 : answer.choice_id) === choice.choice_id;\n                return /*#__PURE__*/_jsxDEV(Box, {\n                  borderWidth: \"1px\",\n                  cursor: \"pointer\",\n                  p: \"12px\",\n                  textAlign: \"center\",\n                  wordBreak: \"break-word\",\n                  whiteSpace: \"pre-line\",\n                  _hover: {\n                    bg: !isAnswered ? choiceBgHover : ''\n                  },\n                  onClick: function onClick() {\n                    return selectAnswer(question.question_id, choice.choice_id, i);\n                  },\n                  bg: isAnswered ? choiceBgSelected : '',\n                  boxShadow: isAnswered ? 'sm' : '',\n                  children: [(choice === null || choice === void 0 ? void 0 : choice.choicePhoto) && /*#__PURE__*/_jsxDEV(Box, {\n                    mb: \"8px\",\n                    overflow: \"hidden\",\n                    borderRadius: \"sm\",\n                    bg: \"gray.100\",\n                    children: /*#__PURE__*/_jsxDEV(AspectRatio, {\n                      ratio: 16 / 9,\n                      children: /*#__PURE__*/_jsxDEV(Image, {\n                        src: choice.choicePhoto,\n                        layout: \"fill\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 202,\n                        columnNumber: 15\n                      }, _this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 201,\n                      columnNumber: 14\n                    }, _this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 195,\n                    columnNumber: 13\n                  }, _this), /*#__PURE__*/_jsxDEV(Box, {\n                    children: /*#__PURE__*/_jsxDEV(Text, {\n                      children: choice.value\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 207,\n                      columnNumber: 13\n                    }, _this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 206,\n                    columnNumber: 12\n                  }, _this)]\n                }, choice.choice_id, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 179,\n                  columnNumber: 11\n                }, _this);\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 166,\n              columnNumber: 8\n            }, _this)]\n          }, question.question_id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 7\n          }, _this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 5\n      }, _this), !quizdata && quizloading && /*#__PURE__*/_jsxDEV(Text, {\n        children: \"quiz loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 34\n      }, _this), !data && loading && /*#__PURE__*/_jsxDEV(Text, {\n        children: \"questoins loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 26\n      }, _this), /*#__PURE__*/_jsxDEV(Box, {\n        w: \"full\",\n        textAlign: \"center\",\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          isLoading: checking,\n          onClick: /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n            return _regeneratorRuntime.wrap(function _callee$(_context) {\n              while (1) {\n                switch (_context.prev = _context.next) {\n                  case 0:\n                    _context.next = 2;\n                    return checkAnswer({\n                      variables: {\n                        data: {\n                          quiz_id: parseInt(router.query.id),\n                          users_answer: usersAnswer\n                        }\n                      },\n                      update: function update(cache, _ref5) {\n                        var _qdata$takersCount;\n\n                        var data = _ref5.data;\n                        var id = parseInt(router.query.id);\n                        router.push(\"/quiz/take/\".concat(id, \"/result\"));\n                        var qdata = cache.readFragment({\n                          id: 'Quiz:' + id,\n                          fragment: gql(_templateObject())\n                        });\n                        var newTakersCount = (_qdata$takersCount = qdata === null || qdata === void 0 ? void 0 : qdata.takersCount) !== null && _qdata$takersCount !== void 0 ? _qdata$takersCount : 0;\n                        cache.writeFragment({\n                          id: 'Quiz:' + id,\n                          fragment: gql(_templateObject2()),\n                          data: {\n                            takersCount: newTakersCount += 1\n                          }\n                        });\n                        setAnswerByUser(usersAnswer);\n                        setQuizResult(data === null || data === void 0 ? void 0 : data.checkAnswer);\n                        setUsersAnswer([]);\n                      }\n                    });\n\n                  case 2:\n                  case \"end\":\n                    return _context.stop();\n                }\n              }\n            }, _callee);\n          })),\n          children: \"Sumbit answer\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 221,\n          columnNumber: 6\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 5\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 4\n    }, _this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 94,\n    columnNumber: 3\n  }, _this);\n};\n\n_s(TakeQuiz, \"5xdSBgtNRzlUisbk3YkYa/eSRas=\", false, function () {\n  return [useColorModeValue, useColorModeValue, useRouter, useQuestionsQuery, useSingleQuizQuery, useCheckAnswerMutation];\n});\n\n_c = TakeQuiz;\nexport default withApollo({\n  ssr: true\n})(TakeQuiz);\n\nvar _c;\n\n$RefreshReg$(_c, \"TakeQuiz\");","map":{"version":3,"sources":["C:/Users/mj/Documents/Codes/PROJECTS/quizshare-typescript/client/src/pages/quiz/take/[id]/index.tsx"],"names":["AspectRatio","Avatar","Box","Button","Flex","Grid","Heading","Text","useColorModeValue","VStack","Icon","Tooltip","useRouter","Image","React","useContext","useRef","useState","useCheckAnswerMutation","useQuestionsQuery","useSingleQuizQuery","MainContainer","SubContainer","QuizResultContext","withApollo","gql","BiCheckDouble","TakeQuiz","choiceBgHover","choiceBgSelected","router","questionsRefs","usersAnswer","setUsersAnswer","setQuizResult","setAnswerByUser","variables","quiz_id","parseInt","query","id","withAnswer","data","loading","quizdata","quizloading","checkAnswer","checking","selectAnswer","question_id","choice_id","i","isAnsweredIndex","findIndex","ans","newArr","questions","length","undefined","current","scrollIntoView","behavior","singleQuiz","title","author","avatar","profile","name","isTaken","map","question","ref","question_photo","choices","choice","answer","find","isAnswered","bg","choicePhoto","value","users_answer","update","cache","push","qdata","readFragment","fragment","newTakersCount","takersCount","writeFragment","ssr"],"mappings":"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","sourcesContent":["import {\r\n\tAspectRatio,\r\n\tAvatar,\r\n\tBox,\r\n\tButton,\r\n\tFlex,\r\n\tGrid,\r\n\tHeading,\r\n\tText,\r\n\tuseColorModeValue,\r\n\tVStack,\r\n\tIcon,\r\n\tTooltip,\r\n} from '@chakra-ui/react';\r\nimport { useRouter } from 'next/dist/client/router';\r\nimport Image from 'next/image';\r\nimport React, { RefObject, useContext, useRef, useState } from 'react';\r\nimport {\r\n\tuseCheckAnswerMutation,\r\n\tuseQuestionsQuery,\r\n\tuseSingleQuizQuery,\r\n} from '../../../../generated/graphql';\r\nimport { MainContainer } from '../../../../layouts/MainContainer';\r\nimport { SubContainer } from '../../../../layouts/SubContainer';\r\nimport { QuizResultContext, QuizResultType } from '../../../../store/context';\r\nimport { withApollo } from '../../../../utils/withApollo';\r\nimport { gql } from '@apollo/client';\r\nimport { BiCheckDouble } from 'react-icons/bi';\r\n\r\ninterface TakeQuizProps {}\r\nexport type UsersAnswerProps = {\r\n\tquestion_id: string;\r\n\tchoice_id: string;\r\n};\r\n\r\nconst TakeQuiz: React.FC<TakeQuizProps> = ({}) => {\r\n\tconst choiceBgHover = useColorModeValue(\r\n\t\t'gray.200',\r\n\t\t'rgba(255, 255, 255, 0.04)'\r\n\t);\r\n\r\n\tconst choiceBgSelected = useColorModeValue(\r\n\t\t'gray.300',\r\n\t\t'rgba(255, 255, 255, 0.06'\r\n\t);\r\n\r\n\tconst router = useRouter();\r\n\tconst questionsRefs: RefObject<any> = useRef([]);\r\n\r\n\tconst [usersAnswer, setUsersAnswer] = useState<UsersAnswerProps[]>([]);\r\n\r\n\tconst { setQuizResult, setAnswerByUser } = useContext(\r\n\t\tQuizResultContext\r\n\t) as QuizResultType;\r\n\r\n\tconst { data, loading } = useQuestionsQuery({\r\n\t\tvariables: {\r\n\t\t\tquiz_id: parseInt(router.query.id as string),\r\n\t\t\twithAnswer: false,\r\n\t\t},\r\n\t});\r\n\r\n\tconst { data: quizdata, loading: quizloading } = useSingleQuizQuery({\r\n\t\tvariables: {\r\n\t\t\tquiz_id: parseInt(router.query.id as string),\r\n\t\t},\r\n\t});\r\n\r\n\tconst [checkAnswer, { loading: checking }] = useCheckAnswerMutation();\r\n\r\n\tconst selectAnswer = (question_id: string, choice_id: string, i: number) => {\r\n\t\tconst isAnsweredIndex = usersAnswer.findIndex(\r\n\t\t\t(ans) => ans.question_id === question_id\r\n\t\t);\r\n\r\n\t\tif (isAnsweredIndex !== -1) {\r\n\t\t\tlet newArr = [...usersAnswer];\r\n\t\t\tnewArr[isAnsweredIndex] = { ...newArr[isAnsweredIndex], choice_id };\r\n\t\t\tsetUsersAnswer(newArr);\r\n\t\t} else {\r\n\t\t\tsetUsersAnswer((ans) => [...ans, { question_id, choice_id }]);\r\n\t\t}\r\n\r\n\t\t// automatic scrolling until second to the last question\r\n\t\tif (\r\n\t\t\tdata?.questions?.length !== undefined &&\r\n\t\t\tdata?.questions?.length > i + 1\r\n\t\t) {\r\n\t\t\tquestionsRefs.current[i + 1].scrollIntoView({ behavior: 'smooth' });\r\n\t\t}\r\n\t};\r\n\r\n\treturn (\r\n\t\t<MainContainer>\r\n\t\t\t<SubContainer position='relative'>\r\n\t\t\t\t<Flex justify='between'>\r\n\t\t\t\t\t<Box ml='10px'>\r\n\t\t\t\t\t\t<Heading as='h2' fontSize='24px'>\r\n\t\t\t\t\t\t\t{quizdata?.singleQuiz?.title}\r\n\t\t\t\t\t\t</Heading>\r\n\t\t\t\t\t\t<Flex mt='2px'>\r\n\t\t\t\t\t\t\t<Avatar\r\n\t\t\t\t\t\t\t\tsize='xs'\r\n\t\t\t\t\t\t\t\tsrc={quizdata?.singleQuiz?.author.avatar ?? ''}\r\n\t\t\t\t\t\t\t\tname={quizdata?.singleQuiz?.author.profile.name ?? ''}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t<Text ml='10px' as='p'>\r\n\t\t\t\t\t\t\t\t{quizdata?.singleQuiz?.author.profile.name}\r\n\t\t\t\t\t\t\t</Text>\r\n\t\t\t\t\t\t</Flex>\r\n\t\t\t\t\t</Box>\r\n\t\t\t\t\t{quizdata?.singleQuiz?.isTaken && (\r\n\t\t\t\t\t\t<Tooltip label='You have taken this' aria-label='A tooltip'>\r\n\t\t\t\t\t\t\t<Box>\r\n\t\t\t\t\t\t\t\t<Icon as={BiCheckDouble} color='gray.500' boxSize='24px' />\r\n\t\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t\t</Tooltip>\r\n\t\t\t\t\t)}\r\n\t\t\t\t</Flex>\r\n\t\t\t\t<VStack spacing='48px' my='20px'>\r\n\t\t\t\t\t{data?.questions?.map((question, i) => (\r\n\t\t\t\t\t\t<Box\r\n\t\t\t\t\t\t\tkey={question.question_id}\r\n\t\t\t\t\t\t\tref={(ref) => (questionsRefs.current[i] = ref)}\r\n\t\t\t\t\t\t\tw='full'\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t{question?.question_photo && (\r\n\t\t\t\t\t\t\t\t<Box\r\n\t\t\t\t\t\t\t\t\tmx='auto'\r\n\t\t\t\t\t\t\t\t\tmy='8px'\r\n\t\t\t\t\t\t\t\t\toverflow='hidden'\r\n\t\t\t\t\t\t\t\t\tborderRadius='sm'\r\n\t\t\t\t\t\t\t\t\tbg='gray.100'\r\n\t\t\t\t\t\t\t\t\tmaxW={['100%', '67%']}\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t<AspectRatio ratio={16 / 9}>\r\n\t\t\t\t\t\t\t\t\t\t<Image src={question.question_photo} layout='fill' />\r\n\t\t\t\t\t\t\t\t\t</AspectRatio>\r\n\t\t\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t<Box\r\n\t\t\t\t\t\t\t\tboxShadow='sm'\r\n\t\t\t\t\t\t\t\tpy='14px'\r\n\t\t\t\t\t\t\t\tpx='28px'\r\n\t\t\t\t\t\t\t\tborderRadius='4px'\r\n\t\t\t\t\t\t\t\tpos='relative'\r\n\t\t\t\t\t\t\t\tborderWidth='1px'\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t<VStack pos='absolute' left='8px' spacing='2px'>\r\n\t\t\t\t\t\t\t\t\t<Text as='p' fontSize='14px' lineHeight='1'>\r\n\t\t\t\t\t\t\t\t\t\t{i + 1}\r\n\t\t\t\t\t\t\t\t\t</Text>\r\n\t\t\t\t\t\t\t\t\t<Text as='small' fontSize='11px' lineHeight='1'>\r\n\t\t\t\t\t\t\t\t\t\t{data.questions?.length}\r\n\t\t\t\t\t\t\t\t\t</Text>\r\n\t\t\t\t\t\t\t\t</VStack>\r\n\t\t\t\t\t\t\t\t<Text\r\n\t\t\t\t\t\t\t\t\tfontSize='18px'\r\n\t\t\t\t\t\t\t\t\twordBreak='break-word'\r\n\t\t\t\t\t\t\t\t\twhiteSpace='pre-line'\r\n\t\t\t\t\t\t\t\t\tfontWeight='semibold'\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t{question.question}\r\n\t\t\t\t\t\t\t\t</Text>\r\n\t\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t\t\t<Grid\r\n\t\t\t\t\t\t\t\ttemplateColumns='repeat(auto-fit, minmax(360px, 1fr))'\r\n\t\t\t\t\t\t\t\tgap={2}\r\n\t\t\t\t\t\t\t\tmy='15px'\r\n\t\t\t\t\t\t\t\tmx={['20px', '0']}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t{question.choices.map((choice) => {\r\n\t\t\t\t\t\t\t\t\tconst answer = usersAnswer.find(\r\n\t\t\t\t\t\t\t\t\t\t(ans) => ans.question_id === question.question_id\r\n\t\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t\t\tconst isAnswered = answer?.choice_id === choice.choice_id;\r\n\r\n\t\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t\t<Box\r\n\t\t\t\t\t\t\t\t\t\t\tkey={choice.choice_id}\r\n\t\t\t\t\t\t\t\t\t\t\tborderWidth='1px'\r\n\t\t\t\t\t\t\t\t\t\t\tcursor='pointer'\r\n\t\t\t\t\t\t\t\t\t\t\tp='12px'\r\n\t\t\t\t\t\t\t\t\t\t\ttextAlign='center'\r\n\t\t\t\t\t\t\t\t\t\t\twordBreak='break-word'\r\n\t\t\t\t\t\t\t\t\t\t\twhiteSpace='pre-line'\r\n\t\t\t\t\t\t\t\t\t\t\t_hover={{ bg: !isAnswered ? choiceBgHover : '' }}\r\n\t\t\t\t\t\t\t\t\t\t\tonClick={() =>\r\n\t\t\t\t\t\t\t\t\t\t\t\tselectAnswer(question.question_id, choice.choice_id, i)\r\n\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\tbg={isAnswered ? choiceBgSelected : ''}\r\n\t\t\t\t\t\t\t\t\t\t\tboxShadow={isAnswered ? 'sm' : ''}\r\n\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t{choice?.choicePhoto && (\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Box\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tmb='8px'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\toverflow='hidden'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tborderRadius='sm'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tbg='gray.100'\r\n\t\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<AspectRatio ratio={16 / 9}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Image src={choice.choicePhoto} layout='fill' />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</AspectRatio>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t\t\t\t<Box>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Text>{choice.value}</Text>\r\n\t\t\t\t\t\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t))}\r\n\t\t\t\t</VStack>\r\n\r\n\t\t\t\t{!quizdata && quizloading && <Text>quiz loading...</Text>}\r\n\t\t\t\t{!data && loading && <Text>questoins loading...</Text>}\r\n\r\n\t\t\t\t<Box w='full' textAlign='center'>\r\n\t\t\t\t\t<Button\r\n\t\t\t\t\t\tisLoading={checking}\r\n\t\t\t\t\t\tonClick={async () => {\r\n\t\t\t\t\t\t\tawait checkAnswer({\r\n\t\t\t\t\t\t\t\tvariables: {\r\n\t\t\t\t\t\t\t\t\tdata: {\r\n\t\t\t\t\t\t\t\t\t\tquiz_id: parseInt(router.query.id as string),\r\n\t\t\t\t\t\t\t\t\t\tusers_answer: usersAnswer,\r\n\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\tupdate: (cache, { data }) => {\r\n\t\t\t\t\t\t\t\t\tconst id = parseInt(router.query.id as string);\r\n\r\n\t\t\t\t\t\t\t\t\trouter.push(`/quiz/take/${id}/result`);\r\n\r\n\t\t\t\t\t\t\t\t\tconst qdata = cache.readFragment<{\r\n\t\t\t\t\t\t\t\t\t\ttakersCount: number;\r\n\t\t\t\t\t\t\t\t\t}>({\r\n\t\t\t\t\t\t\t\t\t\tid: 'Quiz:' + id,\r\n\t\t\t\t\t\t\t\t\t\tfragment: gql`\r\n\t\t\t\t\t\t\t\t\t\t\tfragment _ on Quiz {\r\n\t\t\t\t\t\t\t\t\t\t\t\ttakersCount\r\n\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t`,\r\n\t\t\t\t\t\t\t\t\t});\r\n\r\n\t\t\t\t\t\t\t\t\tlet newTakersCount: number = qdata?.takersCount ?? 0;\r\n\r\n\t\t\t\t\t\t\t\t\tcache.writeFragment({\r\n\t\t\t\t\t\t\t\t\t\tid: 'Quiz:' + id,\r\n\t\t\t\t\t\t\t\t\t\tfragment: gql`\r\n\t\t\t\t\t\t\t\t\t\t\tfragment _ on Quiz {\r\n\t\t\t\t\t\t\t\t\t\t\t\ttakersCount\r\n\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t`,\r\n\t\t\t\t\t\t\t\t\t\tdata: {\r\n\t\t\t\t\t\t\t\t\t\t\ttakersCount: (newTakersCount += 1),\r\n\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t});\r\n\r\n\t\t\t\t\t\t\t\t\tsetAnswerByUser(usersAnswer);\r\n\t\t\t\t\t\t\t\t\tsetQuizResult(data?.checkAnswer);\r\n\t\t\t\t\t\t\t\t\tsetUsersAnswer([]);\r\n\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\tSumbit answer\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t</Box>\r\n\t\t\t</SubContainer>\r\n\t\t</MainContainer>\r\n\t);\r\n};\r\n\r\nexport default withApollo({ ssr: true })(TakeQuiz);\r\n"]},"metadata":{},"sourceType":"module"}