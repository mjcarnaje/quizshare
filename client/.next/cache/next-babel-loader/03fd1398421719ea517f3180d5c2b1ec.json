{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\mj\\\\Documents\\\\Codes\\\\PROJECTS\\\\quizshare-typescript\\\\client\\\\src\\\\components\\\\create-update-quiz\\\\ChoiceArray.tsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport { AspectRatio, Box, Button, Flex, IconButton, Radio, RadioGroup, SimpleGrid, Skeleton, Spacer, Tooltip } from '@chakra-ui/react';\nimport Image from 'next/image';\nimport { useRouter } from 'next/dist/client/router';\nimport React, { useEffect, useState } from 'react';\nimport { Controller, useFieldArray, useFormContext } from 'react-hook-form';\nimport { BsPlusSquare } from 'react-icons/bs';\nimport { MdDelete, MdPhotoSizeSelectActual } from 'react-icons/md';\nimport TextareaAutosize from 'react-textarea-autosize';\nimport { v4 as uuid } from 'uuid';\nimport { uploadCloudinaryImage } from '../../utils/uploadImage';\nimport QuizInputUI from '../custom-inputs/QuizInputUI';\n\nvar ChoiceArray = function ChoiceArray(_ref) {\n  _s();\n\n  var questionIndex = _ref.questionIndex,\n      answer = _ref.answer,\n      autoAddChoiceInput = _ref.autoAddChoiceInput;\n  var router = useRouter();\n\n  var _useState = useState([]),\n      images = _useState[0],\n      setImages = _useState[1];\n\n  var _useFormContext = useFormContext(),\n      control = _useFormContext.control,\n      register = _useFormContext.register,\n      errors = _useFormContext.errors;\n\n  var _useFieldArray = useFieldArray({\n    control: control,\n    name: \"questions[\".concat(questionIndex, \"].choices\")\n  }),\n      fields = _useFieldArray.fields,\n      append = _useFieldArray.append,\n      remove = _useFieldArray.remove;\n\n  var uploadImage = function uploadImage(choice_id) {\n    uploadCloudinaryImage(function (error, photos) {\n      var imagesThatAreNotChanged = images.filter(function (img) {\n        return img.choice_id !== choice_id;\n      });\n\n      if (!error && photos.event === 'queues-start') {\n        setImages([].concat(_toConsumableArray(imagesThatAreNotChanged), [{\n          choice_id: choice_id,\n          url: 'loading'\n        }]));\n      } else if (!error && photos.event === 'success') {\n        setImages([].concat(_toConsumableArray(imagesThatAreNotChanged), [{\n          choice_id: choice_id,\n          url: photos.info.url\n        }]));\n      } else if (error) {\n        console.error(error);\n      }\n    });\n  };\n\n  var addChoice = function addChoice() {\n    var shouldFocus = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;\n    append({\n      choice_id: uuid(),\n      value: '',\n      choicePhoto: ''\n    }, shouldFocus);\n  };\n\n  useEffect(function () {\n    if (router.pathname.includes('edit') && !autoAddChoiceInput) return;\n    addChoice(false);\n    addChoice(false);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Box, {\n    children: [/*#__PURE__*/_jsxDEV(Flex, {\n      children: [/*#__PURE__*/_jsxDEV(Spacer, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 5\n      }, _this), /*#__PURE__*/_jsxDEV(Button, {\n        leftIcon: /*#__PURE__*/_jsxDEV(BsPlusSquare, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 16\n        }, _this),\n        colorScheme: \"purple\",\n        variant: \"ghost\",\n        size: \"xs\",\n        onClick: function onClick() {\n          return addChoice();\n        },\n        children: \"Add Choice\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 5\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 4\n    }, _this), /*#__PURE__*/_jsxDEV(Controller, {\n      control: control,\n      name: \"questions[\".concat(questionIndex, \"].answer\"),\n      rules: {\n        required: true\n      },\n      defaultValue: answer,\n      render: function render(_ref2) {\n        var onChange = _ref2.onChange,\n            onBlur = _ref2.onBlur,\n            value = _ref2.value;\n        return /*#__PURE__*/_jsxDEV(RadioGroup, {\n          onChange: onChange,\n          onBlur: onBlur,\n          value: value,\n          defaultValue: answer,\n          children: /*#__PURE__*/_jsxDEV(SimpleGrid, {\n            my: \"10px\",\n            p: \"2px\",\n            columns: [1, 2],\n            spacing: \"10px\",\n            children: fields.map(function (choice, i) {\n              var _images$img, _errors$questions, _errors$questions$que, _errors$questions$que2, _errors$questions$que3, _errors$questions2, _errors$questions2$qu;\n\n              var img = images.findIndex(function (i) {\n                return i.choice_id === choice.choice_id;\n              });\n              var url = ((_images$img = images[img]) === null || _images$img === void 0 ? void 0 : _images$img.url) || choice.choicePhoto;\n              return /*#__PURE__*/_jsxDEV(Box, {\n                children: /*#__PURE__*/_jsxDEV(Box, {\n                  borderRadius: \"md\",\n                  pos: \"relative\",\n                  overflow: \"hidden\",\n                  borderWidth: \"1px\",\n                  p: \"4px\",\n                  children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"hidden\",\n                    name: \"questions[\".concat(questionIndex, \"].choices[\").concat(i, \"].choice_id\"),\n                    defaultValue: choice.choice_id,\n                    ref: register()\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 131,\n                    columnNumber: 12\n                  }, _this), img !== -1 && /*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"hidden\",\n                    name: \"questions[\".concat(questionIndex, \"].choices[\").concat(i, \"].choicePhoto\"),\n                    value: url,\n                    ref: register()\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 138,\n                    columnNumber: 13\n                  }, _this), url && /*#__PURE__*/_jsxDEV(Box, {\n                    p: \"4px\",\n                    mb: \"2px\",\n                    children: /*#__PURE__*/_jsxDEV(Skeleton, {\n                      isLoaded: url !== 'loading',\n                      children: /*#__PURE__*/_jsxDEV(Box, {\n                        borderRadius: \"8px\",\n                        overflow: \"hidden\",\n                        bg: \"gray.100\",\n                        children: /*#__PURE__*/_jsxDEV(AspectRatio, {\n                          maxW: \"full\",\n                          ratio: 16 / 9,\n                          children: url !== 'loading' ? /*#__PURE__*/_jsxDEV(Image, {\n                            src: url,\n                            alt: \"Choice \".concat(i, \" photo\"),\n                            layout: \"fill\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 155,\n                            columnNumber: 18\n                          }, _this) : /*#__PURE__*/_jsxDEV(Box, {}, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 161,\n                            columnNumber: 18\n                          }, _this)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 153,\n                          columnNumber: 16\n                        }, _this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 148,\n                        columnNumber: 15\n                      }, _this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 147,\n                      columnNumber: 14\n                    }, _this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 146,\n                    columnNumber: 13\n                  }, _this), /*#__PURE__*/_jsxDEV(QuizInputUI, {\n                    register: register({\n                      required: true\n                    }),\n                    input: \"questions[\".concat(questionIndex, \"].choices[\").concat(i, \"].value\"),\n                    as: TextareaAutosize,\n                    placeholder: \"Type your answer here...\",\n                    resize: \"none\",\n                    overflow: \"hidden\",\n                    defaultValue: choice.value,\n                    py: \"7px\",\n                    error: (_errors$questions = errors.questions) === null || _errors$questions === void 0 ? void 0 : (_errors$questions$que = _errors$questions[questionIndex]) === null || _errors$questions$que === void 0 ? void 0 : (_errors$questions$que2 = _errors$questions$que.choices) === null || _errors$questions$que2 === void 0 ? void 0 : (_errors$questions$que3 = _errors$questions$que2[i]) === null || _errors$questions$que3 === void 0 ? void 0 : _errors$questions$que3.value,\n                    errorMessage: \"Choice \".concat(i + 1, \" is required field: type or remove it.\\uD83D\\uDE09\"),\n                    isChoiceInput: true\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 168,\n                    columnNumber: 12\n                  }, _this), /*#__PURE__*/_jsxDEV(Flex, {\n                    pos: \"absolute\",\n                    bottom: \"2px\",\n                    left: \"4px\",\n                    right: \"2px\",\n                    children: [/*#__PURE__*/_jsxDEV(Radio, {\n                      value: choice.choice_id,\n                      colorScheme: \"green\",\n                      isInvalid: !!((_errors$questions2 = errors.questions) === null || _errors$questions2 === void 0 ? void 0 : (_errors$questions2$qu = _errors$questions2[questionIndex]) === null || _errors$questions2$qu === void 0 ? void 0 : _errors$questions2$qu.answer),\n                      children: \"correct answer\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 186,\n                      columnNumber: 13\n                    }, _this), /*#__PURE__*/_jsxDEV(Spacer, {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 195,\n                      columnNumber: 13\n                    }, _this), /*#__PURE__*/_jsxDEV(Tooltip, {\n                      hasArrow: true,\n                      label: (choice === null || choice === void 0 ? void 0 : choice.choicePhoto) ? 'Replace choice photo' : 'Add choice photo',\n                      children: /*#__PURE__*/_jsxDEV(IconButton, {\n                        isRound: true,\n                        icon: /*#__PURE__*/_jsxDEV(MdPhotoSizeSelectActual, {}, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 206,\n                          columnNumber: 21\n                        }, _this),\n                        size: \"xs\",\n                        variant: \"ghost\",\n                        color: \"gray.400\",\n                        fontSize: \"13px\",\n                        onClick: function onClick() {\n                          return uploadImage(choice.choice_id);\n                        },\n                        \"aria-label\": \"upload choice_photo button\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 204,\n                        columnNumber: 14\n                      }, _this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 196,\n                      columnNumber: 13\n                    }, _this), /*#__PURE__*/_jsxDEV(Tooltip, {\n                      hasArrow: true,\n                      label: \"Remove choice\",\n                      children: /*#__PURE__*/_jsxDEV(IconButton, {\n                        isRound: true,\n                        icon: /*#__PURE__*/_jsxDEV(MdDelete, {}, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 218,\n                          columnNumber: 21\n                        }, _this),\n                        size: \"xs\",\n                        variant: \"ghost\",\n                        color: \"gray.400\",\n                        fontSize: \"13px\",\n                        onClick: function onClick() {\n                          return remove(i);\n                        },\n                        isDisabled: fields.length === 1 ? true : false,\n                        \"aria-label\": \"remove choice\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 216,\n                        columnNumber: 14\n                      }, _this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 215,\n                      columnNumber: 13\n                    }, _this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 185,\n                    columnNumber: 12\n                  }, _this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 124,\n                  columnNumber: 11\n                }, _this)\n              }, choice.choice_id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 123,\n                columnNumber: 10\n              }, _this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 7\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 6\n        }, _this);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 4\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 90,\n    columnNumber: 3\n  }, _this);\n};\n\n_s(ChoiceArray, \"yMSVlET5vjqymyZOWM6M4146aPE=\", false, function () {\n  return [useRouter, useFormContext, useFieldArray];\n});\n\n_c = ChoiceArray;\nexport default ChoiceArray;\n\nvar _c;\n\n$RefreshReg$(_c, \"ChoiceArray\");","map":{"version":3,"sources":["C:/Users/mj/Documents/Codes/PROJECTS/quizshare-typescript/client/src/components/create-update-quiz/ChoiceArray.tsx"],"names":["AspectRatio","Box","Button","Flex","IconButton","Radio","RadioGroup","SimpleGrid","Skeleton","Spacer","Tooltip","Image","useRouter","React","useEffect","useState","Controller","useFieldArray","useFormContext","BsPlusSquare","MdDelete","MdPhotoSizeSelectActual","TextareaAutosize","v4","uuid","uploadCloudinaryImage","QuizInputUI","ChoiceArray","questionIndex","answer","autoAddChoiceInput","router","images","setImages","control","register","errors","name","fields","append","remove","uploadImage","choice_id","error","photos","imagesThatAreNotChanged","filter","img","event","url","info","console","addChoice","shouldFocus","value","choicePhoto","pathname","includes","required","onChange","onBlur","map","choice","i","findIndex","questions","choices","length"],"mappings":"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","sourcesContent":["import {\r\n\tAspectRatio,\r\n\tBox,\r\n\tButton,\r\n\tFlex,\r\n\tIconButton,\r\n\tRadio,\r\n\tRadioGroup,\r\n\tSimpleGrid,\r\n\tSkeleton,\r\n\tSpacer,\r\n\tTooltip,\r\n} from '@chakra-ui/react';\r\nimport Image from 'next/image';\r\nimport { useRouter } from 'next/dist/client/router';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { Controller, useFieldArray, useFormContext } from 'react-hook-form';\r\nimport { BsPlusSquare } from 'react-icons/bs';\r\nimport { MdDelete, MdPhotoSizeSelectActual } from 'react-icons/md';\r\nimport TextareaAutosize from 'react-textarea-autosize';\r\nimport { v4 as uuid } from 'uuid';\r\nimport { ChoiceInput, QuizInput } from '../../generated/graphql';\r\nimport { uploadCloudinaryImage } from '../../utils/uploadImage';\r\nimport QuizInputUI from '../custom-inputs/QuizInputUI';\r\n\r\ndeclare global {\r\n\tinterface Window {\r\n\t\tcloudinary: any;\r\n\t}\r\n}\r\ninterface ChoiceArrayProps {\r\n\tquestionIndex: number;\r\n\tanswer: string;\r\n\tautoAddChoiceInput?: boolean;\r\n}\r\n\r\nconst ChoiceArray: React.FC<ChoiceArrayProps> = ({\r\n\tquestionIndex,\r\n\tanswer,\r\n\tautoAddChoiceInput,\r\n}) => {\r\n\tconst router = useRouter();\r\n\tconst [images, setImages] = useState<\r\n\t\t{ choice_id: string; url: string | 'loading' }[]\r\n\t>([]);\r\n\r\n\tconst { control, register, errors } = useFormContext<QuizInput>();\r\n\tconst { fields, append, remove } = useFieldArray<ChoiceInput>({\r\n\t\tcontrol,\r\n\t\tname: `questions[${questionIndex}].choices`,\r\n\t});\r\n\r\n\tconst uploadImage = (choice_id: string) => {\r\n\t\tuploadCloudinaryImage(\r\n\t\t\t(error: any, photos: { event: string; info: { url: any } }) => {\r\n\t\t\t\tconst imagesThatAreNotChanged = images.filter(\r\n\t\t\t\t\t(img) => img.choice_id !== choice_id\r\n\t\t\t\t);\r\n\t\t\t\tif (!error && photos.event === 'queues-start') {\r\n\t\t\t\t\tsetImages([\r\n\t\t\t\t\t\t...imagesThatAreNotChanged,\r\n\t\t\t\t\t\t{ choice_id: choice_id, url: 'loading' },\r\n\t\t\t\t\t]);\r\n\t\t\t\t} else if (!error && photos.event === 'success') {\r\n\t\t\t\t\tsetImages([\r\n\t\t\t\t\t\t...imagesThatAreNotChanged,\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tchoice_id: choice_id,\r\n\t\t\t\t\t\t\turl: photos.info.url,\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t]);\r\n\t\t\t\t} else if (error) {\r\n\t\t\t\t\tconsole.error(error);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t);\r\n\t};\r\n\r\n\tconst addChoice = (shouldFocus: boolean = true) => {\r\n\t\tappend({ choice_id: uuid(), value: '', choicePhoto: '' }, shouldFocus);\r\n\t};\r\n\r\n\tuseEffect(() => {\r\n\t\tif (router.pathname.includes('edit') && !autoAddChoiceInput) return;\r\n\t\taddChoice(false);\r\n\t\taddChoice(false);\r\n\t}, []);\r\n\r\n\treturn (\r\n\t\t<Box>\r\n\t\t\t<Flex>\r\n\t\t\t\t<Spacer />\r\n\t\t\t\t<Button\r\n\t\t\t\t\tleftIcon={<BsPlusSquare />}\r\n\t\t\t\t\tcolorScheme='purple'\r\n\t\t\t\t\tvariant='ghost'\r\n\t\t\t\t\tsize='xs'\r\n\t\t\t\t\tonClick={() => addChoice()}\r\n\t\t\t\t>\r\n\t\t\t\t\tAdd Choice\r\n\t\t\t\t</Button>\r\n\t\t\t</Flex>\r\n\t\t\t<Controller\r\n\t\t\t\tcontrol={control}\r\n\t\t\t\tname={`questions[${questionIndex}].answer`}\r\n\t\t\t\trules={{ required: true }}\r\n\t\t\t\tdefaultValue={answer}\r\n\t\t\t\trender={({ onChange, onBlur, value }) => (\r\n\t\t\t\t\t<RadioGroup\r\n\t\t\t\t\t\tonChange={onChange}\r\n\t\t\t\t\t\tonBlur={onBlur}\r\n\t\t\t\t\t\tvalue={value}\r\n\t\t\t\t\t\tdefaultValue={answer}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<SimpleGrid my='10px' p='2px' columns={[1, 2]} spacing='10px'>\r\n\t\t\t\t\t\t\t{fields.map((choice, i) => {\r\n\t\t\t\t\t\t\t\tconst img = images.findIndex(\r\n\t\t\t\t\t\t\t\t\t(i) => i.choice_id === choice.choice_id\r\n\t\t\t\t\t\t\t\t);\r\n\r\n\t\t\t\t\t\t\t\tconst url = images[img]?.url || choice.choicePhoto!;\r\n\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t<Box key={choice.choice_id}>\r\n\t\t\t\t\t\t\t\t\t\t<Box\r\n\t\t\t\t\t\t\t\t\t\t\tborderRadius='md'\r\n\t\t\t\t\t\t\t\t\t\t\tpos='relative'\r\n\t\t\t\t\t\t\t\t\t\t\toverflow='hidden'\r\n\t\t\t\t\t\t\t\t\t\t\tborderWidth='1px'\r\n\t\t\t\t\t\t\t\t\t\t\tp='4px'\r\n\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\t\t\t\t\t\ttype='hidden'\r\n\t\t\t\t\t\t\t\t\t\t\t\tname={`questions[${questionIndex}].choices[${i}].choice_id`}\r\n\t\t\t\t\t\t\t\t\t\t\t\tdefaultValue={choice.choice_id}\r\n\t\t\t\t\t\t\t\t\t\t\t\tref={register()}\r\n\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t{img !== -1 && (\r\n\t\t\t\t\t\t\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\t\t\t\t\t\t\ttype='hidden'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tname={`questions[${questionIndex}].choices[${i}].choicePhoto`}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={url}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tref={register()}\r\n\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t\t\t\t{url && (\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Box p='4px' mb='2px'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Skeleton isLoaded={url !== 'loading'}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Box\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tborderRadius='8px'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\toverflow='hidden'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tbg='gray.100'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<AspectRatio maxW='full' ratio={16 / 9}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{url !== 'loading' ? (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Image\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsrc={url}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\talt={`Choice ${i} photo`}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tlayout='fill'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Box></Box>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</AspectRatio>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</Skeleton>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t\t\t\t<QuizInputUI\r\n\t\t\t\t\t\t\t\t\t\t\t\tregister={register({ required: true })}\r\n\t\t\t\t\t\t\t\t\t\t\t\tinput={`questions[${questionIndex}].choices[${i}].value`}\r\n\t\t\t\t\t\t\t\t\t\t\t\tas={TextareaAutosize}\r\n\t\t\t\t\t\t\t\t\t\t\t\tplaceholder='Type your answer here...'\r\n\t\t\t\t\t\t\t\t\t\t\t\tresize='none'\r\n\t\t\t\t\t\t\t\t\t\t\t\toverflow='hidden'\r\n\t\t\t\t\t\t\t\t\t\t\t\tdefaultValue={choice.value}\r\n\t\t\t\t\t\t\t\t\t\t\t\tpy='7px'\r\n\t\t\t\t\t\t\t\t\t\t\t\terror={\r\n\t\t\t\t\t\t\t\t\t\t\t\t\terrors.questions?.[questionIndex]?.choices?.[i]?.value\r\n\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\terrorMessage={`Choice ${\r\n\t\t\t\t\t\t\t\t\t\t\t\t\ti + 1\r\n\t\t\t\t\t\t\t\t\t\t\t\t} is required field: type or remove it.😉`}\r\n\t\t\t\t\t\t\t\t\t\t\t\tisChoiceInput\r\n\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t<Flex pos='absolute' bottom='2px' left='4px' right='2px'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Radio\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={choice.choice_id}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tcolorScheme='green'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tisInvalid={\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t!!errors.questions?.[questionIndex]?.answer\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tcorrect answer\r\n\t\t\t\t\t\t\t\t\t\t\t\t</Radio>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Spacer />\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Tooltip\r\n\t\t\t\t\t\t\t\t\t\t\t\t\thasArrow\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tlabel={\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tchoice?.choicePhoto\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t? 'Replace choice photo'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t: 'Add choice photo'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<IconButton\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tisRound\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\ticon={<MdPhotoSizeSelectActual />}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tsize='xs'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tvariant='ghost'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tcolor='gray.400'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tfontSize='13px'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={() => uploadImage(choice.choice_id!)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\taria-label='upload choice_photo button'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</Tooltip>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Tooltip hasArrow label='Remove choice'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<IconButton\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tisRound\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\ticon={<MdDelete />}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tsize='xs'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tvariant='ghost'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tcolor='gray.400'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tfontSize='13px'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={() => remove(i)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tisDisabled={fields.length === 1 ? true : false}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\taria-label='remove choice'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</Tooltip>\r\n\t\t\t\t\t\t\t\t\t\t\t</Flex>\r\n\t\t\t\t\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t</SimpleGrid>\r\n\t\t\t\t\t</RadioGroup>\r\n\t\t\t\t)}\r\n\t\t\t/>\r\n\t\t</Box>\r\n\t);\r\n};\r\nexport default ChoiceArray;\r\n"]},"metadata":{},"sourceType":"module"}