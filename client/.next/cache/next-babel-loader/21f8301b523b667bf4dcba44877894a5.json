{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\mj\\\\Documents\\\\Codes\\\\PROJECTS\\\\quizshare-typescript\\\\client\\\\src\\\\components\\\\create-update-quiz\\\\QuestionArray.tsx\";\nimport { Alert, AlertIcon, AspectRatio, Box, Button, Flex, IconButton, Skeleton, Switch, Text, Tooltip } from '@chakra-ui/react';\nimport React, { useEffect, useState } from 'react';\nimport { Controller, useFieldArray, useFormContext } from 'react-hook-form';\nimport { MdDelete, MdPhotoSizeSelectActual } from 'react-icons/md';\nimport TextareaAutosize from 'react-textarea-autosize';\nimport { v4 as uuid } from 'uuid';\nimport ChoiceArray from './ChoiceArray';\nimport QuizInputUI from '../custom-inputs/QuizInputUI';\nimport Image from 'next/image';\nimport { uploadCloudinaryImage } from '../../utils/uploadImage';\nimport { HStack } from '@chakra-ui/react';\nimport { useRouter } from 'next/dist/client/router';\n\nconst QuestionArray = ({\n  autoAddChoiceInput,\n  setAutoAddChoiceInput\n}) => {\n  const router = useRouter();\n  const {\n    0: images,\n    1: setImages\n  } = useState([]);\n  const {\n    control,\n    register,\n    errors,\n    watch\n  } = useFormContext();\n  const {\n    fields,\n    append,\n    remove\n  } = useFieldArray({\n    control,\n    name: 'questions'\n  });\n\n  const addQuestion = (shouldFocus = true) => {\n    append({\n      question_id: uuid(),\n      question: '',\n      choices: [],\n      answer: '',\n      with_explanation: false,\n      explanation: '',\n      with_hint: false,\n      hint: ''\n    }, shouldFocus);\n  };\n\n  const uploadImage = question_id => {\n    uploadCloudinaryImage((error, photos) => {\n      const imagesThatAreNotChanged = images.filter(img => img.question_id !== question_id);\n\n      if (!error && photos.event === 'queues-start') {\n        setImages([...imagesThatAreNotChanged, {\n          question_id: question_id,\n          url: 'loading'\n        }]);\n      } else if (!error && photos.event === 'success') {\n        setImages([...imagesThatAreNotChanged, {\n          question_id: question_id,\n          url: photos.info.url\n        }]);\n      } else if (error) {\n        console.error(error);\n      }\n    });\n  };\n\n  const addQuestionForEdit = callback => {\n    setAutoAddChoiceInput(true);\n    callback();\n  };\n\n  useEffect(() => {\n    if (router.pathname.includes('edit')) return;\n    addQuestion(false);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Box, {\n    w: \"full\",\n    children: [fields.map((question, i) => {\n      var _images$imgIndex, _errors$questions, _errors$questions$i, _errors$questions2, _errors$questions2$i, _errors$questions3, _errors$questions3$i, _errors$questions4, _errors$questions4$i;\n\n      const imgIndex = images.findIndex(i => i.question_id === question.question_id);\n      const url = ((_images$imgIndex = images[imgIndex]) === null || _images$imgIndex === void 0 ? void 0 : _images$imgIndex.url) || question.question_photo;\n      const withExplanation = watch(`questions[${i}].with_explanation`);\n      const withHint = watch(`questions[${i}].with_hint`);\n      return /*#__PURE__*/_jsxDEV(Box, {\n        borderWidth: \"1px\",\n        p: \"12px\",\n        borderRadius: \"8px\",\n        my: \"20px\",\n        boxShadow: \"sm\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"hidden\",\n          name: `questions[${i}].question_id`,\n          defaultValue: question.question_id,\n          ref: register()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 7\n        }, this), imgIndex !== -1 && /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"hidden\",\n          name: `questions[${i}].question_photo`,\n          value: url,\n          ref: register()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 8\n        }, this), /*#__PURE__*/_jsxDEV(Flex, {\n          align: \"center\",\n          justify: \"space-between\",\n          pb: \"5px\",\n          children: [/*#__PURE__*/_jsxDEV(Text, {\n            fontSize: \"13px\",\n            children: `QUESTION ${i + 1}`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 8\n          }, this), /*#__PURE__*/_jsxDEV(HStack, {\n            spacing: \"10px\",\n            children: [/*#__PURE__*/_jsxDEV(Tooltip, {\n              hasArrow: true,\n              label: \"Add explanation\",\n              children: /*#__PURE__*/_jsxDEV(Controller, {\n                control: control,\n                name: `questions[${i}].with_explanation`,\n                defaultValue: question.with_explanation,\n                render: ({\n                  onChange,\n                  value\n                }) => {\n                  return /*#__PURE__*/_jsxDEV(Switch, {\n                    size: \"sm\",\n                    colorScheme: \"purple\",\n                    onChange: e => {\n                      onChange(e.target.checked);\n                    },\n                    isChecked: value\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 143,\n                    columnNumber: 13\n                  }, this);\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 137,\n                columnNumber: 10\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 136,\n              columnNumber: 9\n            }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n              hasArrow: true,\n              label: \"Add hint\",\n              children: /*#__PURE__*/_jsxDEV(Controller, {\n                control: control,\n                name: `questions[${i}].with_hint`,\n                defaultValue: question.with_hint,\n                render: ({\n                  onChange,\n                  value\n                }) => {\n                  return /*#__PURE__*/_jsxDEV(Switch, {\n                    size: \"sm\",\n                    colorScheme: \"purple\",\n                    onChange: e => {\n                      onChange(e.target.checked);\n                    },\n                    isChecked: value\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 162,\n                    columnNumber: 13\n                  }, this);\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 156,\n                columnNumber: 10\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 155,\n              columnNumber: 9\n            }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n              hasArrow: true,\n              label: (question === null || question === void 0 ? void 0 : question.question_photo) ? 'Replace question photo' : 'Add question photo',\n              children: /*#__PURE__*/_jsxDEV(IconButton, {\n                isRound: true,\n                icon: /*#__PURE__*/_jsxDEV(MdPhotoSizeSelectActual, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 184,\n                  columnNumber: 17\n                }, this),\n                size: \"sm\",\n                variant: \"ghost\",\n                color: \"gray.400\",\n                fontSize: \"15px\",\n                onClick: () => uploadImage(question.question_id),\n                \"aria-label\": \"upload question_photo button\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 182,\n                columnNumber: 10\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 174,\n              columnNumber: 9\n            }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n              hasArrow: true,\n              label: \"Remove question\",\n              children: /*#__PURE__*/_jsxDEV(IconButton, {\n                isRound: true,\n                icon: /*#__PURE__*/_jsxDEV(MdDelete, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 196,\n                  columnNumber: 17\n                }, this),\n                size: \"sm\",\n                variant: \"ghost\",\n                color: \"gray.400\",\n                fontSize: \"15px\",\n                onClick: () => remove(i),\n                isDisabled: fields.length === 1 ? true : false,\n                \"aria-label\": \"Remove question\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 194,\n                columnNumber: 10\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 193,\n              columnNumber: 9\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 8\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 7\n        }, this), url && /*#__PURE__*/_jsxDEV(Box, {\n          p: \"4px\",\n          mb: \"2px\",\n          children: /*#__PURE__*/_jsxDEV(Skeleton, {\n            isLoaded: url !== 'loading',\n            children: /*#__PURE__*/_jsxDEV(Box, {\n              borderRadius: \"8px\",\n              overflow: \"hidden\",\n              bg: \"gray.100\",\n              children: /*#__PURE__*/_jsxDEV(AspectRatio, {\n                maxW: \"full\",\n                ratio: 16 / 9,\n                children: url !== 'loading' ? /*#__PURE__*/_jsxDEV(Image, {\n                  src: url,\n                  alt: `Quiz ${i} photo`,\n                  layout: \"fill\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 215,\n                  columnNumber: 13\n                }, this) : /*#__PURE__*/_jsxDEV(Box, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 221,\n                  columnNumber: 13\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 213,\n                columnNumber: 11\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 212,\n              columnNumber: 10\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 211,\n            columnNumber: 9\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 8\n        }, this), /*#__PURE__*/_jsxDEV(QuizInputUI, {\n          register: register({\n            required: true\n          }),\n          input: `questions[${i}].question`,\n          as: TextareaAutosize,\n          placeholder: \"Type the question here..\",\n          resize: \"none\",\n          overflow: \"hidden\",\n          py: \"7px\",\n          error: (_errors$questions = errors.questions) === null || _errors$questions === void 0 ? void 0 : (_errors$questions$i = _errors$questions[i]) === null || _errors$questions$i === void 0 ? void 0 : _errors$questions$i.question,\n          errorMessage: `Question ${i + 1} is required field`,\n          defaultValue: question.question\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 229,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(ChoiceArray, {\n          questionIndex: i,\n          answer: question.answer,\n          autoAddChoiceInput: autoAddChoiceInput\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 241,\n          columnNumber: 7\n        }, this), withExplanation && /*#__PURE__*/_jsxDEV(QuizInputUI, {\n          register: register({\n            required: true\n          }),\n          input: `questions[${i}].explanation`,\n          as: TextareaAutosize,\n          placeholder: \"Type the explanation here..\",\n          resize: \"none\",\n          overflow: \"hidden\",\n          py: \"7px\",\n          error: (_errors$questions2 = errors.questions) === null || _errors$questions2 === void 0 ? void 0 : (_errors$questions2$i = _errors$questions2[i]) === null || _errors$questions2$i === void 0 ? void 0 : _errors$questions2$i.explanation,\n          errorMessage: `Type the explanation or you can just turn it off`,\n          defaultValue: question.explanation\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 247,\n          columnNumber: 8\n        }, this), withHint && /*#__PURE__*/_jsxDEV(QuizInputUI, {\n          register: register({\n            required: true\n          }),\n          input: `questions[${i}].hint`,\n          as: TextareaAutosize,\n          placeholder: \"Type the hint here..\",\n          resize: \"none\",\n          overflow: \"hidden\",\n          py: \"7px\",\n          error: (_errors$questions3 = errors.questions) === null || _errors$questions3 === void 0 ? void 0 : (_errors$questions3$i = _errors$questions3[i]) === null || _errors$questions3$i === void 0 ? void 0 : _errors$questions3$i.hint,\n          errorMessage: `Type the hint or you can just turn it off`,\n          defaultValue: question.hint\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 261,\n          columnNumber: 8\n        }, this), ((_errors$questions4 = errors.questions) === null || _errors$questions4 === void 0 ? void 0 : (_errors$questions4$i = _errors$questions4[i]) === null || _errors$questions4$i === void 0 ? void 0 : _errors$questions4$i.answer) && /*#__PURE__*/_jsxDEV(Alert, {\n          status: \"error\",\n          borderRadius: \"5px\",\n          children: [/*#__PURE__*/_jsxDEV(AlertIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 276,\n            columnNumber: 9\n          }, this), \"Please select the correct answer to this question\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 275,\n          columnNumber: 8\n        }, this)]\n      }, question.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 6\n      }, this);\n    }), /*#__PURE__*/_jsxDEV(Button, {\n      colorScheme: \"purple\",\n      size: \"lg\",\n      w: \"full\",\n      onClick: () => {\n        if (router.pathname.includes('edit') && !autoAddChoiceInput) {\n          return addQuestionForEdit(addQuestion);\n        }\n\n        addQuestion();\n      },\n      children: \"Add Question\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 283,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 100,\n    columnNumber: 3\n  }, this);\n};\n\nexport default QuestionArray;","map":{"version":3,"sources":["C:/Users/mj/Documents/Codes/PROJECTS/quizshare-typescript/client/src/components/create-update-quiz/QuestionArray.tsx"],"names":["Alert","AlertIcon","AspectRatio","Box","Button","Flex","IconButton","Skeleton","Switch","Text","Tooltip","React","useEffect","useState","Controller","useFieldArray","useFormContext","MdDelete","MdPhotoSizeSelectActual","TextareaAutosize","v4","uuid","ChoiceArray","QuizInputUI","Image","uploadCloudinaryImage","HStack","useRouter","QuestionArray","autoAddChoiceInput","setAutoAddChoiceInput","router","images","setImages","control","register","errors","watch","fields","append","remove","name","addQuestion","shouldFocus","question_id","question","choices","answer","with_explanation","explanation","with_hint","hint","uploadImage","error","photos","imagesThatAreNotChanged","filter","img","event","url","info","console","addQuestionForEdit","callback","pathname","includes","map","i","imgIndex","findIndex","question_photo","withExplanation","withHint","onChange","value","e","target","checked","length","required","questions","id"],"mappings":"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","sourcesContent":["import {\r\n\tAlert,\r\n\tAlertIcon,\r\n\tAspectRatio,\r\n\tBox,\r\n\tButton,\r\n\tFlex,\r\n\tIconButton,\r\n\tSkeleton,\r\n\tSwitch,\r\n\tText,\r\n\tTooltip,\r\n} from '@chakra-ui/react';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { Controller, useFieldArray, useFormContext } from 'react-hook-form';\r\nimport { MdDelete, MdPhotoSizeSelectActual } from 'react-icons/md';\r\nimport TextareaAutosize from 'react-textarea-autosize';\r\nimport { v4 as uuid } from 'uuid';\r\nimport { QuestionInput, QuizInput } from '../../generated/graphql';\r\nimport ChoiceArray from './ChoiceArray';\r\nimport QuizInputUI from '../custom-inputs/QuizInputUI';\r\nimport Image from 'next/image';\r\nimport { uploadCloudinaryImage } from '../../utils/uploadImage';\r\nimport { HStack } from '@chakra-ui/react';\r\nimport { useRouter } from 'next/dist/client/router';\r\n\r\ninterface QuestionArrayProps {\r\n\tautoAddChoiceInput?: boolean;\r\n\tsetAutoAddChoiceInput?: any;\r\n}\r\n\r\nconst QuestionArray: React.FC<QuestionArrayProps> = ({\r\n\tautoAddChoiceInput,\r\n\tsetAutoAddChoiceInput,\r\n}) => {\r\n\tconst router = useRouter();\r\n\r\n\tconst [images, setImages] = useState<\r\n\t\t{ question_id: string; url: string | 'loading' }[]\r\n\t>([]);\r\n\tconst { control, register, errors, watch } = useFormContext<QuizInput>();\r\n\tconst { fields, append, remove } = useFieldArray<QuestionInput>({\r\n\t\tcontrol,\r\n\t\tname: 'questions',\r\n\t});\r\n\r\n\tconst addQuestion = (shouldFocus: boolean = true) => {\r\n\t\tappend(\r\n\t\t\t{\r\n\t\t\t\tquestion_id: uuid(),\r\n\t\t\t\tquestion: '',\r\n\t\t\t\tchoices: [],\r\n\t\t\t\tanswer: '',\r\n\t\t\t\twith_explanation: false,\r\n\t\t\t\texplanation: '',\r\n\t\t\t\twith_hint: false,\r\n\t\t\t\thint: '',\r\n\t\t\t},\r\n\t\t\tshouldFocus\r\n\t\t);\r\n\t};\r\n\r\n\tconst uploadImage = (question_id: string) => {\r\n\t\tuploadCloudinaryImage(\r\n\t\t\t(error: any, photos: { event: string; info: { url: any } }) => {\r\n\t\t\t\tconst imagesThatAreNotChanged = images.filter(\r\n\t\t\t\t\t(img) => img.question_id !== question_id\r\n\t\t\t\t);\r\n\t\t\t\tif (!error && photos.event === 'queues-start') {\r\n\t\t\t\t\tsetImages([\r\n\t\t\t\t\t\t...imagesThatAreNotChanged,\r\n\t\t\t\t\t\t{ question_id: question_id, url: 'loading' },\r\n\t\t\t\t\t]);\r\n\t\t\t\t} else if (!error && photos.event === 'success') {\r\n\t\t\t\t\tsetImages([\r\n\t\t\t\t\t\t...imagesThatAreNotChanged,\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tquestion_id: question_id,\r\n\t\t\t\t\t\t\turl: photos.info.url,\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t]);\r\n\t\t\t\t} else if (error) {\r\n\t\t\t\t\tconsole.error(error);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t);\r\n\t};\r\n\r\n\tconst addQuestionForEdit = (callback: Function) => {\r\n\t\tsetAutoAddChoiceInput(true);\r\n\t\tcallback();\r\n\t};\r\n\r\n\tuseEffect(() => {\r\n\t\tif (router.pathname.includes('edit')) return;\r\n\t\taddQuestion(false);\r\n\t}, []);\r\n\r\n\treturn (\r\n\t\t<Box w='full'>\r\n\t\t\t{fields.map((question, i) => {\r\n\t\t\t\tconst imgIndex = images.findIndex(\r\n\t\t\t\t\t(i) => i.question_id === question.question_id\r\n\t\t\t\t);\r\n\t\t\t\tconst url = images[imgIndex]?.url || question.question_photo!;\r\n\r\n\t\t\t\tconst withExplanation = watch(`questions[${i}].with_explanation`);\r\n\t\t\t\tconst withHint = watch(`questions[${i}].with_hint`);\r\n\r\n\t\t\t\treturn (\r\n\t\t\t\t\t<Box\r\n\t\t\t\t\t\tkey={question.id}\r\n\t\t\t\t\t\tborderWidth='1px'\r\n\t\t\t\t\t\tp='12px'\r\n\t\t\t\t\t\tborderRadius='8px'\r\n\t\t\t\t\t\tmy='20px'\r\n\t\t\t\t\t\tboxShadow='sm'\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\ttype='hidden'\r\n\t\t\t\t\t\t\tname={`questions[${i}].question_id`}\r\n\t\t\t\t\t\t\tdefaultValue={question.question_id}\r\n\t\t\t\t\t\t\tref={register()}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t{imgIndex !== -1 && (\r\n\t\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\t\ttype='hidden'\r\n\t\t\t\t\t\t\t\tname={`questions[${i}].question_photo`}\r\n\t\t\t\t\t\t\t\tvalue={url}\r\n\t\t\t\t\t\t\t\tref={register()}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t<Flex align='center' justify='space-between' pb='5px'>\r\n\t\t\t\t\t\t\t<Text fontSize='13px'>{`QUESTION ${i + 1}`}</Text>\r\n\t\t\t\t\t\t\t<HStack spacing='10px'>\r\n\t\t\t\t\t\t\t\t<Tooltip hasArrow label='Add explanation'>\r\n\t\t\t\t\t\t\t\t\t<Controller\r\n\t\t\t\t\t\t\t\t\t\tcontrol={control}\r\n\t\t\t\t\t\t\t\t\t\tname={`questions[${i}].with_explanation`}\r\n\t\t\t\t\t\t\t\t\t\tdefaultValue={question.with_explanation}\r\n\t\t\t\t\t\t\t\t\t\trender={({ onChange, value }) => {\r\n\t\t\t\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Switch\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tsize='sm'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tcolorScheme='purple'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange(e.target.checked);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tisChecked={value}\r\n\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t</Tooltip>\r\n\t\t\t\t\t\t\t\t<Tooltip hasArrow label='Add hint'>\r\n\t\t\t\t\t\t\t\t\t<Controller\r\n\t\t\t\t\t\t\t\t\t\tcontrol={control}\r\n\t\t\t\t\t\t\t\t\t\tname={`questions[${i}].with_hint`}\r\n\t\t\t\t\t\t\t\t\t\tdefaultValue={question.with_hint}\r\n\t\t\t\t\t\t\t\t\t\trender={({ onChange, value }) => {\r\n\t\t\t\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Switch\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tsize='sm'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tcolorScheme='purple'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange(e.target.checked);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tisChecked={value}\r\n\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t</Tooltip>\r\n\t\t\t\t\t\t\t\t<Tooltip\r\n\t\t\t\t\t\t\t\t\thasArrow\r\n\t\t\t\t\t\t\t\t\tlabel={\r\n\t\t\t\t\t\t\t\t\t\tquestion?.question_photo\r\n\t\t\t\t\t\t\t\t\t\t\t? 'Replace question photo'\r\n\t\t\t\t\t\t\t\t\t\t\t: 'Add question photo'\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t<IconButton\r\n\t\t\t\t\t\t\t\t\t\tisRound\r\n\t\t\t\t\t\t\t\t\t\ticon={<MdPhotoSizeSelectActual />}\r\n\t\t\t\t\t\t\t\t\t\tsize='sm'\r\n\t\t\t\t\t\t\t\t\t\tvariant='ghost'\r\n\t\t\t\t\t\t\t\t\t\tcolor='gray.400'\r\n\t\t\t\t\t\t\t\t\t\tfontSize='15px'\r\n\t\t\t\t\t\t\t\t\t\tonClick={() => uploadImage(question.question_id!)}\r\n\t\t\t\t\t\t\t\t\t\taria-label='upload question_photo button'\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t</Tooltip>\r\n\t\t\t\t\t\t\t\t<Tooltip hasArrow label='Remove question'>\r\n\t\t\t\t\t\t\t\t\t<IconButton\r\n\t\t\t\t\t\t\t\t\t\tisRound\r\n\t\t\t\t\t\t\t\t\t\ticon={<MdDelete />}\r\n\t\t\t\t\t\t\t\t\t\tsize='sm'\r\n\t\t\t\t\t\t\t\t\t\tvariant='ghost'\r\n\t\t\t\t\t\t\t\t\t\tcolor='gray.400'\r\n\t\t\t\t\t\t\t\t\t\tfontSize='15px'\r\n\t\t\t\t\t\t\t\t\t\tonClick={() => remove(i)}\r\n\t\t\t\t\t\t\t\t\t\tisDisabled={fields.length === 1 ? true : false}\r\n\t\t\t\t\t\t\t\t\t\taria-label='Remove question'\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t</Tooltip>\r\n\t\t\t\t\t\t\t</HStack>\r\n\t\t\t\t\t\t</Flex>\r\n\r\n\t\t\t\t\t\t{url && (\r\n\t\t\t\t\t\t\t<Box p='4px' mb='2px'>\r\n\t\t\t\t\t\t\t\t<Skeleton isLoaded={url !== 'loading'}>\r\n\t\t\t\t\t\t\t\t\t<Box borderRadius='8px' overflow='hidden' bg='gray.100'>\r\n\t\t\t\t\t\t\t\t\t\t<AspectRatio maxW='full' ratio={16 / 9}>\r\n\t\t\t\t\t\t\t\t\t\t\t{url !== 'loading' ? (\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Image\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tsrc={url}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\talt={`Quiz ${i} photo`}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tlayout='fill'\r\n\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Box></Box>\r\n\t\t\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t\t\t</AspectRatio>\r\n\t\t\t\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t\t\t\t</Skeleton>\r\n\t\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t\t)}\r\n\r\n\t\t\t\t\t\t<QuizInputUI\r\n\t\t\t\t\t\t\tregister={register({ required: true })}\r\n\t\t\t\t\t\t\tinput={`questions[${i}].question`}\r\n\t\t\t\t\t\t\tas={TextareaAutosize}\r\n\t\t\t\t\t\t\tplaceholder='Type the question here..'\r\n\t\t\t\t\t\t\tresize='none'\r\n\t\t\t\t\t\t\toverflow='hidden'\r\n\t\t\t\t\t\t\tpy='7px'\r\n\t\t\t\t\t\t\terror={errors.questions?.[i]?.question}\r\n\t\t\t\t\t\t\terrorMessage={`Question ${i + 1} is required field`}\r\n\t\t\t\t\t\t\tdefaultValue={question.question}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t<ChoiceArray\r\n\t\t\t\t\t\t\tquestionIndex={i}\r\n\t\t\t\t\t\t\tanswer={question.answer!}\r\n\t\t\t\t\t\t\tautoAddChoiceInput={autoAddChoiceInput}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t{withExplanation && (\r\n\t\t\t\t\t\t\t<QuizInputUI\r\n\t\t\t\t\t\t\t\tregister={register({ required: true })}\r\n\t\t\t\t\t\t\t\tinput={`questions[${i}].explanation`}\r\n\t\t\t\t\t\t\t\tas={TextareaAutosize}\r\n\t\t\t\t\t\t\t\tplaceholder='Type the explanation here..'\r\n\t\t\t\t\t\t\t\tresize='none'\r\n\t\t\t\t\t\t\t\toverflow='hidden'\r\n\t\t\t\t\t\t\t\tpy='7px'\r\n\t\t\t\t\t\t\t\terror={errors.questions?.[i]?.explanation}\r\n\t\t\t\t\t\t\t\terrorMessage={`Type the explanation or you can just turn it off`}\r\n\t\t\t\t\t\t\t\tdefaultValue={question.explanation!}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t{withHint && (\r\n\t\t\t\t\t\t\t<QuizInputUI\r\n\t\t\t\t\t\t\t\tregister={register({ required: true })}\r\n\t\t\t\t\t\t\t\tinput={`questions[${i}].hint`}\r\n\t\t\t\t\t\t\t\tas={TextareaAutosize}\r\n\t\t\t\t\t\t\t\tplaceholder='Type the hint here..'\r\n\t\t\t\t\t\t\t\tresize='none'\r\n\t\t\t\t\t\t\t\toverflow='hidden'\r\n\t\t\t\t\t\t\t\tpy='7px'\r\n\t\t\t\t\t\t\t\terror={errors.questions?.[i]?.hint}\r\n\t\t\t\t\t\t\t\terrorMessage={`Type the hint or you can just turn it off`}\r\n\t\t\t\t\t\t\t\tdefaultValue={question.hint!}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t{errors.questions?.[i]?.answer && (\r\n\t\t\t\t\t\t\t<Alert status='error' borderRadius='5px'>\r\n\t\t\t\t\t\t\t\t<AlertIcon />\r\n\t\t\t\t\t\t\t\tPlease select the correct answer to this question\r\n\t\t\t\t\t\t\t</Alert>\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t</Box>\r\n\t\t\t\t);\r\n\t\t\t})}\r\n\t\t\t<Button\r\n\t\t\t\tcolorScheme='purple'\r\n\t\t\t\tsize='lg'\r\n\t\t\t\tw='full'\r\n\t\t\t\tonClick={() => {\r\n\t\t\t\t\tif (router.pathname.includes('edit') && !autoAddChoiceInput) {\r\n\t\t\t\t\t\treturn addQuestionForEdit(addQuestion);\r\n\t\t\t\t\t}\r\n\t\t\t\t\taddQuestion();\r\n\t\t\t\t}}\r\n\t\t\t>\r\n\t\t\t\tAdd Question\r\n\t\t\t</Button>\r\n\t\t</Box>\r\n\t);\r\n};\r\n\r\nexport default QuestionArray;\r\n"]},"metadata":{},"sourceType":"module"}