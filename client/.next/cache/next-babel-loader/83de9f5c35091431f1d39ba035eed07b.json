{"ast":null,"code":"import _objectDestructuringEmpty from \"@babel/runtime/helpers/esm/objectDestructuringEmpty\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\mj\\\\Documents\\\\Codes\\\\PROJECTS\\\\quizshare-typescript\\\\client\\\\src\\\\pages\\\\quiz\\\\[id].tsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport { useRouter } from 'next/dist/client/router';\nimport React from 'react';\nimport { MainContainer } from '../../layouts/MainContainer';\nimport SingleQuizComments from '../../components/single-quiz/SingleQuizComments';\nimport SingleQuizHead from '../../components/single-quiz/SingleQuizHead';\nimport { useSingleQuizQuery } from '../../generated/graphql';\nimport { withApollo } from '../../utils/withApollo';\n\nvar Quiz = function Quiz(_ref) {\n  _s();\n\n  _objectDestructuringEmpty(_ref);\n\n  var router = useRouter();\n\n  var _useSingleQuizQuery = useSingleQuizQuery({\n    variables: {\n      quiz_id: parseInt(router.query.id)\n    }\n  }),\n      quizData = _useSingleQuizQuery.data,\n      quizLoading = _useSingleQuizQuery.loading,\n      quizError = _useSingleQuizQuery.error;\n\n  if (quizError) {\n    return /*#__PURE__*/_jsxDEV(\"pre\", {\n      children: quizError.message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 10\n    }, _this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(MainContainer, {\n    children: [/*#__PURE__*/_jsxDEV(SingleQuizHead, {\n      data: quizData === null || quizData === void 0 ? void 0 : quizData.singleQuiz,\n      quizLoading: quizLoading\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 4\n    }, _this), /*#__PURE__*/_jsxDEV(SingleQuizComments, {\n      quiz_id: parseInt(router.query.id)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 4\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 3\n  }, _this);\n};\n\n_s(Quiz, \"6c3zs5ebhIkL1x3BGtPs7xgsp8A=\", false, function () {\n  return [useRouter, useSingleQuizQuery];\n});\n\n_c = Quiz;\nexport default withApollo({\n  ssr: true\n})(Quiz);\n\nvar _c;\n\n$RefreshReg$(_c, \"Quiz\");","map":{"version":3,"sources":["C:/Users/mj/Documents/Codes/PROJECTS/quizshare-typescript/client/src/pages/quiz/[id].tsx"],"names":["useRouter","React","MainContainer","SingleQuizComments","SingleQuizHead","useSingleQuizQuery","withApollo","Quiz","router","variables","quiz_id","parseInt","query","id","quizData","data","quizLoading","loading","quizError","error","message","singleQuiz","ssr"],"mappings":";;;;;;;AAAA,SAASA,SAAT,QAA0B,yBAA1B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,aAAT,QAA8B,6BAA9B;AACA,OAAOC,kBAAP,MAA+B,iDAA/B;AACA,OAAOC,cAAP,MAA2B,6CAA3B;AACA,SAASC,kBAAT,QAAmC,yBAAnC;AACA,SAASC,UAAT,QAA2B,wBAA3B;;AAIA,IAAMC,IAAyB,GAAG,SAA5BA,IAA4B,OAAQ;AAAA;;AAAA;;AACzC,MAAMC,MAAM,GAAGR,SAAS,EAAxB;;AADyC,4BAOrCK,kBAAkB,CAAC;AACtBI,IAAAA,SAAS,EAAE;AACVC,MAAAA,OAAO,EAAEC,QAAQ,CAACH,MAAM,CAACI,KAAP,CAAaC,EAAd;AADP;AADW,GAAD,CAPmB;AAAA,MAIlCC,QAJkC,uBAIxCC,IAJwC;AAAA,MAK/BC,WAL+B,uBAKxCC,OALwC;AAAA,MAMjCC,SANiC,uBAMxCC,KANwC;;AAazC,MAAID,SAAJ,EAAe;AACd,wBAAO;AAAA,gBAAMA,SAAS,CAACE;AAAhB;AAAA;AAAA;AAAA;AAAA,aAAP;AACA;;AAED,sBACC,QAAC,aAAD;AAAA,4BACC,QAAC,cAAD;AAAgB,MAAA,IAAI,EAAEN,QAAF,aAAEA,QAAF,uBAAEA,QAAQ,CAAEO,UAAhC;AAA4C,MAAA,WAAW,EAAEL;AAAzD;AAAA;AAAA;AAAA;AAAA,aADD,eAEC,QAAC,kBAAD;AAAoB,MAAA,OAAO,EAAEL,QAAQ,CAACH,MAAM,CAACI,KAAP,CAAaC,EAAd;AAArC;AAAA;AAAA;AAAA;AAAA,aAFD;AAAA;AAAA;AAAA;AAAA;AAAA,WADD;AAMA,CAvBD;;GAAMN,I;UACUP,S,EAMXK,kB;;;KAPCE,I;AAyBN,eAAeD,UAAU,CAAC;AAAEgB,EAAAA,GAAG,EAAE;AAAP,CAAD,CAAV,CAA0Bf,IAA1B,CAAf","sourcesContent":["import { useRouter } from 'next/dist/client/router';\r\nimport React from 'react';\r\nimport { MainContainer } from '../../layouts/MainContainer';\r\nimport SingleQuizComments from '../../components/single-quiz/SingleQuizComments';\r\nimport SingleQuizHead from '../../components/single-quiz/SingleQuizHead';\r\nimport { useSingleQuizQuery } from '../../generated/graphql';\r\nimport { withApollo } from '../../utils/withApollo';\r\n\r\ninterface QuizProps {}\r\n\r\nconst Quiz: React.FC<QuizProps> = ({}) => {\r\n\tconst router = useRouter();\r\n\r\n\tconst {\r\n\t\tdata: quizData,\r\n\t\tloading: quizLoading,\r\n\t\terror: quizError,\r\n\t} = useSingleQuizQuery({\r\n\t\tvariables: {\r\n\t\t\tquiz_id: parseInt(router.query.id as string),\r\n\t\t},\r\n\t});\r\n\r\n\tif (quizError) {\r\n\t\treturn <pre>{quizError.message}</pre>;\r\n\t}\r\n\r\n\treturn (\r\n\t\t<MainContainer>\r\n\t\t\t<SingleQuizHead data={quizData?.singleQuiz} quizLoading={quizLoading} />\r\n\t\t\t<SingleQuizComments quiz_id={parseInt(router.query.id as string)} />\r\n\t\t</MainContainer>\r\n\t);\r\n};\r\n\r\nexport default withApollo({ ssr: true })(Quiz);\r\n"]},"metadata":{},"sourceType":"module"}