{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _taggedTemplateLiteral from \"@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\mj\\\\Documents\\\\Codes\\\\PROJECTS\\\\quizshare-typescript\\\\client\\\\src\\\\components\\\\LikeButton.tsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteral([\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tfragment _ on Quiz {\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tid\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tlikesCount\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tisLiked\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t\\t\\t\"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tfragment _ on Quiz {\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tid\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tlikesCount\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tisLiked\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t\\t\\t\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport { gql } from '@apollo/client';\nimport { Center, IconButton, Text } from '@chakra-ui/react';\nimport React from 'react';\nimport { IoIosHeart } from 'react-icons/io';\nimport { useToggleLikeMutation } from '../generated/graphql';\nexport var LikeButton = function LikeButton(_ref) {\n  _s();\n\n  var _ref$quiz = _ref.quiz,\n      isLiked = _ref$quiz.isLiked,\n      id = _ref$quiz.id,\n      likesCount = _ref$quiz.likesCount,\n      withoutCount = _ref.withoutCount;\n\n  var _useToggleLikeMutatio = useToggleLikeMutation(),\n      _useToggleLikeMutatio2 = _slicedToArray(_useToggleLikeMutatio, 1),\n      toggleLike = _useToggleLikeMutatio2[0];\n\n  return /*#__PURE__*/_jsxDEV(Center, {\n    children: [/*#__PURE__*/_jsxDEV(IconButton, {\n      variant: \"outline\",\n      colorScheme: \"gray\",\n      \"aria-label\": \"Like post\",\n      isRound: true,\n      color: isLiked ? 'red.400' : 'gray.400',\n      _focus: {\n        outline: 'none'\n      },\n      border: \"none\",\n      _hover: {\n        color: isLiked ? 'red.500' : 'gray.500'\n      },\n      fontSize: \"24px\",\n      icon: /*#__PURE__*/_jsxDEV(IoIosHeart, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 11\n      }, _this),\n      onClick: /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return toggleLike({\n                  variables: {\n                    quiz_id: parseInt(id)\n                  },\n                  update: function update(cache) {\n                    var data = cache.readFragment({\n                      id: 'Quiz:' + id,\n                      fragment: gql(_templateObject())\n                    });\n                    var newIsLiked;\n                    var newLikesCount = data.likesCount;\n\n                    if (data && data.isLiked) {\n                      newIsLiked = false;\n                      newLikesCount = newLikesCount - 1;\n                    } else {\n                      newIsLiked = true;\n                      newLikesCount = newLikesCount + 1;\n                    }\n\n                    cache.writeFragment({\n                      id: 'Quiz:' + id,\n                      fragment: gql(_templateObject2()),\n                      data: {\n                        isLiked: newIsLiked,\n                        likesCount: newLikesCount\n                      }\n                    });\n                  }\n                });\n\n              case 2:\n                return _context.abrupt(\"return\", _context.sent);\n\n              case 3:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 4\n    }, _this), !withoutCount && /*#__PURE__*/_jsxDEV(Text, {\n      fontSize: \"14px\",\n      fontWeight: \"medium\",\n      color: \"gray.400\",\n      children: likesCount\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 5\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 3\n  }, _this);\n};\n\n_s(LikeButton, \"z2Bw77yctMqib0uNQPXYb3jYufs=\", false, function () {\n  return [useToggleLikeMutation];\n});\n\n_c = LikeButton;\n\nvar _c;\n\n$RefreshReg$(_c, \"LikeButton\");","map":{"version":3,"sources":["C:/Users/mj/Documents/Codes/PROJECTS/quizshare-typescript/client/src/components/LikeButton.tsx"],"names":["gql","Center","IconButton","Text","React","IoIosHeart","useToggleLikeMutation","LikeButton","quiz","isLiked","id","likesCount","withoutCount","toggleLike","outline","color","variables","quiz_id","parseInt","update","cache","data","readFragment","fragment","newIsLiked","newLikesCount","writeFragment"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,SAASA,GAAT,QAAoB,gBAApB;AACA,SAASC,MAAT,EAAiBC,UAAjB,EAA6BC,IAA7B,QAAyC,kBAAzC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,UAAT,QAA2B,gBAA3B;AACA,SAASC,qBAAT,QAAsC,sBAAtC;AAYA,OAAO,IAAMC,UAAqC,GAAG,SAAxCA,UAAwC,OAG/C;AAAA;;AAAA,uBAFLC,IAEK;AAAA,MAFGC,OAEH,aAFGA,OAEH;AAAA,MAFYC,EAEZ,aAFYA,EAEZ;AAAA,MAFgBC,UAEhB,aAFgBA,UAEhB;AAAA,MADLC,YACK,QADLA,YACK;;AAAA,8BACgBN,qBAAqB,EADrC;AAAA;AAAA,MACEO,UADF;;AAGL,sBACC,QAAC,MAAD;AAAA,4BACC,QAAC,UAAD;AACC,MAAA,OAAO,EAAC,SADT;AAEC,MAAA,WAAW,EAAC,MAFb;AAGC,oBAAW,WAHZ;AAIC,MAAA,OAAO,MAJR;AAKC,MAAA,KAAK,EAAEJ,OAAO,GAAG,SAAH,GAAe,UAL9B;AAMC,MAAA,MAAM,EAAE;AAAEK,QAAAA,OAAO,EAAE;AAAX,OANT;AAOC,MAAA,MAAM,EAAC,MAPR;AAQC,MAAA,MAAM,EAAE;AAAEC,QAAAA,KAAK,EAAEN,OAAO,GAAG,SAAH,GAAe;AAA/B,OART;AASC,MAAA,QAAQ,EAAC,MATV;AAUC,MAAA,IAAI,eAAE,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA,eAVP;AAWC,MAAA,OAAO,wEAAE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBACFI,UAAU,CAAC;AAChBG,kBAAAA,SAAS,EAAE;AACVC,oBAAAA,OAAO,EAAEC,QAAQ,CAACR,EAAD;AADP,mBADK;AAIhBS,kBAAAA,MAAM,EAAE,gBAACC,KAAD,EAAW;AAClB,wBAAMC,IAAI,GAAGD,KAAK,CAACE,YAAN,CAGV;AACFZ,sBAAAA,EAAE,EAAE,UAAUA,EADZ;AAEFa,sBAAAA,QAAQ,EAAEvB,GAAF;AAFN,qBAHU,CAAb;AAcA,wBAAIwB,UAAJ;AACA,wBAAIC,aAAqB,GAAGJ,IAAI,CAAEV,UAAlC;;AAEA,wBAAIU,IAAI,IAAIA,IAAI,CAACZ,OAAjB,EAA0B;AACzBe,sBAAAA,UAAU,GAAG,KAAb;AACAC,sBAAAA,aAAa,GAAGA,aAAa,GAAG,CAAhC;AACA,qBAHD,MAGO;AACND,sBAAAA,UAAU,GAAG,IAAb;AACAC,sBAAAA,aAAa,GAAGA,aAAa,GAAG,CAAhC;AACA;;AACDL,oBAAAA,KAAK,CAACM,aAAN,CAAoB;AACnBhB,sBAAAA,EAAE,EAAE,UAAUA,EADK;AAEnBa,sBAAAA,QAAQ,EAAEvB,GAAF,oBAFW;AASnBqB,sBAAAA,IAAI,EAAE;AAAEZ,wBAAAA,OAAO,EAAEe,UAAX;AAAuBb,wBAAAA,UAAU,EAAEc;AAAnC;AATa,qBAApB;AAWA;AAxCe,iBAAD,CADR;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAF;AAXR;AAAA;AAAA;AAAA;AAAA,aADD,EAyDE,CAACb,YAAD,iBACA,QAAC,IAAD;AAAM,MAAA,QAAQ,EAAC,MAAf;AAAsB,MAAA,UAAU,EAAC,QAAjC;AAA0C,MAAA,KAAK,EAAC,UAAhD;AAAA,gBACED;AADF;AAAA;AAAA;AAAA;AAAA,aA1DF;AAAA;AAAA;AAAA;AAAA;AAAA,WADD;AAiEA,CAvEM;;GAAMJ,U;UAISD,qB;;;KAJTC,U","sourcesContent":["import { gql } from '@apollo/client';\r\nimport { Center, IconButton, Text } from '@chakra-ui/react';\r\nimport React from 'react';\r\nimport { IoIosHeart } from 'react-icons/io';\r\nimport { useToggleLikeMutation } from '../generated/graphql';\r\n\r\ninterface LikeButtonProps {\r\n\tquiz: {\r\n\t\tisLiked?: boolean;\r\n\t\tid: string;\r\n\t\tlikesCount: number;\r\n\t\tquestionsCount?: number;\r\n\t} & any;\r\n\twithoutCount?: boolean;\r\n}\r\n\r\nexport const LikeButton: React.FC<LikeButtonProps> = ({\r\n\tquiz: { isLiked, id, likesCount },\r\n\twithoutCount,\r\n}) => {\r\n\tconst [toggleLike] = useToggleLikeMutation();\r\n\r\n\treturn (\r\n\t\t<Center>\r\n\t\t\t<IconButton\r\n\t\t\t\tvariant='outline'\r\n\t\t\t\tcolorScheme='gray'\r\n\t\t\t\taria-label='Like post'\r\n\t\t\t\tisRound\r\n\t\t\t\tcolor={isLiked ? 'red.400' : 'gray.400'}\r\n\t\t\t\t_focus={{ outline: 'none' }}\r\n\t\t\t\tborder='none'\r\n\t\t\t\t_hover={{ color: isLiked ? 'red.500' : 'gray.500' }}\r\n\t\t\t\tfontSize='24px'\r\n\t\t\t\ticon={<IoIosHeart />}\r\n\t\t\t\tonClick={async () =>\r\n\t\t\t\t\tawait toggleLike({\r\n\t\t\t\t\t\tvariables: {\r\n\t\t\t\t\t\t\tquiz_id: parseInt(id),\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\tupdate: (cache) => {\r\n\t\t\t\t\t\t\tconst data = cache.readFragment<{\r\n\t\t\t\t\t\t\t\tlikesCount: number;\r\n\t\t\t\t\t\t\t\tisLiked: boolean;\r\n\t\t\t\t\t\t\t}>({\r\n\t\t\t\t\t\t\t\tid: 'Quiz:' + id,\r\n\t\t\t\t\t\t\t\tfragment: gql`\r\n\t\t\t\t\t\t\t\t\tfragment _ on Quiz {\r\n\t\t\t\t\t\t\t\t\t\tid\r\n\t\t\t\t\t\t\t\t\t\tlikesCount\r\n\t\t\t\t\t\t\t\t\t\tisLiked\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t`,\r\n\t\t\t\t\t\t\t});\r\n\r\n\t\t\t\t\t\t\tlet newIsLiked: boolean;\r\n\t\t\t\t\t\t\tlet newLikesCount: number = data!.likesCount;\r\n\r\n\t\t\t\t\t\t\tif (data && data.isLiked) {\r\n\t\t\t\t\t\t\t\tnewIsLiked = false;\r\n\t\t\t\t\t\t\t\tnewLikesCount = newLikesCount - 1;\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\tnewIsLiked = true;\r\n\t\t\t\t\t\t\t\tnewLikesCount = newLikesCount + 1;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tcache.writeFragment({\r\n\t\t\t\t\t\t\t\tid: 'Quiz:' + id,\r\n\t\t\t\t\t\t\t\tfragment: gql`\r\n\t\t\t\t\t\t\t\t\tfragment _ on Quiz {\r\n\t\t\t\t\t\t\t\t\t\tid\r\n\t\t\t\t\t\t\t\t\t\tlikesCount\r\n\t\t\t\t\t\t\t\t\t\tisLiked\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t`,\r\n\t\t\t\t\t\t\t\tdata: { isLiked: newIsLiked, likesCount: newLikesCount },\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t})\r\n\t\t\t\t}\r\n\t\t\t/>\r\n\t\t\t{!withoutCount && (\r\n\t\t\t\t<Text fontSize='14px' fontWeight='medium' color='gray.400'>\r\n\t\t\t\t\t{likesCount}\r\n\t\t\t\t</Text>\r\n\t\t\t)}\r\n\t\t</Center>\r\n\t);\r\n};\r\n"]},"metadata":{},"sourceType":"module"}