{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\mj\\\\Documents\\\\Codes\\\\PROJECTS\\\\quizshare-typescript\\\\client\\\\src\\\\pages\\\\quiz\\\\create.tsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { AspectRatio, Box, Button, Center, Flex, Heading, Skeleton, Spacer, useColorModeValue, VStack } from '@chakra-ui/react';\nimport { useRouter } from 'next/dist/client/router';\nimport Image from 'next/image';\nimport NextLink from 'next/link';\nimport React, { useState } from 'react';\nimport { FormProvider, useForm } from 'react-hook-form';\nimport { MdPhotoSizeSelectActual } from 'react-icons/md';\nimport TextareaAutosize from 'react-textarea-autosize';\nimport QuizInputUI from '../../components/custom-inputs/QuizInputUI';\nimport QuestionArray from '../../components/create-update-quiz/QuestionArray';\nimport { useCreateQuizMutation } from '../../generated/graphql';\nimport { MainContainer } from '../../layouts/MainContainer';\nimport errorMapper from '../../utils/errorMapper';\nimport { uploadCloudinaryImage } from '../../utils/uploadImage';\nimport { withApollo } from '../../utils/withApollo';\n\nconst CreateQuiz = () => {\n  var _errors$title, _errors$description;\n\n  const colorTitle = useColorModeValue('gray.800', 'white');\n  const router = useRouter();\n  const thumbnailBg = useColorModeValue('gray.50', 'rgba(255, 255, 255, 0.04)');\n  const {\n    0: image,\n    1: setImage\n  } = useState();\n  const [createQuiz, {\n    loading\n  }] = useCreateQuizMutation();\n  const methods = useForm();\n  const {\n    register,\n    handleSubmit,\n    errors,\n    setError\n  } = methods;\n\n  const onSubmit = async values => {\n    try {\n      const {\n        errors\n      } = await createQuiz({\n        variables: values,\n        update: cache => {\n          cache.evict({\n            fieldName: 'quizzes'\n          });\n        }\n      });\n\n      if (!errors) {\n        router.push('/');\n      }\n    } catch (err) {\n      errorMapper(err, setError);\n    }\n  };\n\n  const uploadImage = () => {\n    uploadCloudinaryImage((error, photos) => {\n      if (!error && photos.event === 'queues-start') {\n        setImage('loading');\n      } else if (!error && photos.event === 'success') {\n        setImage(photos.info.url);\n      } else if (error) {\n        console.error(error);\n      }\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(MainContainer, {\n    py: \"40px\",\n    children: [/*#__PURE__*/_jsxDEV(Heading, {\n      as: \"h1\",\n      fontFamily: \"inter\",\n      fontWeight: \"800\",\n      color: colorTitle,\n      lineHeight: \"1\",\n      fontSize: ['30px', '42px', '56px'],\n      pb: \"40px\",\n      textAlign: \"center\",\n      children: \"Create an interactive quiz\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      maxW: \"764px\",\n      w: ['auto', 'auto', '764px'],\n      m: \"auto\",\n      boxShadow: \"md\",\n      p: ['10px', '10px', '24px'],\n      borderWidth: \"1px\",\n      borderRadius: \"md\",\n      children: /*#__PURE__*/_jsxDEV(FormProvider, _objectSpread(_objectSpread({}, methods), {}, {\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleSubmit(onSubmit),\n          children: [image && /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"hidden\",\n            name: \"quiz_photo\",\n            ref: register(),\n            defaultValue: image\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 8\n          }, this), /*#__PURE__*/_jsxDEV(VStack, {\n            spacing: \"16px\",\n            children: [/*#__PURE__*/_jsxDEV(Box, {\n              w: \"full\",\n              children: image ? /*#__PURE__*/_jsxDEV(Skeleton, {\n                isLoaded: image !== 'loading',\n                children: /*#__PURE__*/_jsxDEV(Box, {\n                  borderRadius: \"8px\",\n                  overflow: \"hidden\",\n                  bg: \"gray.100\",\n                  children: /*#__PURE__*/_jsxDEV(AspectRatio, {\n                    maxW: \"full\",\n                    ratio: 16 / 9,\n                    children: image !== 'loading' ? /*#__PURE__*/_jsxDEV(Image, {\n                      src: image,\n                      alt: \"Thumbnail of Quiz\",\n                      layout: \"fill\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 110,\n                      columnNumber: 14\n                    }, this) : /*#__PURE__*/_jsxDEV(Box, {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 116,\n                      columnNumber: 14\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 108,\n                    columnNumber: 12\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 107,\n                  columnNumber: 11\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 106,\n                columnNumber: 10\n              }, this) : /*#__PURE__*/_jsxDEV(Center, {\n                h: \"200px\",\n                bg: thumbnailBg,\n                children: /*#__PURE__*/_jsxDEV(Button, {\n                  leftIcon: /*#__PURE__*/_jsxDEV(MdPhotoSizeSelectActual, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 124,\n                    columnNumber: 22\n                  }, this),\n                  colorScheme: \"gray\",\n                  variant: \"ghost\",\n                  onClick: uploadImage,\n                  children: \"Upload Thumbnail\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 123,\n                  columnNumber: 11\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 122,\n                columnNumber: 10\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 104,\n              columnNumber: 8\n            }, this), image && /*#__PURE__*/_jsxDEV(Center, {\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                leftIcon: /*#__PURE__*/_jsxDEV(MdPhotoSizeSelectActual, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 137,\n                  columnNumber: 21\n                }, this),\n                colorScheme: \"gray\",\n                onClick: uploadImage,\n                children: \"Change Thumbnail\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 136,\n                columnNumber: 10\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 135,\n              columnNumber: 9\n            }, this), /*#__PURE__*/_jsxDEV(QuizInputUI, {\n              register: register({\n                required: true\n              }),\n              name: \"Title\",\n              input: \"title\",\n              placeholder: \"Type the title here...\",\n              fontSize: \"20px\",\n              size: \"lg\",\n              error: errors.title,\n              errorMessage: ((_errors$title = errors.title) === null || _errors$title === void 0 ? void 0 : _errors$title.message) || 'Title is required field.'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 145,\n              columnNumber: 8\n            }, this), /*#__PURE__*/_jsxDEV(QuizInputUI, {\n              register: register({\n                required: true\n              }),\n              name: \"Description\",\n              input: \"description\",\n              placeholder: \"Type the description here..\",\n              as: TextareaAutosize,\n              resize: \"none\",\n              overflow: \"hidden\",\n              py: \"5px\",\n              error: errors.description,\n              errorMessage: ((_errors$description = errors.description) === null || _errors$description === void 0 ? void 0 : _errors$description.message) || 'Description is required field.'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 157,\n              columnNumber: 8\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(QuestionArray, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 173,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(Flex, {\n            w: \"full\",\n            mt: \"20px\",\n            children: [/*#__PURE__*/_jsxDEV(Spacer, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 175,\n              columnNumber: 8\n            }, this), /*#__PURE__*/_jsxDEV(NextLink, {\n              href: \"/\",\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                variant: \"outline\",\n                colorScheme: \"purple\",\n                px: \"20px\",\n                children: \"Cancel\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 177,\n                columnNumber: 9\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 176,\n              columnNumber: 8\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              colorScheme: \"purple\",\n              type: \"submit\",\n              px: \"20px\",\n              ml: \"10px\",\n              isLoading: loading,\n              children: \"Publish\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 181,\n              columnNumber: 8\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 174,\n            columnNumber: 7\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 6\n        }, this)\n      }), void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 3\n  }, this);\n};\n\nexport default withApollo({\n  ssr: true\n})(CreateQuiz);","map":{"version":3,"sources":["C:/Users/mj/Documents/Codes/PROJECTS/quizshare-typescript/client/src/pages/quiz/create.tsx"],"names":["AspectRatio","Box","Button","Center","Flex","Heading","Skeleton","Spacer","useColorModeValue","VStack","useRouter","Image","NextLink","React","useState","FormProvider","useForm","MdPhotoSizeSelectActual","TextareaAutosize","QuizInputUI","QuestionArray","useCreateQuizMutation","MainContainer","errorMapper","uploadCloudinaryImage","withApollo","CreateQuiz","colorTitle","router","thumbnailBg","image","setImage","createQuiz","loading","methods","register","handleSubmit","errors","setError","onSubmit","values","variables","update","cache","evict","fieldName","push","err","uploadImage","error","photos","event","info","url","console","required","title","message","description","ssr"],"mappings":"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","sourcesContent":["import {\r\n\tAspectRatio,\r\n\tBox,\r\n\tButton,\r\n\tCenter,\r\n\tFlex,\r\n\tHeading,\r\n\tSkeleton,\r\n\tSpacer,\r\n\tuseColorModeValue,\r\n\tVStack,\r\n} from '@chakra-ui/react';\r\nimport { useRouter } from 'next/dist/client/router';\r\nimport Image from 'next/image';\r\nimport NextLink from 'next/link';\r\nimport React, { useState } from 'react';\r\nimport { FormProvider, useForm } from 'react-hook-form';\r\nimport { MdPhotoSizeSelectActual } from 'react-icons/md';\r\nimport TextareaAutosize from 'react-textarea-autosize';\r\nimport QuizInputUI from '../../components/custom-inputs/QuizInputUI';\r\nimport QuestionArray from '../../components/create-update-quiz/QuestionArray';\r\nimport { QuizInput, useCreateQuizMutation } from '../../generated/graphql';\r\nimport { MainContainer } from '../../layouts/MainContainer';\r\nimport errorMapper from '../../utils/errorMapper';\r\nimport { uploadCloudinaryImage } from '../../utils/uploadImage';\r\nimport { withApollo } from '../../utils/withApollo';\r\n\r\nconst CreateQuiz: React.FC = () => {\r\n\tconst colorTitle = useColorModeValue('gray.800', 'white');\r\n\tconst router = useRouter();\r\n\tconst thumbnailBg = useColorModeValue('gray.50', 'rgba(255, 255, 255, 0.04)');\r\n\tconst [image, setImage] = useState<string | 'loading'>();\r\n\r\n\tconst [createQuiz, { loading }] = useCreateQuizMutation();\r\n\r\n\tconst methods = useForm<QuizInput>();\r\n\r\n\tconst { register, handleSubmit, errors, setError } = methods;\r\n\r\n\tconst onSubmit = async (values: QuizInput) => {\r\n\t\ttry {\r\n\t\t\tconst { errors } = await createQuiz({\r\n\t\t\t\tvariables: values,\r\n\t\t\t\tupdate: (cache) => {\r\n\t\t\t\t\tcache.evict({ fieldName: 'quizzes' });\r\n\t\t\t\t},\r\n\t\t\t});\r\n\t\t\tif (!errors) {\r\n\t\t\t\trouter.push('/');\r\n\t\t\t}\r\n\t\t} catch (err) {\r\n\t\t\terrorMapper(err, setError);\r\n\t\t}\r\n\t};\r\n\r\n\tconst uploadImage = () => {\r\n\t\tuploadCloudinaryImage(\r\n\t\t\t(error: any, photos: { event: string; info: { url: string } }) => {\r\n\t\t\t\tif (!error && photos.event === 'queues-start') {\r\n\t\t\t\t\tsetImage('loading');\r\n\t\t\t\t} else if (!error && photos.event === 'success') {\r\n\t\t\t\t\tsetImage(photos.info.url);\r\n\t\t\t\t} else if (error) {\r\n\t\t\t\t\tconsole.error(error);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<MainContainer py='40px'>\r\n\t\t\t<Heading\r\n\t\t\t\tas='h1'\r\n\t\t\t\tfontFamily='inter'\r\n\t\t\t\tfontWeight='800'\r\n\t\t\t\tcolor={colorTitle}\r\n\t\t\t\tlineHeight='1'\r\n\t\t\t\tfontSize={['30px', '42px', '56px']}\r\n\t\t\t\tpb='40px'\r\n\t\t\t\ttextAlign='center'\r\n\t\t\t>\r\n\t\t\t\tCreate an interactive quiz\r\n\t\t\t</Heading>\r\n\t\t\t<Box\r\n\t\t\t\tmaxW='764px'\r\n\t\t\t\tw={['auto', 'auto', '764px']}\r\n\t\t\t\tm='auto'\r\n\t\t\t\tboxShadow='md'\r\n\t\t\t\tp={['10px', '10px', '24px']}\r\n\t\t\t\tborderWidth='1px'\r\n\t\t\t\tborderRadius='md'\r\n\t\t\t>\r\n\t\t\t\t<FormProvider {...methods}>\r\n\t\t\t\t\t<form onSubmit={handleSubmit(onSubmit)}>\r\n\t\t\t\t\t\t{image && (\r\n\t\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\t\ttype='hidden'\r\n\t\t\t\t\t\t\t\tname='quiz_photo'\r\n\t\t\t\t\t\t\t\tref={register()}\r\n\t\t\t\t\t\t\t\tdefaultValue={image}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t<VStack spacing='16px'>\r\n\t\t\t\t\t\t\t<Box w='full'>\r\n\t\t\t\t\t\t\t\t{image ? (\r\n\t\t\t\t\t\t\t\t\t<Skeleton isLoaded={image !== 'loading'}>\r\n\t\t\t\t\t\t\t\t\t\t<Box borderRadius='8px' overflow='hidden' bg='gray.100'>\r\n\t\t\t\t\t\t\t\t\t\t\t<AspectRatio maxW='full' ratio={16 / 9}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t{image !== 'loading' ? (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Image\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tsrc={image}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\talt='Thumbnail of Quiz'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tlayout='fill'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Box></Box>\r\n\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t\t\t\t</AspectRatio>\r\n\t\t\t\t\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t\t\t\t\t</Skeleton>\r\n\t\t\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t\t\t<Center h='200px' bg={thumbnailBg}>\r\n\t\t\t\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\t\t\t\tleftIcon={<MdPhotoSizeSelectActual />}\r\n\t\t\t\t\t\t\t\t\t\t\tcolorScheme='gray'\r\n\t\t\t\t\t\t\t\t\t\t\tvariant='ghost'\r\n\t\t\t\t\t\t\t\t\t\t\tonClick={uploadImage}\r\n\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\tUpload Thumbnail\r\n\t\t\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t\t\t</Center>\r\n\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t\t\t{image && (\r\n\t\t\t\t\t\t\t\t<Center>\r\n\t\t\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\t\t\tleftIcon={<MdPhotoSizeSelectActual />}\r\n\t\t\t\t\t\t\t\t\t\tcolorScheme='gray'\r\n\t\t\t\t\t\t\t\t\t\tonClick={uploadImage}\r\n\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\tChange Thumbnail\r\n\t\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t\t</Center>\r\n\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t<QuizInputUI\r\n\t\t\t\t\t\t\t\tregister={register({ required: true })}\r\n\t\t\t\t\t\t\t\tname='Title'\r\n\t\t\t\t\t\t\t\tinput='title'\r\n\t\t\t\t\t\t\t\tplaceholder='Type the title here...'\r\n\t\t\t\t\t\t\t\tfontSize='20px'\r\n\t\t\t\t\t\t\t\tsize='lg'\r\n\t\t\t\t\t\t\t\terror={errors.title}\r\n\t\t\t\t\t\t\t\terrorMessage={\r\n\t\t\t\t\t\t\t\t\terrors.title?.message || 'Title is required field.'\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t<QuizInputUI\r\n\t\t\t\t\t\t\t\tregister={register({ required: true })}\r\n\t\t\t\t\t\t\t\tname='Description'\r\n\t\t\t\t\t\t\t\tinput='description'\r\n\t\t\t\t\t\t\t\tplaceholder='Type the description here..'\r\n\t\t\t\t\t\t\t\tas={TextareaAutosize}\r\n\t\t\t\t\t\t\t\tresize='none'\r\n\t\t\t\t\t\t\t\toverflow='hidden'\r\n\t\t\t\t\t\t\t\tpy='5px'\r\n\t\t\t\t\t\t\t\terror={errors.description}\r\n\t\t\t\t\t\t\t\terrorMessage={\r\n\t\t\t\t\t\t\t\t\terrors.description?.message ||\r\n\t\t\t\t\t\t\t\t\t'Description is required field.'\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</VStack>\r\n\t\t\t\t\t\t<QuestionArray />\r\n\t\t\t\t\t\t<Flex w='full' mt='20px'>\r\n\t\t\t\t\t\t\t<Spacer />\r\n\t\t\t\t\t\t\t<NextLink href='/'>\r\n\t\t\t\t\t\t\t\t<Button variant='outline' colorScheme='purple' px='20px'>\r\n\t\t\t\t\t\t\t\t\tCancel\r\n\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t</NextLink>\r\n\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\tcolorScheme='purple'\r\n\t\t\t\t\t\t\t\ttype='submit'\r\n\t\t\t\t\t\t\t\tpx='20px'\r\n\t\t\t\t\t\t\t\tml='10px'\r\n\t\t\t\t\t\t\t\tisLoading={loading}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\tPublish\r\n\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t</Flex>\r\n\t\t\t\t\t</form>\r\n\t\t\t\t</FormProvider>\r\n\t\t\t</Box>\r\n\t\t</MainContainer>\r\n\t);\r\n};\r\n\r\nexport default withApollo({ ssr: true })(CreateQuiz);\r\n"]},"metadata":{},"sourceType":"module"}