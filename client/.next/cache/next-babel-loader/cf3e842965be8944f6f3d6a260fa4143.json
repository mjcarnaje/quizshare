{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\mj\\\\Documents\\\\Codes\\\\PROJECTS\\\\quizshare-typescript\\\\client\\\\src\\\\components\\\\NavBar.tsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { Button, Flex, Heading, HStack, Text, useColorModeValue } from '@chakra-ui/react';\nimport { useRouter } from 'next/dist/client/router';\nimport NextLink from 'next/link';\nimport React from 'react';\nimport { useMeQuery } from '../generated/graphql';\nimport { isServer } from '../utils/isServer';\nimport { DarkModeSwitch } from './DarkModeSwitch';\nimport { UserMenu } from './UserMenu';\nexport const NavBar = () => {\n  const router = useRouter();\n  const bgColor = useColorModeValue('rgb(255, 255, 255, .90)', 'rgb(32, 32, 32, .90)');\n  const navBarShadow = useColorModeValue('xs', 'sm');\n  const buttonColorScheme = useColorModeValue('purple', 'gray');\n  const logoColor = useColorModeValue('purple.500', 'purple.400');\n  const linkColorHover = useColorModeValue('#000', '#fff');\n  const {\n    data\n  } = useMeQuery({\n    skip: isServer()\n  });\n  let body;\n\n  if (!(data === null || data === void 0 ? void 0 : data.me)) {\n    body = /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(NextLink, {\n        href: \"login\",\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          size: \"sm\",\n          colorScheme: buttonColorScheme,\n          variant: \"ghost\",\n          fontSize: 16,\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 6\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(NextLink, {\n        href: \"register\",\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          size: \"sm\",\n          colorScheme: buttonColorScheme,\n          variant: \"outline\",\n          fontSize: 16,\n          children: \"Sign Up\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 6\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true);\n  } else {\n    body = /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [[{\n        path: '/quiz/create',\n        name: 'Create Quiz'\n      }, {\n        path: '/users',\n        name: 'Users',\n        icon: 'FaUsers'\n      }].map(({\n        path,\n        name\n      }, i) => {\n        return /*#__PURE__*/_jsxDEV(NextLink, {\n          href: path,\n          children: /*#__PURE__*/_jsxDEV(Text, {\n            _hover: {\n              color: router.pathname == path ? '' : linkColorHover\n            },\n            px: \"10px\",\n            transition: \"ease-in-out\",\n            transitionDuration: \".1s\",\n            cursor: \"pointer\",\n            fontWeight: router.pathname == path ? 'semibold' : '',\n            color: router.pathname == path ? logoColor : '',\n            display: ['none', 'none', 'inline-block'],\n            children: name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 8\n          }, this)\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 7\n        }, this);\n      }), /*#__PURE__*/_jsxDEV(UserMenu, _objectSpread({}, data.me), void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true);\n  }\n\n  return /*#__PURE__*/_jsxDEV(Flex, {\n    justify: \"space-between\",\n    w: \"full\",\n    py: 4,\n    px: [3, 6, 12, 24],\n    bg: bgColor,\n    boxShadow: navBarShadow,\n    position: \"sticky\",\n    left: \"0\",\n    right: \"0\",\n    top: \"0\",\n    zIndex: \"2\",\n    children: [/*#__PURE__*/_jsxDEV(NextLink, {\n      href: \"/\",\n      children: /*#__PURE__*/_jsxDEV(Heading, {\n        as: \"h1\",\n        fontSize: 28,\n        fontWeight: \"sm\",\n        fontFamily: \"berkshire\",\n        color: logoColor,\n        cursor: \"pointer\",\n        lineHeight: \"22px\",\n        pb: \"6px\",\n        my: \"auto\",\n        children: \"QuizShare\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(HStack, {\n      spacing: 6,\n      children: [/*#__PURE__*/_jsxDEV(DarkModeSwitch, {\n        \"aria-label\": \"Toggle color mode\",\n        display: ['none', 'none', 'inline-block']\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 5\n      }, this), body]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 94,\n    columnNumber: 3\n  }, this);\n};","map":{"version":3,"sources":["C:/Users/mj/Documents/Codes/PROJECTS/quizshare-typescript/client/src/components/NavBar.tsx"],"names":["Button","Flex","Heading","HStack","Text","useColorModeValue","useRouter","NextLink","React","useMeQuery","isServer","DarkModeSwitch","UserMenu","NavBar","router","bgColor","navBarShadow","buttonColorScheme","logoColor","linkColorHover","data","skip","body","me","path","name","icon","map","i","color","pathname"],"mappings":"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","sourcesContent":["import {\r\n\tButton,\r\n\tFlex,\r\n\tHeading,\r\n\tHStack,\r\n\tText,\r\n\tuseColorModeValue,\r\n} from '@chakra-ui/react';\r\nimport { useRouter } from 'next/dist/client/router';\r\nimport NextLink from 'next/link';\r\nimport React from 'react';\r\nimport { useMeQuery } from '../generated/graphql';\r\nimport { isServer } from '../utils/isServer';\r\nimport { DarkModeSwitch } from './DarkModeSwitch';\r\nimport { UserMenu } from './UserMenu';\r\n\r\nexport const NavBar: React.FC = () => {\r\n\tconst router = useRouter();\r\n\r\n\tconst bgColor = useColorModeValue(\r\n\t\t'rgb(255, 255, 255, .90)',\r\n\t\t'rgb(32, 32, 32, .90)'\r\n\t);\r\n\tconst navBarShadow = useColorModeValue('xs', 'sm');\r\n\tconst buttonColorScheme = useColorModeValue('purple', 'gray');\r\n\tconst logoColor = useColorModeValue('purple.500', 'purple.400');\r\n\r\n\tconst linkColorHover = useColorModeValue('#000', '#fff');\r\n\r\n\tconst { data } = useMeQuery({ skip: isServer() });\r\n\r\n\tlet body;\r\n\r\n\tif (!data?.me) {\r\n\t\tbody = (\r\n\t\t\t<>\r\n\t\t\t\t<NextLink href='login'>\r\n\t\t\t\t\t<Button\r\n\t\t\t\t\t\tsize='sm'\r\n\t\t\t\t\t\tcolorScheme={buttonColorScheme}\r\n\t\t\t\t\t\tvariant='ghost'\r\n\t\t\t\t\t\tfontSize={16}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\tLogin\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t</NextLink>\r\n\t\t\t\t<NextLink href='register'>\r\n\t\t\t\t\t<Button\r\n\t\t\t\t\t\tsize='sm'\r\n\t\t\t\t\t\tcolorScheme={buttonColorScheme}\r\n\t\t\t\t\t\tvariant='outline'\r\n\t\t\t\t\t\tfontSize={16}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\tSign Up\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t</NextLink>\r\n\t\t\t</>\r\n\t\t);\r\n\t} else {\r\n\t\tbody = (\r\n\t\t\t<>\r\n\t\t\t\t{[\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tpath: '/quiz/create',\r\n\t\t\t\t\t\tname: 'Create Quiz',\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{ path: '/users', name: 'Users', icon: 'FaUsers' },\r\n\t\t\t\t].map(({ path, name }, i) => {\r\n\t\t\t\t\treturn (\r\n\t\t\t\t\t\t<NextLink href={path} key={i}>\r\n\t\t\t\t\t\t\t<Text\r\n\t\t\t\t\t\t\t\t_hover={{\r\n\t\t\t\t\t\t\t\t\tcolor: router.pathname == path ? '' : linkColorHover,\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\tpx='10px'\r\n\t\t\t\t\t\t\t\ttransition='ease-in-out'\r\n\t\t\t\t\t\t\t\ttransitionDuration='.1s'\r\n\t\t\t\t\t\t\t\tcursor='pointer'\r\n\t\t\t\t\t\t\t\tfontWeight={router.pathname == path ? 'semibold' : ''}\r\n\t\t\t\t\t\t\t\tcolor={router.pathname == path ? logoColor : ''}\r\n\t\t\t\t\t\t\t\tdisplay={['none', 'none', 'inline-block']}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t{name}\r\n\t\t\t\t\t\t\t</Text>\r\n\t\t\t\t\t\t</NextLink>\r\n\t\t\t\t\t);\r\n\t\t\t\t})}\r\n\t\t\t\t<UserMenu {...data.me} />\r\n\t\t\t</>\r\n\t\t);\r\n\t}\r\n\r\n\treturn (\r\n\t\t<Flex\r\n\t\t\tjustify='space-between'\r\n\t\t\tw='full'\r\n\t\t\tpy={4}\r\n\t\t\tpx={[3, 6, 12, 24]}\r\n\t\t\tbg={bgColor}\r\n\t\t\tboxShadow={navBarShadow}\r\n\t\t\tposition='sticky'\r\n\t\t\tleft='0'\r\n\t\t\tright='0'\r\n\t\t\ttop='0'\r\n\t\t\tzIndex='2'\r\n\t\t>\r\n\t\t\t<NextLink href='/'>\r\n\t\t\t\t<Heading\r\n\t\t\t\t\tas='h1'\r\n\t\t\t\t\tfontSize={28}\r\n\t\t\t\t\tfontWeight='sm'\r\n\t\t\t\t\tfontFamily='berkshire'\r\n\t\t\t\t\tcolor={logoColor}\r\n\t\t\t\t\tcursor='pointer'\r\n\t\t\t\t\tlineHeight='22px'\r\n\t\t\t\t\tpb='6px'\r\n\t\t\t\t\tmy='auto'\r\n\t\t\t\t>\r\n\t\t\t\t\tQuizShare\r\n\t\t\t\t</Heading>\r\n\t\t\t</NextLink>\r\n\t\t\t<HStack spacing={6}>\r\n\t\t\t\t<DarkModeSwitch\r\n\t\t\t\t\taria-label='Toggle color mode'\r\n\t\t\t\t\tdisplay={['none', 'none', 'inline-block']}\r\n\t\t\t\t/>\r\n\t\t\t\t{body}\r\n\t\t\t</HStack>\r\n\t\t</Flex>\r\n\t);\r\n};\r\n"]},"metadata":{},"sourceType":"module"}