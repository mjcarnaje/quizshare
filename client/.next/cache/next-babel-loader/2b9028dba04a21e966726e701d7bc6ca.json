{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\mj\\\\Documents\\\\Codes\\\\PROJECTS\\\\quizshare-typescript\\\\client\\\\src\\\\components\\\\EditDeleteQuizButtons.tsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport { ChevronDownIcon, DeleteIcon, EditIcon } from '@chakra-ui/icons';\nimport { AlertDialog, AlertDialogBody, AlertDialogCloseButton, AlertDialogContent, AlertDialogFooter, AlertDialogHeader, AlertDialogOverlay, Button, IconButton, Menu, MenuButton, MenuItem, MenuList, Square, useColorModeValue, useDisclosure } from '@chakra-ui/react';\nimport NextLink from 'next/link';\nimport React, { useRef } from 'react';\nimport { useDeleteQuizMutation, useMeQuery } from '../generated/graphql';\nexport const EditDeleteQuizButtons = (_ref) => {\n  var _data$me;\n\n  let {\n    quiz\n  } = _ref,\n      props = _objectWithoutProperties(_ref, [\"quiz\"]);\n\n  const {\n    data\n  } = useMeQuery();\n  const bgColor = useColorModeValue('rgb(255, 255, 255)', 'rgb(32, 32, 32)');\n  const colorBody = useColorModeValue('gray.600', '#BDBDBD');\n  const [deleteQuiz] = useDeleteQuizMutation();\n  const {\n    isOpen,\n    onOpen,\n    onClose\n  } = useDisclosure();\n  const cancelRef = useRef();\n\n  if ((data === null || data === void 0 ? void 0 : (_data$me = data.me) === null || _data$me === void 0 ? void 0 : _data$me.id) !== quiz.author.id) {\n    return null;\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Square, _objectSpread(_objectSpread({}, props), {}, {\n      children: /*#__PURE__*/_jsxDEV(Menu, {\n        children: [/*#__PURE__*/_jsxDEV(MenuButton, {\n          as: IconButton,\n          \"aria-label\": \"delete or update quiz\",\n          variant: \"ghost\",\n          size: \"sm\",\n          isRound: true,\n          colorScheme: \"gray\",\n          icon: /*#__PURE__*/_jsxDEV(ChevronDownIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(MenuList, {\n          bg: bgColor,\n          color: colorBody,\n          children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n            onClick: onOpen,\n            children: [/*#__PURE__*/_jsxDEV(DeleteIcon, {\n              mr: \"12px\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 8\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"Delete\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 8\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(NextLink, {\n            href: `/quiz/edit/${quiz.id}`,\n            children: /*#__PURE__*/_jsxDEV(MenuItem, {\n              children: [/*#__PURE__*/_jsxDEV(EditIcon, {\n                mr: \"12px\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 71,\n                columnNumber: 9\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"Edit\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 72,\n                columnNumber: 9\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 8\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 7\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 5\n      }, this)\n    }), void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(AlertDialog, {\n      motionPreset: \"slideInBottom\",\n      leastDestructiveRef: cancelRef,\n      onClose: onClose,\n      isOpen: isOpen,\n      isCentered: true,\n      children: [/*#__PURE__*/_jsxDEV(AlertDialogOverlay, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(AlertDialogContent, {\n        children: [/*#__PURE__*/_jsxDEV(AlertDialogHeader, {\n          children: \"Delete quiz?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(AlertDialogCloseButton, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(AlertDialogBody, {\n          children: \"Are you sure you want to delete this quiz? You can't undo this action afterwards.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(AlertDialogFooter, {\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            ref: cancelRef,\n            onClick: onClose,\n            children: \"No\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            colorScheme: \"red\",\n            ml: 3,\n            onClick: () => {\n              deleteQuiz({\n                variables: {\n                  quiz_id: parseInt(quiz.id)\n                },\n                update: cache => {\n                  cache.evict({\n                    id: 'Quiz:' + quiz.id\n                  });\n                }\n              });\n            },\n            children: \"Yes\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 7\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true);\n};","map":{"version":3,"sources":["C:/Users/mj/Documents/Codes/PROJECTS/quizshare-typescript/client/src/components/EditDeleteQuizButtons.tsx"],"names":["ChevronDownIcon","DeleteIcon","EditIcon","AlertDialog","AlertDialogBody","AlertDialogCloseButton","AlertDialogContent","AlertDialogFooter","AlertDialogHeader","AlertDialogOverlay","Button","IconButton","Menu","MenuButton","MenuItem","MenuList","Square","useColorModeValue","useDisclosure","NextLink","React","useRef","useDeleteQuizMutation","useMeQuery","EditDeleteQuizButtons","quiz","props","data","bgColor","colorBody","deleteQuiz","isOpen","onOpen","onClose","cancelRef","me","id","author","variables","quiz_id","parseInt","update","cache","evict"],"mappings":"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","sourcesContent":["import { ChevronDownIcon, DeleteIcon, EditIcon } from '@chakra-ui/icons';\r\nimport {\r\n\tAlertDialog,\r\n\tAlertDialogBody,\r\n\tAlertDialogCloseButton,\r\n\tAlertDialogContent,\r\n\tAlertDialogFooter,\r\n\tAlertDialogHeader,\r\n\tAlertDialogOverlay,\r\n\tButton,\r\n\tIconButton,\r\n\tMenu,\r\n\tMenuButton,\r\n\tMenuItem,\r\n\tMenuList,\r\n\tSquare,\r\n\tSquareProps,\r\n\tuseColorModeValue,\r\n\tuseDisclosure,\r\n} from '@chakra-ui/react';\r\nimport NextLink from 'next/link';\r\nimport React, { RefObject, useRef } from 'react';\r\nimport {\r\n\tQuizzesResponseFragment,\r\n\tuseDeleteQuizMutation,\r\n\tuseMeQuery,\r\n} from '../generated/graphql';\r\n\r\ntype EditDeleteQuizButtonsProps = {\r\n\tquiz: QuizzesResponseFragment;\r\n} & SquareProps;\r\n\r\nexport const EditDeleteQuizButtons: React.FC<EditDeleteQuizButtonsProps> = ({\r\n\tquiz,\r\n\t...props\r\n}) => {\r\n\tconst { data } = useMeQuery();\r\n\r\n\tconst bgColor = useColorModeValue('rgb(255, 255, 255)', 'rgb(32, 32, 32)');\r\n\tconst colorBody = useColorModeValue('gray.600', '#BDBDBD');\r\n\r\n\tconst [deleteQuiz] = useDeleteQuizMutation();\r\n\r\n\tconst { isOpen, onOpen, onClose } = useDisclosure();\r\n\tconst cancelRef: RefObject<any> = useRef();\r\n\r\n\tif (data?.me?.id !== quiz.author.id) {\r\n\t\treturn null;\r\n\t}\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<Square {...props}>\r\n\t\t\t\t<Menu>\r\n\t\t\t\t\t<MenuButton\r\n\t\t\t\t\t\tas={IconButton}\r\n\t\t\t\t\t\taria-label='delete or update quiz'\r\n\t\t\t\t\t\tvariant='ghost'\r\n\t\t\t\t\t\tsize='sm'\r\n\t\t\t\t\t\tisRound\r\n\t\t\t\t\t\tcolorScheme='gray'\r\n\t\t\t\t\t\ticon={<ChevronDownIcon />}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<MenuList bg={bgColor} color={colorBody}>\r\n\t\t\t\t\t\t<MenuItem onClick={onOpen}>\r\n\t\t\t\t\t\t\t<DeleteIcon mr='12px' />\r\n\t\t\t\t\t\t\t<span>Delete</span>\r\n\t\t\t\t\t\t</MenuItem>\r\n\t\t\t\t\t\t<NextLink href={`/quiz/edit/${quiz.id}`}>\r\n\t\t\t\t\t\t\t<MenuItem>\r\n\t\t\t\t\t\t\t\t<EditIcon mr='12px' />\r\n\t\t\t\t\t\t\t\t<span>Edit</span>\r\n\t\t\t\t\t\t\t</MenuItem>\r\n\t\t\t\t\t\t</NextLink>\r\n\t\t\t\t\t</MenuList>\r\n\t\t\t\t</Menu>\r\n\t\t\t</Square>\r\n\t\t\t<AlertDialog\r\n\t\t\t\tmotionPreset='slideInBottom'\r\n\t\t\t\tleastDestructiveRef={cancelRef}\r\n\t\t\t\tonClose={onClose}\r\n\t\t\t\tisOpen={isOpen}\r\n\t\t\t\tisCentered\r\n\t\t\t>\r\n\t\t\t\t<AlertDialogOverlay />\r\n\r\n\t\t\t\t<AlertDialogContent>\r\n\t\t\t\t\t<AlertDialogHeader>Delete quiz?</AlertDialogHeader>\r\n\t\t\t\t\t<AlertDialogCloseButton />\r\n\t\t\t\t\t<AlertDialogBody>\r\n\t\t\t\t\t\tAre you sure you want to delete this quiz? You can't undo this\r\n\t\t\t\t\t\taction afterwards.\r\n\t\t\t\t\t</AlertDialogBody>\r\n\t\t\t\t\t<AlertDialogFooter>\r\n\t\t\t\t\t\t<Button ref={cancelRef} onClick={onClose}>\r\n\t\t\t\t\t\t\tNo\r\n\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\tcolorScheme='red'\r\n\t\t\t\t\t\t\tml={3}\r\n\t\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\t\tdeleteQuiz({\r\n\t\t\t\t\t\t\t\t\tvariables: {\r\n\t\t\t\t\t\t\t\t\t\tquiz_id: parseInt(quiz.id),\r\n\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\tupdate: (cache) => {\r\n\t\t\t\t\t\t\t\t\t\tcache.evict({ id: 'Quiz:' + quiz.id });\r\n\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\tYes\r\n\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t</AlertDialogFooter>\r\n\t\t\t\t</AlertDialogContent>\r\n\t\t\t</AlertDialog>\r\n\t\t</>\r\n\t);\r\n};\r\n"]},"metadata":{},"sourceType":"module"}