{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\mj\\\\Documents\\\\Codes\\\\PROJECTS\\\\quizshare-typescript\\\\client\\\\src\\\\layouts\\\\MainContainer.tsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport { Box, useColorMode, Flex } from '@chakra-ui/react';\nimport { CloudinaryContext } from 'cloudinary-react';\nimport { NavBar } from '../components/NavBar';\nexport const MainContainer = (_ref) => {\n  let {\n    children\n  } = _ref,\n      props = _objectWithoutProperties(_ref, [\"children\"]);\n\n  const {\n    colorMode\n  } = useColorMode();\n  const bgColor = {\n    light: 'white',\n    dark: '#181818'\n  };\n  const color = {\n    light: 'black',\n    dark: 'white'\n  };\n  return /*#__PURE__*/_jsxDEV(CloudinaryContext, {\n    cloudName: process.env.NEXT_PUBLIC_CLOUDINARY_CLOUD_NAME,\n    children: /*#__PURE__*/_jsxDEV(Flex, {\n      direction: \"column\",\n      bg: bgColor[colorMode],\n      color: color[colorMode],\n      minHeight: \"100vh\",\n      children: [/*#__PURE__*/_jsxDEV(NavBar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(Box, _objectSpread(_objectSpread({\n        px: ['10px', '16px', '24px']\n      }, props), {}, {\n        children: children\n      }), void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 4\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 3\n  }, this);\n};","map":{"version":3,"sources":["C:/Users/mj/Documents/Codes/PROJECTS/quizshare-typescript/client/src/layouts/MainContainer.tsx"],"names":["Box","useColorMode","Flex","CloudinaryContext","NavBar","MainContainer","children","props","colorMode","bgColor","light","dark","color","process","env","NEXT_PUBLIC_CLOUDINARY_CLOUD_NAME"],"mappings":";;;;;;;;;;;;;AAAA,SAASA,GAAT,EAAcC,YAAd,EAAsCC,IAAtC,QAAkD,kBAAlD;AACA,SAASC,iBAAT,QAAkC,kBAAlC;AACA,SAASC,MAAT,QAAuB,sBAAvB;AAIA,OAAO,MAAMC,aAA2C,GAAG,UAGrD;AAAA,MAHsD;AAC3DC,IAAAA;AAD2D,GAGtD;AAAA,MADFC,KACE;;AACL,QAAM;AAAEC,IAAAA;AAAF,MAAgBP,YAAY,EAAlC;AAEA,QAAMQ,OAAO,GAAG;AAAEC,IAAAA,KAAK,EAAE,OAAT;AAAkBC,IAAAA,IAAI,EAAE;AAAxB,GAAhB;AACA,QAAMC,KAAK,GAAG;AAAEF,IAAAA,KAAK,EAAE,OAAT;AAAkBC,IAAAA,IAAI,EAAE;AAAxB,GAAd;AAEA,sBACC,QAAC,iBAAD;AACC,IAAA,SAAS,EAAEE,OAAO,CAACC,GAAR,CAAYC,iCADxB;AAAA,2BAGC,QAAC,IAAD;AACC,MAAA,SAAS,EAAC,QADX;AAEC,MAAA,EAAE,EAAEN,OAAO,CAACD,SAAD,CAFZ;AAGC,MAAA,KAAK,EAAEI,KAAK,CAACJ,SAAD,CAHb;AAIC,MAAA,SAAS,EAAC,OAJX;AAAA,8BAMC,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,cAND,eAOC,QAAC,GAAD;AAAK,QAAA,EAAE,EAAE,CAAC,MAAD,EAAS,MAAT,EAAiB,MAAjB;AAAT,SAAuCD,KAAvC;AAAA,kBACED;AADF;AAAA;AAAA;AAAA;AAAA,cAPD;AAAA;AAAA;AAAA;AAAA;AAAA;AAHD;AAAA;AAAA;AAAA;AAAA,UADD;AAiBA,CA1BM","sourcesContent":["import { Box, useColorMode, BoxProps, Flex } from '@chakra-ui/react';\r\nimport { CloudinaryContext } from 'cloudinary-react';\r\nimport { NavBar } from '../components/NavBar';\r\n\r\ninterface MainContainerProps extends BoxProps {}\r\n\r\nexport const MainContainer: React.FC<MainContainerProps> = ({\r\n\tchildren,\r\n\t...props\r\n}) => {\r\n\tconst { colorMode } = useColorMode();\r\n\r\n\tconst bgColor = { light: 'white', dark: '#181818' };\r\n\tconst color = { light: 'black', dark: 'white' };\r\n\r\n\treturn (\r\n\t\t<CloudinaryContext\r\n\t\t\tcloudName={process.env.NEXT_PUBLIC_CLOUDINARY_CLOUD_NAME}\r\n\t\t>\r\n\t\t\t<Flex\r\n\t\t\t\tdirection='column'\r\n\t\t\t\tbg={bgColor[colorMode]}\r\n\t\t\t\tcolor={color[colorMode]}\r\n\t\t\t\tminHeight='100vh'\r\n\t\t\t>\r\n\t\t\t\t<NavBar />\r\n\t\t\t\t<Box px={['10px', '16px', '24px']} {...props}>\r\n\t\t\t\t\t{children}\r\n\t\t\t\t</Box>\r\n\t\t\t</Flex>\r\n\t\t</CloudinaryContext>\r\n\t);\r\n};\r\n"]},"metadata":{},"sourceType":"module"}