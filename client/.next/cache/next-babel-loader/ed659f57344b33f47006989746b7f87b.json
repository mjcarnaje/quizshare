{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\mj\\\\Documents\\\\Codes\\\\PROJECTS\\\\quizshare-typescript\\\\client\\\\src\\\\layouts\\\\DashboardContainer.tsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from 'react';\nimport { Center, Grid, GridItem, List, Flex, ListItem, useColorModeValue } from '@chakra-ui/react';\nimport { AiOutlineUser } from 'react-icons/ai';\nimport { IoDocumentsOutline } from 'react-icons/io5';\nimport NextLink from 'next/link';\nimport { useRouter } from 'next/dist/client/router';\n\nvar MainNavLink = function MainNavLink(_ref) {\n  _s();\n\n  var href = _ref.href,\n      icon = _ref.icon,\n      children = _ref.children;\n\n  var _useRouter = useRouter(),\n      pathname = _useRouter.pathname;\n\n  var _href$split = href.split('/'),\n      _href$split2 = _slicedToArray(_href$split, 3),\n      path = _href$split2[2];\n\n  var active = pathname.includes(path);\n  var linkColor = useColorModeValue('purple.500', 'gray.100');\n  var bgColor = useColorModeValue('purple.50', 'rgba(255, 255, 255, 0.04)');\n  return /*#__PURE__*/_jsxDEV(NextLink, {\n    href: href,\n    passHref: true,\n    children: /*#__PURE__*/_jsxDEV(Flex, {\n      as: \"a\",\n      align: \"center\",\n      fontSize: \"md\",\n      fontWeight: active ? 'semibold' : '',\n      transitionProperty: \"colors\",\n      transitionDuration: \"200ms\",\n      color: active ? linkColor : 'gray.500',\n      _hover: {\n        color: linkColor,\n        bg: bgColor\n      },\n      fontFamily: \"inter\",\n      bg: active ? bgColor : '',\n      px: \"6px\",\n      py: \"8px\",\n      rounded: \"8px\",\n      children: [/*#__PURE__*/_jsxDEV(Center, {\n        mr: \"3\",\n        fontSize: \"24px\",\n        children: icon\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 5\n      }, _this), children]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 4\n    }, _this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 3\n  }, _this);\n};\n\n_s(MainNavLink, \"+apsL08VcIlmy/DmQcfDOnSsIAs=\", false, function () {\n  return [useRouter, useColorModeValue, useColorModeValue];\n});\n\n_c = MainNavLink;\nvar mainNavLinks = [{\n  icon: /*#__PURE__*/_jsxDEV(AiOutlineUser, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 9\n  }, this),\n  href: '/dashboard/profile',\n  label: 'Profile'\n}, {\n  icon: /*#__PURE__*/_jsxDEV(IoDocumentsOutline, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 9\n  }, this),\n  href: '/dashboard/published',\n  label: 'Published'\n}];\nexport var DashboardContainer = function DashboardContainer(_ref2) {\n  var children = _ref2.children,\n      props = _objectWithoutProperties(_ref2, [\"children\"]);\n\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    templateColumns: \"repeat(12, 1fr)\",\n    gap: 2,\n    px: \"64px\",\n    children: [/*#__PURE__*/_jsxDEV(GridItem, {\n      colSpan: 3,\n      children: /*#__PURE__*/_jsxDEV(List, {\n        spacing: \"2\",\n        styleType: \"none\",\n        py: \"32px\",\n        pl: \"12px\",\n        pr: \"32px\",\n        children: mainNavLinks.map(function (item) {\n          return /*#__PURE__*/_jsxDEV(ListItem, {\n            children: /*#__PURE__*/_jsxDEV(MainNavLink, {\n              icon: item.icon,\n              href: item.href,\n              children: item.label\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 8\n            }, _this)\n          }, item.label, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 7\n          }, _this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 5\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 4\n    }, _this), /*#__PURE__*/_jsxDEV(GridItem, _objectSpread(_objectSpread({\n      colSpan: 9,\n      px: \"5px\"\n    }, props), {}, {\n      children: children\n    }), void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 4\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 3\n  }, _this);\n};\n_c2 = DashboardContainer;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"MainNavLink\");\n$RefreshReg$(_c2, \"DashboardContainer\");","map":{"version":3,"sources":["C:/Users/mj/Documents/Codes/PROJECTS/quizshare-typescript/client/src/layouts/DashboardContainer.tsx"],"names":["React","Center","Grid","GridItem","List","Flex","ListItem","useColorModeValue","AiOutlineUser","IoDocumentsOutline","NextLink","useRouter","MainNavLink","href","icon","children","pathname","split","path","active","includes","linkColor","bgColor","color","bg","mainNavLinks","label","DashboardContainer","props","map","item"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport {\r\n\tBoxProps,\r\n\tCenter,\r\n\tGrid,\r\n\tGridItem,\r\n\tList,\r\n\tFlex,\r\n\tListItem,\r\n\tuseColorModeValue,\r\n} from '@chakra-ui/react';\r\nimport { AiOutlineUser } from 'react-icons/ai';\r\nimport { IoDocumentsOutline } from 'react-icons/io5';\r\nimport NextLink from 'next/link';\r\nimport { useRouter } from 'next/dist/client/router';\r\n\r\ninterface MainNavLinkProps {\r\n\thref: string;\r\n\ticon: any;\r\n}\r\n\r\nconst MainNavLink: React.FC<MainNavLinkProps> = ({ href, icon, children }) => {\r\n\tconst { pathname } = useRouter();\r\n\tconst [, , path] = href.split('/');\r\n\r\n\tconst active = pathname.includes(path);\r\n\tconst linkColor = useColorModeValue('purple.500', 'gray.100');\r\n\tconst bgColor = useColorModeValue('purple.50', 'rgba(255, 255, 255, 0.04)');\r\n\r\n\treturn (\r\n\t\t<NextLink href={href} passHref>\r\n\t\t\t<Flex\r\n\t\t\t\tas='a'\r\n\t\t\t\talign='center'\r\n\t\t\t\tfontSize='md'\r\n\t\t\t\tfontWeight={active ? 'semibold' : ''}\r\n\t\t\t\ttransitionProperty='colors'\r\n\t\t\t\ttransitionDuration='200ms'\r\n\t\t\t\tcolor={active ? linkColor : 'gray.500'}\r\n\t\t\t\t_hover={{ color: linkColor, bg: bgColor }}\r\n\t\t\t\tfontFamily='inter'\r\n\t\t\t\tbg={active ? bgColor : ''}\r\n\t\t\t\tpx='6px'\r\n\t\t\t\tpy='8px'\r\n\t\t\t\trounded='8px'\r\n\t\t\t>\r\n\t\t\t\t<Center mr='3' fontSize='24px'>\r\n\t\t\t\t\t{icon}\r\n\t\t\t\t</Center>\r\n\t\t\t\t{children}\r\n\t\t\t</Flex>\r\n\t\t</NextLink>\r\n\t);\r\n};\r\n\r\nconst mainNavLinks = [\r\n\t{\r\n\t\ticon: <AiOutlineUser />,\r\n\t\thref: '/dashboard/profile',\r\n\t\tlabel: 'Profile',\r\n\t},\r\n\t{\r\n\t\ticon: <IoDocumentsOutline />,\r\n\t\thref: '/dashboard/published',\r\n\t\tlabel: 'Published',\r\n\t},\r\n];\r\n\r\ninterface DashboardContainerProps extends BoxProps {}\r\n\r\nexport const DashboardContainer: React.FC<DashboardContainerProps> = ({\r\n\tchildren,\r\n\t...props\r\n}) => {\r\n\treturn (\r\n\t\t<Grid templateColumns='repeat(12, 1fr)' gap={2} px='64px'>\r\n\t\t\t<GridItem colSpan={3}>\r\n\t\t\t\t<List spacing='2' styleType='none' py='32px' pl='12px' pr='32px'>\r\n\t\t\t\t\t{mainNavLinks.map((item) => (\r\n\t\t\t\t\t\t<ListItem key={item.label}>\r\n\t\t\t\t\t\t\t<MainNavLink icon={item.icon} href={item.href}>\r\n\t\t\t\t\t\t\t\t{item.label}\r\n\t\t\t\t\t\t\t</MainNavLink>\r\n\t\t\t\t\t\t</ListItem>\r\n\t\t\t\t\t))}\r\n\t\t\t\t</List>\r\n\t\t\t</GridItem>\r\n\t\t\t<GridItem colSpan={9} px='5px' {...props}>\r\n\t\t\t\t{children}\r\n\t\t\t</GridItem>\r\n\t\t</Grid>\r\n\t);\r\n};\r\n"]},"metadata":{},"sourceType":"module"}