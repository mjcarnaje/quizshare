{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\mj\\\\Documents\\\\Codes\\\\PROJECTS\\\\quizshare-typescript\\\\client\\\\src\\\\components\\\\custom-inputs\\\\QuizInputUI.tsx\",\n    _this = this;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { FormControl, FormErrorMessage, FormLabel, Input } from '@chakra-ui/react';\nimport React from 'react';\n\nvar QuizInputUI = function QuizInputUI(_ref) {\n  var input = _ref.input,\n      name = _ref.name,\n      register = _ref.register,\n      error = _ref.error,\n      errorMessage = _ref.errorMessage,\n      isChoiceInput = _ref.isChoiceInput,\n      props = _objectWithoutProperties(_ref, [\"input\", \"name\", \"register\", \"error\", \"errorMessage\", \"isChoiceInput\"]);\n\n  return /*#__PURE__*/_jsxDEV(FormControl, {\n    isInvalid: !!error,\n    mb: isChoiceInput ? '24px' : '',\n    children: [name && /*#__PURE__*/_jsxDEV(FormLabel, {\n      fontFamily: \"inter\",\n      textTransform: \"uppercase\",\n      fontWeight: \"400\",\n      fontSize: \"14px\",\n      children: name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 5\n    }, _this), /*#__PURE__*/_jsxDEV(Input, _objectSpread({\n      ref: register,\n      name: input,\n      variant: \"filled\" // bg='#f7fafc'\n      ,\n      _focus: {\n        outline: 'none'\n      },\n      fontFamily: \"inter\",\n      isInvalid: !!error\n    }, props), void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 4\n    }, _this), error && /*#__PURE__*/_jsxDEV(FormErrorMessage, {\n      mt: \"0\",\n      children: \"\".concat(errorMessage[0].toUpperCase()).concat(errorMessage.slice(1))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 5\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 3\n  }, _this);\n};\n\n_c = QuizInputUI;\nexport default QuizInputUI;\n\nvar _c;\n\n$RefreshReg$(_c, \"QuizInputUI\");","map":{"version":3,"sources":["C:/Users/mj/Documents/Codes/PROJECTS/quizshare-typescript/client/src/components/custom-inputs/QuizInputUI.tsx"],"names":["FormControl","FormErrorMessage","FormLabel","Input","React","QuizInputUI","input","name","register","error","errorMessage","isChoiceInput","props","outline","toUpperCase","slice"],"mappings":";;;;;;;;;;;AAAA,SACCA,WADD,EAECC,gBAFD,EAGCC,SAHD,EAICC,KAJD,QAMO,kBANP;AAOA,OAAOC,KAAP,MAAkB,OAAlB;;AAWA,IAAMC,WAAuC,GAAG,SAA1CA,WAA0C,OAQ1C;AAAA,MAPLC,KAOK,QAPLA,KAOK;AAAA,MANLC,IAMK,QANLA,IAMK;AAAA,MALLC,QAKK,QALLA,QAKK;AAAA,MAJLC,KAIK,QAJLA,KAIK;AAAA,MAHLC,YAGK,QAHLA,YAGK;AAAA,MAFLC,aAEK,QAFLA,aAEK;AAAA,MADFC,KACE;;AACL,sBACC,QAAC,WAAD;AAAa,IAAA,SAAS,EAAE,CAAC,CAACH,KAA1B;AAAiC,IAAA,EAAE,EAAEE,aAAa,GAAG,MAAH,GAAY,EAA9D;AAAA,eACEJ,IAAI,iBACJ,QAAC,SAAD;AACC,MAAA,UAAU,EAAC,OADZ;AAEC,MAAA,aAAa,EAAC,WAFf;AAGC,MAAA,UAAU,EAAC,KAHZ;AAIC,MAAA,QAAQ,EAAC,MAJV;AAAA,gBAMEA;AANF;AAAA;AAAA;AAAA;AAAA,aAFF,eAWC,QAAC,KAAD;AACC,MAAA,GAAG,EAAEC,QADN;AAEC,MAAA,IAAI,EAAEF,KAFP;AAGC,MAAA,OAAO,EAAC,QAHT,CAIC;AAJD;AAKC,MAAA,MAAM,EAAE;AAAEO,QAAAA,OAAO,EAAE;AAAX,OALT;AAMC,MAAA,UAAU,EAAC,OANZ;AAOC,MAAA,SAAS,EAAE,CAAC,CAACJ;AAPd,OAQKG,KARL;AAAA;AAAA;AAAA;AAAA,aAXD,EAqBEH,KAAK,iBACL,QAAC,gBAAD;AAAkB,MAAA,EAAE,EAAC,GAArB;AAAA,0BACKC,YAAY,CAAC,CAAD,CAAZ,CAAgBI,WAAhB,EADL,SACqCJ,YAAY,CAACK,KAAb,CAAmB,CAAnB,CADrC;AAAA;AAAA;AAAA;AAAA;AAAA,aAtBF;AAAA;AAAA;AAAA;AAAA;AAAA,WADD;AA6BA,CAtCD;;KAAMV,W;AAwCN,eAAeA,WAAf","sourcesContent":["import {\r\n\tFormControl,\r\n\tFormErrorMessage,\r\n\tFormLabel,\r\n\tInput,\r\n\tInputProps,\r\n} from '@chakra-ui/react';\r\nimport React from 'react';\r\n\r\ntype QuizInputUIProps = {\r\n\tinput: string;\r\n\tname?: string;\r\n\tregister: any;\r\n\terror: any;\r\n\terrorMessage: string;\r\n\tisChoiceInput?: boolean;\r\n} & InputProps;\r\n\r\nconst QuizInputUI: React.FC<QuizInputUIProps> = ({\r\n\tinput,\r\n\tname,\r\n\tregister,\r\n\terror,\r\n\terrorMessage,\r\n\tisChoiceInput,\r\n\t...props\r\n}) => {\r\n\treturn (\r\n\t\t<FormControl isInvalid={!!error} mb={isChoiceInput ? '24px' : ''}>\r\n\t\t\t{name && (\r\n\t\t\t\t<FormLabel\r\n\t\t\t\t\tfontFamily='inter'\r\n\t\t\t\t\ttextTransform='uppercase'\r\n\t\t\t\t\tfontWeight='400'\r\n\t\t\t\t\tfontSize='14px'\r\n\t\t\t\t>\r\n\t\t\t\t\t{name}\r\n\t\t\t\t</FormLabel>\r\n\t\t\t)}\r\n\t\t\t<Input\r\n\t\t\t\tref={register}\r\n\t\t\t\tname={input}\r\n\t\t\t\tvariant='filled'\r\n\t\t\t\t// bg='#f7fafc'\r\n\t\t\t\t_focus={{ outline: 'none' }}\r\n\t\t\t\tfontFamily='inter'\r\n\t\t\t\tisInvalid={!!error}\r\n\t\t\t\t{...props}\r\n\t\t\t/>\r\n\t\t\t{error && (\r\n\t\t\t\t<FormErrorMessage mt='0'>\r\n\t\t\t\t\t{`${errorMessage[0].toUpperCase()}${errorMessage.slice(1)}`}\r\n\t\t\t\t</FormErrorMessage>\r\n\t\t\t)}\r\n\t\t</FormControl>\r\n\t);\r\n};\r\n\r\nexport default QuizInputUI;\r\n"]},"metadata":{},"sourceType":"module"}