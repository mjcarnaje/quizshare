{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\mj\\\\Documents\\\\Codes\\\\PROJECTS\\\\quizshare-typescript\\\\client\\\\src\\\\pages\\\\login.tsx\";\nimport { Box, Button, Text, useColorModeValue, VStack } from '@chakra-ui/react';\nimport { useRouter } from 'next/dist/client/router';\nimport Head from 'next/head';\nimport React from 'react';\nimport { useForm } from 'react-hook-form';\nimport { MainContainer } from '../layouts/MainContainer';\nimport MainInputUI from '../components/custom-inputs/MainInputUI';\nimport { MeDocument, useLoginMutation } from '../generated/graphql';\nimport errorMapper from '../utils/errorMapper';\nimport { withApollo } from '../utils/withApollo';\n\nconst Login = () => {\n  const bgColor = useColorModeValue('white', '#202020');\n  const registerBoxShadow = useColorModeValue('md', 'lg');\n  const borderColor = useColorModeValue('gray.200', '');\n  const [loginUser, {\n    loading\n  }] = useLoginMutation();\n  const router = useRouter();\n  const {\n    register,\n    handleSubmit,\n    errors,\n    setError\n  } = useForm();\n\n  const onSumbit = async values => {\n    try {\n      const {\n        data\n      } = await loginUser({\n        variables: values,\n        update: (cache, {\n          data\n        }) => {\n          cache.writeQuery({\n            query: MeDocument,\n            data: {\n              __typename: 'Query',\n              me: data === null || data === void 0 ? void 0 : data.login\n            }\n          });\n        }\n      });\n\n      if (data === null || data === void 0 ? void 0 : data.login) {\n        router.push('/');\n      }\n    } catch (err) {\n      errorMapper(err, setError);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(MainContainer, {\n    flexGrow: 1,\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    children: [/*#__PURE__*/_jsxDEV(Head, {\n      children: [/*#__PURE__*/_jsxDEV(\"title\", {\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"meta\", {\n        name: \"viewport\",\n        content: \"initial-scale=1.0, width=device-width\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      borderWidth: \"1px\",\n      borderColor: borderColor,\n      bg: bgColor,\n      boxShadow: registerBoxShadow,\n      rounded: \"md\",\n      w: \"40%\",\n      px: \"32px\",\n      py: \"16px\",\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        mb: \"20px\",\n        children: /*#__PURE__*/_jsxDEV(Text, {\n          fontSize: \"28px\",\n          fontFamily: \"berkshire\",\n          textAlign: \"center\",\n          color: \"purple.500\",\n          children: \"Qs\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 6\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit(onSumbit),\n        children: [/*#__PURE__*/_jsxDEV(VStack, {\n          spacing: \"10px\",\n          py: \"24px\",\n          children: [/*#__PURE__*/_jsxDEV(MainInputUI, {\n            error: errors.emailOrUsername,\n            input: \"emailOrUsername\",\n            name: \"Email or username\",\n            register: register,\n            type: \"text\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(MainInputUI, {\n            error: errors.password,\n            input: \"password\",\n            name: \"Password\",\n            register: register,\n            type: \"password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 7\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          w: \"full\",\n          textAlign: \"right\",\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            type: \"submit\",\n            size: \"sm\",\n            isLoading: loading,\n            rounded: \"20px\",\n            px: \"20px\",\n            colorScheme: \"purple\",\n            fontWeight: \"bold\",\n            children: \"Login\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 7\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 3\n  }, this);\n};\n\nexport default withApollo({\n  ssr: false\n})(Login);","map":{"version":3,"sources":["C:/Users/mj/Documents/Codes/PROJECTS/quizshare-typescript/client/src/pages/login.tsx"],"names":["Box","Button","Text","useColorModeValue","VStack","useRouter","Head","React","useForm","MainContainer","MainInputUI","MeDocument","useLoginMutation","errorMapper","withApollo","Login","bgColor","registerBoxShadow","borderColor","loginUser","loading","router","register","handleSubmit","errors","setError","onSumbit","values","data","variables","update","cache","writeQuery","query","__typename","me","login","push","err","emailOrUsername","password","ssr"],"mappings":"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","sourcesContent":["import { Box, Button, Text, useColorModeValue, VStack } from '@chakra-ui/react';\r\nimport { useRouter } from 'next/dist/client/router';\r\nimport Head from 'next/head';\r\nimport React from 'react';\r\nimport { useForm } from 'react-hook-form';\r\nimport { MainContainer } from '../layouts/MainContainer';\r\nimport MainInputUI from '../components/custom-inputs/MainInputUI';\r\nimport {\r\n\tLoginInput,\r\n\tMeDocument,\r\n\tMeQuery,\r\n\tuseLoginMutation,\r\n} from '../generated/graphql';\r\nimport errorMapper from '../utils/errorMapper';\r\nimport { withApollo } from '../utils/withApollo';\r\n\r\nconst Login: React.FC = () => {\r\n\tconst bgColor = useColorModeValue('white', '#202020');\r\n\tconst registerBoxShadow = useColorModeValue('md', 'lg');\r\n\tconst borderColor = useColorModeValue('gray.200', '');\r\n\r\n\tconst [loginUser, { loading }] = useLoginMutation();\r\n\r\n\tconst router = useRouter();\r\n\r\n\tconst { register, handleSubmit, errors, setError } = useForm<LoginInput>();\r\n\r\n\tconst onSumbit = async (values: LoginInput) => {\r\n\t\ttry {\r\n\t\t\tconst { data } = await loginUser({\r\n\t\t\t\tvariables: values,\r\n\t\t\t\tupdate: (cache, { data }) => {\r\n\t\t\t\t\tcache.writeQuery<MeQuery>({\r\n\t\t\t\t\t\tquery: MeDocument,\r\n\t\t\t\t\t\tdata: {\r\n\t\t\t\t\t\t\t__typename: 'Query',\r\n\t\t\t\t\t\t\tme: data?.login,\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t});\r\n\t\t\t\t},\r\n\t\t\t});\r\n\t\t\tif (data?.login) {\r\n\t\t\t\trouter.push('/');\r\n\t\t\t}\r\n\t\t} catch (err) {\r\n\t\t\terrorMapper(err, setError);\r\n\t\t}\r\n\t};\r\n\treturn (\r\n\t\t<MainContainer\r\n\t\t\tflexGrow={1}\r\n\t\t\tdisplay='flex'\r\n\t\t\tjustifyContent='center'\r\n\t\t\talignItems='center'\r\n\t\t>\r\n\t\t\t<Head>\r\n\t\t\t\t<title>Login</title>\r\n\t\t\t\t<meta name='viewport' content='initial-scale=1.0, width=device-width' />\r\n\t\t\t</Head>\r\n\t\t\t<Box\r\n\t\t\t\tborderWidth='1px'\r\n\t\t\t\tborderColor={borderColor}\r\n\t\t\t\tbg={bgColor}\r\n\t\t\t\tboxShadow={registerBoxShadow}\r\n\t\t\t\trounded='md'\r\n\t\t\t\tw='40%'\r\n\t\t\t\tpx='32px'\r\n\t\t\t\tpy='16px'\r\n\t\t\t>\r\n\t\t\t\t<Box mb='20px'>\r\n\t\t\t\t\t<Text\r\n\t\t\t\t\t\tfontSize='28px'\r\n\t\t\t\t\t\tfontFamily='berkshire'\r\n\t\t\t\t\t\ttextAlign='center'\r\n\t\t\t\t\t\tcolor='purple.500'\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\tQs\r\n\t\t\t\t\t</Text>\r\n\t\t\t\t</Box>\r\n\t\t\t\t<form onSubmit={handleSubmit(onSumbit)}>\r\n\t\t\t\t\t<VStack spacing='10px' py='24px'>\r\n\t\t\t\t\t\t<MainInputUI\r\n\t\t\t\t\t\t\terror={errors.emailOrUsername}\r\n\t\t\t\t\t\t\tinput='emailOrUsername'\r\n\t\t\t\t\t\t\tname='Email or username'\r\n\t\t\t\t\t\t\tregister={register}\r\n\t\t\t\t\t\t\ttype='text'\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t<MainInputUI\r\n\t\t\t\t\t\t\terror={errors.password}\r\n\t\t\t\t\t\t\tinput='password'\r\n\t\t\t\t\t\t\tname='Password'\r\n\t\t\t\t\t\t\tregister={register}\r\n\t\t\t\t\t\t\ttype='password'\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</VStack>\r\n\t\t\t\t\t<Box w='full' textAlign='right'>\r\n\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\ttype='submit'\r\n\t\t\t\t\t\t\tsize='sm'\r\n\t\t\t\t\t\t\tisLoading={loading}\r\n\t\t\t\t\t\t\trounded='20px'\r\n\t\t\t\t\t\t\tpx='20px'\r\n\t\t\t\t\t\t\tcolorScheme='purple'\r\n\t\t\t\t\t\t\tfontWeight='bold'\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\tLogin\r\n\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t</Box>\r\n\t\t\t\t</form>\r\n\t\t\t</Box>\r\n\t\t</MainContainer>\r\n\t);\r\n};\r\n\r\nexport default withApollo({ ssr: false })(Login);\r\n"]},"metadata":{},"sourceType":"module"}