{"ast":null,"code":"import { createStandaloneToast } from '@chakra-ui/react';\nconst toast = createStandaloneToast();\n\nconst errorMapper = (err, setError) => {\n  if (err.graphQLErrors[0].message.includes('Argument Validation Error')) {\n    var _err$graphQLErrors$;\n\n    (_err$graphQLErrors$ = err.graphQLErrors[0]) === null || _err$graphQLErrors$ === void 0 ? void 0 : _err$graphQLErrors$.extensions.exception.validationErrors.forEach(validationErr => {\n      Object.values(validationErr.constraints).forEach(message => {\n        return setError(validationErr.property, {\n          type: 'server',\n          message: message\n        });\n      });\n    });\n  } else {\n    var _err$graphQLErrors$0$, _err$graphQLErrors, _err$graphQLErrors$2;\n\n    return toast({\n      title: 'An error occurred.',\n      description: (_err$graphQLErrors$0$ = (_err$graphQLErrors = err.graphQLErrors) === null || _err$graphQLErrors === void 0 ? void 0 : (_err$graphQLErrors$2 = _err$graphQLErrors[0]) === null || _err$graphQLErrors$2 === void 0 ? void 0 : _err$graphQLErrors$2.message) !== null && _err$graphQLErrors$0$ !== void 0 ? _err$graphQLErrors$0$ : 'There is an error',\n      status: 'error',\n      isClosable: true,\n      position: 'bottom-right'\n    });\n  }\n};\n\nexport default errorMapper;","map":{"version":3,"sources":["C:/Users/mj/Documents/Codes/PROJECTS/quizshare-typescript/client/src/utils/errorMapper.ts"],"names":["createStandaloneToast","toast","errorMapper","err","setError","graphQLErrors","message","includes","extensions","exception","validationErrors","forEach","validationErr","Object","values","constraints","property","type","title","description","status","isClosable","position"],"mappings":"AAAA,SAASA,qBAAT,QAAsC,kBAAtC;AAEA,MAAMC,KAAK,GAAGD,qBAAqB,EAAnC;;AAEA,MAAME,WAAW,GAAG,CAACC,GAAD,EAAWC,QAAX,KAAkC;AACrD,MAAID,GAAG,CAACE,aAAJ,CAAkB,CAAlB,EAAqBC,OAArB,CAA6BC,QAA7B,CAAsC,2BAAtC,CAAJ,EAAwE;AAAA;;AACvE,2BAAAJ,GAAG,CAACE,aAAJ,CAAkB,CAAlB,6EAAsBG,UAAtB,CAAiCC,SAAjC,CAA2CC,gBAA3C,CAA4DC,OAA5D,CACEC,aAAD,IAAwB;AACvBC,MAAAA,MAAM,CAACC,MAAP,CAAcF,aAAa,CAACG,WAA5B,EAAyCJ,OAAzC,CAAkDL,OAAD,IAAkB;AAClE,eAAOF,QAAQ,CAACQ,aAAa,CAACI,QAAf,EAAyB;AACvCC,UAAAA,IAAI,EAAE,QADiC;AAEvCX,UAAAA,OAAO,EAAEA;AAF8B,SAAzB,CAAf;AAIA,OALD;AAMA,KARF;AAUA,GAXD,MAWO;AAAA;;AACN,WAAOL,KAAK,CAAC;AACZiB,MAAAA,KAAK,EAAE,oBADK;AAEZC,MAAAA,WAAW,iDAAEhB,GAAG,CAACE,aAAN,+EAAE,mBAAoB,CAApB,CAAF,yDAAE,qBAAwBC,OAA1B,yEAAqC,mBAFpC;AAGZc,MAAAA,MAAM,EAAE,OAHI;AAIZC,MAAAA,UAAU,EAAE,IAJA;AAKZC,MAAAA,QAAQ,EAAE;AALE,KAAD,CAAZ;AAOA;AACD,CArBD;;AAuBA,eAAepB,WAAf","sourcesContent":["import { createStandaloneToast } from '@chakra-ui/react';\r\n\r\nconst toast = createStandaloneToast();\r\n\r\nconst errorMapper = (err: any, setError: Function) => {\r\n\tif (err.graphQLErrors[0].message.includes('Argument Validation Error')) {\r\n\t\terr.graphQLErrors[0]?.extensions.exception.validationErrors.forEach(\r\n\t\t\t(validationErr: any) => {\r\n\t\t\t\tObject.values(validationErr.constraints).forEach((message: any) => {\r\n\t\t\t\t\treturn setError(validationErr.property, {\r\n\t\t\t\t\t\ttype: 'server',\r\n\t\t\t\t\t\tmessage: message,\r\n\t\t\t\t\t});\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t);\r\n\t} else {\r\n\t\treturn toast({\r\n\t\t\ttitle: 'An error occurred.',\r\n\t\t\tdescription: err.graphQLErrors?.[0]?.message ?? 'There is an error',\r\n\t\t\tstatus: 'error',\r\n\t\t\tisClosable: true,\r\n\t\t\tposition: 'bottom-right',\r\n\t\t});\r\n\t}\r\n};\r\n\r\nexport default errorMapper;\r\n"]},"metadata":{},"sourceType":"module"}