{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\mj\\\\Documents\\\\Codes\\\\PROJECTS\\\\quizshare-typescript\\\\client\\\\src\\\\components\\\\LikeButton.tsx\";\nimport { gql } from '@apollo/client';\nimport { Center, IconButton, Text } from '@chakra-ui/react';\nimport React from 'react';\nimport { IoIosHeart } from 'react-icons/io';\nimport { useToggleLikeMutation } from '../generated/graphql';\nexport const LikeButton = ({\n  quiz: {\n    isLiked,\n    id,\n    likesCount\n  },\n  withoutCount\n}) => {\n  const [toggleLike] = useToggleLikeMutation();\n  return /*#__PURE__*/_jsxDEV(Center, {\n    children: [/*#__PURE__*/_jsxDEV(IconButton, {\n      variant: \"outline\",\n      colorScheme: \"gray\",\n      \"aria-label\": \"Like post\",\n      isRound: true,\n      color: isLiked ? 'red.400' : 'gray.400',\n      _focus: {\n        outline: 'none'\n      },\n      border: \"none\",\n      _hover: {\n        color: isLiked ? 'red.500' : 'gray.500'\n      },\n      fontSize: \"24px\",\n      icon: /*#__PURE__*/_jsxDEV(IoIosHeart, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 11\n      }, this),\n      onClick: async () => await toggleLike({\n        variables: {\n          quiz_id: parseInt(id)\n        },\n        update: cache => {\n          const data = cache.readFragment({\n            id: 'Quiz:' + id,\n            fragment: gql`\n\t\t\t\t\t\t\t\t\tfragment _ on Quiz {\n\t\t\t\t\t\t\t\t\t\tid\n\t\t\t\t\t\t\t\t\t\tlikesCount\n\t\t\t\t\t\t\t\t\t\tisLiked\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t`\n          });\n          let newIsLiked;\n          let newLikesCount = data.likesCount;\n\n          if (data && data.isLiked) {\n            newIsLiked = false;\n            newLikesCount = newLikesCount - 1;\n          } else {\n            newIsLiked = true;\n            newLikesCount = newLikesCount + 1;\n          }\n\n          cache.writeFragment({\n            id: 'Quiz:' + id,\n            fragment: gql`\n\t\t\t\t\t\t\t\t\tfragment _ on Quiz {\n\t\t\t\t\t\t\t\t\t\tid\n\t\t\t\t\t\t\t\t\t\tlikesCount\n\t\t\t\t\t\t\t\t\t\tisLiked\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t`,\n            data: {\n              isLiked: newIsLiked,\n              likesCount: newLikesCount\n            }\n          });\n        }\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 4\n    }, this), !withoutCount && /*#__PURE__*/_jsxDEV(Text, {\n      fontSize: \"14px\",\n      fontWeight: \"medium\",\n      color: \"gray.400\",\n      children: likesCount\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 3\n  }, this);\n};","map":{"version":3,"sources":["C:/Users/mj/Documents/Codes/PROJECTS/quizshare-typescript/client/src/components/LikeButton.tsx"],"names":["gql","Center","IconButton","Text","React","IoIosHeart","useToggleLikeMutation","LikeButton","quiz","isLiked","id","likesCount","withoutCount","toggleLike","outline","color","variables","quiz_id","parseInt","update","cache","data","readFragment","fragment","newIsLiked","newLikesCount","writeFragment"],"mappings":";;AAAA,SAASA,GAAT,QAAoB,gBAApB;AACA,SAASC,MAAT,EAAiBC,UAAjB,EAA6BC,IAA7B,QAAyC,kBAAzC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,UAAT,QAA2B,gBAA3B;AACA,SAASC,qBAAT,QAAsC,sBAAtC;AAYA,OAAO,MAAMC,UAAqC,GAAG,CAAC;AACrDC,EAAAA,IAAI,EAAE;AAAEC,IAAAA,OAAF;AAAWC,IAAAA,EAAX;AAAeC,IAAAA;AAAf,GAD+C;AAErDC,EAAAA;AAFqD,CAAD,KAG/C;AACL,QAAM,CAACC,UAAD,IAAeP,qBAAqB,EAA1C;AAEA,sBACC,QAAC,MAAD;AAAA,4BACC,QAAC,UAAD;AACC,MAAA,OAAO,EAAC,SADT;AAEC,MAAA,WAAW,EAAC,MAFb;AAGC,oBAAW,WAHZ;AAIC,MAAA,OAAO,MAJR;AAKC,MAAA,KAAK,EAAEG,OAAO,GAAG,SAAH,GAAe,UAL9B;AAMC,MAAA,MAAM,EAAE;AAAEK,QAAAA,OAAO,EAAE;AAAX,OANT;AAOC,MAAA,MAAM,EAAC,MAPR;AAQC,MAAA,MAAM,EAAE;AAAEC,QAAAA,KAAK,EAAEN,OAAO,GAAG,SAAH,GAAe;AAA/B,OART;AASC,MAAA,QAAQ,EAAC,MATV;AAUC,MAAA,IAAI,eAAE,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA,cAVP;AAWC,MAAA,OAAO,EAAE,YACR,MAAMI,UAAU,CAAC;AAChBG,QAAAA,SAAS,EAAE;AACVC,UAAAA,OAAO,EAAEC,QAAQ,CAACR,EAAD;AADP,SADK;AAIhBS,QAAAA,MAAM,EAAGC,KAAD,IAAW;AAClB,gBAAMC,IAAI,GAAGD,KAAK,CAACE,YAAN,CAGV;AACFZ,YAAAA,EAAE,EAAE,UAAUA,EADZ;AAEFa,YAAAA,QAAQ,EAAEvB,GAAI;AACtB;AACA;AACA;AACA;AACA;AACA;AARU,WAHU,CAAb;AAcA,cAAIwB,UAAJ;AACA,cAAIC,aAAqB,GAAGJ,IAAI,CAAEV,UAAlC;;AAEA,cAAIU,IAAI,IAAIA,IAAI,CAACZ,OAAjB,EAA0B;AACzBe,YAAAA,UAAU,GAAG,KAAb;AACAC,YAAAA,aAAa,GAAGA,aAAa,GAAG,CAAhC;AACA,WAHD,MAGO;AACND,YAAAA,UAAU,GAAG,IAAb;AACAC,YAAAA,aAAa,GAAGA,aAAa,GAAG,CAAhC;AACA;;AACDL,UAAAA,KAAK,CAACM,aAAN,CAAoB;AACnBhB,YAAAA,EAAE,EAAE,UAAUA,EADK;AAEnBa,YAAAA,QAAQ,EAAEvB,GAAI;AACtB;AACA;AACA;AACA;AACA;AACA,SAR2B;AASnBqB,YAAAA,IAAI,EAAE;AAAEZ,cAAAA,OAAO,EAAEe,UAAX;AAAuBb,cAAAA,UAAU,EAAEc;AAAnC;AATa,WAApB;AAWA;AAxCe,OAAD;AAZlB;AAAA;AAAA;AAAA;AAAA,YADD,EAyDE,CAACb,YAAD,iBACA,QAAC,IAAD;AAAM,MAAA,QAAQ,EAAC,MAAf;AAAsB,MAAA,UAAU,EAAC,QAAjC;AAA0C,MAAA,KAAK,EAAC,UAAhD;AAAA,gBACED;AADF;AAAA;AAAA;AAAA;AAAA,YA1DF;AAAA;AAAA;AAAA;AAAA;AAAA,UADD;AAiEA,CAvEM","sourcesContent":["import { gql } from '@apollo/client';\r\nimport { Center, IconButton, Text } from '@chakra-ui/react';\r\nimport React from 'react';\r\nimport { IoIosHeart } from 'react-icons/io';\r\nimport { useToggleLikeMutation } from '../generated/graphql';\r\n\r\ninterface LikeButtonProps {\r\n\tquiz: {\r\n\t\tisLiked?: boolean;\r\n\t\tid: string;\r\n\t\tlikesCount: number;\r\n\t\tquestionsCount?: number;\r\n\t} & any;\r\n\twithoutCount?: boolean;\r\n}\r\n\r\nexport const LikeButton: React.FC<LikeButtonProps> = ({\r\n\tquiz: { isLiked, id, likesCount },\r\n\twithoutCount,\r\n}) => {\r\n\tconst [toggleLike] = useToggleLikeMutation();\r\n\r\n\treturn (\r\n\t\t<Center>\r\n\t\t\t<IconButton\r\n\t\t\t\tvariant='outline'\r\n\t\t\t\tcolorScheme='gray'\r\n\t\t\t\taria-label='Like post'\r\n\t\t\t\tisRound\r\n\t\t\t\tcolor={isLiked ? 'red.400' : 'gray.400'}\r\n\t\t\t\t_focus={{ outline: 'none' }}\r\n\t\t\t\tborder='none'\r\n\t\t\t\t_hover={{ color: isLiked ? 'red.500' : 'gray.500' }}\r\n\t\t\t\tfontSize='24px'\r\n\t\t\t\ticon={<IoIosHeart />}\r\n\t\t\t\tonClick={async () =>\r\n\t\t\t\t\tawait toggleLike({\r\n\t\t\t\t\t\tvariables: {\r\n\t\t\t\t\t\t\tquiz_id: parseInt(id),\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\tupdate: (cache) => {\r\n\t\t\t\t\t\t\tconst data = cache.readFragment<{\r\n\t\t\t\t\t\t\t\tlikesCount: number;\r\n\t\t\t\t\t\t\t\tisLiked: boolean;\r\n\t\t\t\t\t\t\t}>({\r\n\t\t\t\t\t\t\t\tid: 'Quiz:' + id,\r\n\t\t\t\t\t\t\t\tfragment: gql`\r\n\t\t\t\t\t\t\t\t\tfragment _ on Quiz {\r\n\t\t\t\t\t\t\t\t\t\tid\r\n\t\t\t\t\t\t\t\t\t\tlikesCount\r\n\t\t\t\t\t\t\t\t\t\tisLiked\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t`,\r\n\t\t\t\t\t\t\t});\r\n\r\n\t\t\t\t\t\t\tlet newIsLiked: boolean;\r\n\t\t\t\t\t\t\tlet newLikesCount: number = data!.likesCount;\r\n\r\n\t\t\t\t\t\t\tif (data && data.isLiked) {\r\n\t\t\t\t\t\t\t\tnewIsLiked = false;\r\n\t\t\t\t\t\t\t\tnewLikesCount = newLikesCount - 1;\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\tnewIsLiked = true;\r\n\t\t\t\t\t\t\t\tnewLikesCount = newLikesCount + 1;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tcache.writeFragment({\r\n\t\t\t\t\t\t\t\tid: 'Quiz:' + id,\r\n\t\t\t\t\t\t\t\tfragment: gql`\r\n\t\t\t\t\t\t\t\t\tfragment _ on Quiz {\r\n\t\t\t\t\t\t\t\t\t\tid\r\n\t\t\t\t\t\t\t\t\t\tlikesCount\r\n\t\t\t\t\t\t\t\t\t\tisLiked\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t`,\r\n\t\t\t\t\t\t\t\tdata: { isLiked: newIsLiked, likesCount: newLikesCount },\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t})\r\n\t\t\t\t}\r\n\t\t\t/>\r\n\t\t\t{!withoutCount && (\r\n\t\t\t\t<Text fontSize='14px' fontWeight='medium' color='gray.400'>\r\n\t\t\t\t\t{likesCount}\r\n\t\t\t\t</Text>\r\n\t\t\t)}\r\n\t\t</Center>\r\n\t);\r\n};\r\n"]},"metadata":{},"sourceType":"module"}