{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\mj\\\\Documents\\\\Codes\\\\PROJECTS\\\\quizshare-typescript\\\\client\\\\src\\\\components\\\\CommentButton.tsx\";\nimport { gql } from '@apollo/client';\nimport { Avatar, Button, Center, FormControl, IconButton, Input, Modal, ModalBody, ModalCloseButton, ModalContent, ModalFooter, ModalHeader, ModalOverlay, Text, useDisclosure } from '@chakra-ui/react';\nimport React, { useRef, useState } from 'react';\nimport { FaComment } from 'react-icons/fa';\nimport TextareaAutosize from 'react-textarea-autosize';\nimport { useCreateCommentMutation, useMeQuery } from '../generated/graphql';\nexport const CommentButton = ({\n  quiz: {\n    id,\n    commentsCount,\n    author: {\n      email\n    }\n  },\n  withoutCount\n}) => {\n  var _data$me, _data$me2;\n\n  const {\n    0: text,\n    1: setText\n  } = useState('');\n  const {\n    data,\n    loading: loadingMe,\n    error\n  } = useMeQuery();\n  const {\n    isOpen,\n    onOpen,\n    onClose\n  } = useDisclosure();\n  const [createComment, {\n    loading\n  }] = useCreateCommentMutation();\n  const initialRef = useRef();\n\n  if (loadingMe) {\n    /*#__PURE__*/\n    _jsxDEV(Text, {\n      children: \"...loading\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 3\n    }, this);\n  }\n\n  if (!data && !loadingMe) {\n    return /*#__PURE__*/_jsxDEV(Text, {\n      children: [\"Error \", error === null || error === void 0 ? void 0 : error.message]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 10\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Modal, {\n      isCentered: true,\n      onClose: onClose,\n      isOpen: isOpen,\n      motionPreset: \"slideInBottom\",\n      initialFocusRef: initialRef,\n      children: [/*#__PURE__*/_jsxDEV(ModalOverlay, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(ModalContent, {\n        children: [/*#__PURE__*/_jsxDEV(ModalHeader, {\n          fontSize: \"17px\",\n          fontWeight: \"500\",\n          children: `Replying to @${email.split('@')[0]}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(ModalCloseButton, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(ModalBody, {\n          display: \"flex\",\n          children: [/*#__PURE__*/_jsxDEV(Avatar, {\n            name: data === null || data === void 0 ? void 0 : (_data$me = data.me) === null || _data$me === void 0 ? void 0 : _data$me.profile.name,\n            src: (data === null || data === void 0 ? void 0 : (_data$me2 = data.me) === null || _data$me2 === void 0 ? void 0 : _data$me2.avatar) || ''\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n            children: /*#__PURE__*/_jsxDEV(Input, {\n              ref: initialRef,\n              type: \"text\",\n              placeholder: \"Comment your reply\",\n              bg: \"none\",\n              variant: \"filled\",\n              resize: \"none\",\n              value: text,\n              onChange: e => setText(e.target.value),\n              _focus: {\n                outline: 'none',\n                bg: 'none'\n              },\n              _hover: {\n                bg: 'none'\n              },\n              fontFamily: \"inter\",\n              overflow: \"hidden\",\n              as: TextareaAutosize\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 8\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 7\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(ModalFooter, {\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"ghost\",\n            onClick: async () => {\n              createComment({\n                variables: {\n                  quiz_id: parseInt(id),\n                  text: text\n                },\n                update: (cache, {\n                  data\n                }) => {\n                  cache.writeFragment({\n                    id: 'Quiz:' + id,\n                    fragment: gql`\n\t\t\t\t\t\t\t\t\t\t\t\tfragment _ on Quiz {\n\t\t\t\t\t\t\t\t\t\t\t\t\tid\n\t\t\t\t\t\t\t\t\t\t\t\t\tcommentsCount\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t`,\n                    data: {\n                      commentsCount: commentsCount + 1\n                    }\n                  });\n                  setText('');\n                  onClose();\n                }\n              });\n            },\n            isLoading: loading,\n            children: \"Reply\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 7\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(Center, {\n      children: [/*#__PURE__*/_jsxDEV(IconButton, {\n        variant: \"outline\",\n        colorScheme: \"gray\",\n        \"aria-label\": \"Like post\",\n        isRound: true,\n        color: \"gray.400\",\n        _focus: {\n          outline: 'none'\n        },\n        border: \"none\",\n        _hover: {\n          color: 'gray.500'\n        },\n        fontSize: \"20px\",\n        icon: /*#__PURE__*/_jsxDEV(FaComment, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 12\n        }, this),\n        onClick: onOpen\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 5\n      }, this), !withoutCount && /*#__PURE__*/_jsxDEV(Text, {\n        fontSize: \"14px\",\n        fontWeight: \"medium\",\n        color: \"gray.400\",\n        children: commentsCount\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 6\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true);\n};","map":{"version":3,"sources":["C:/Users/mj/Documents/Codes/PROJECTS/quizshare-typescript/client/src/components/CommentButton.tsx"],"names":["gql","Avatar","Button","Center","FormControl","IconButton","Input","Modal","ModalBody","ModalCloseButton","ModalContent","ModalFooter","ModalHeader","ModalOverlay","Text","useDisclosure","React","useRef","useState","FaComment","TextareaAutosize","useCreateCommentMutation","useMeQuery","CommentButton","quiz","id","commentsCount","author","email","withoutCount","text","setText","data","loading","loadingMe","error","isOpen","onOpen","onClose","createComment","initialRef","message","split","me","profile","name","avatar","e","target","value","outline","bg","variables","quiz_id","parseInt","update","cache","writeFragment","fragment","color"],"mappings":"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","sourcesContent":["import { gql } from '@apollo/client';\r\nimport {\r\n\tAvatar,\r\n\tButton,\r\n\tCenter,\r\n\tFormControl,\r\n\tIconButton,\r\n\tInput,\r\n\tModal,\r\n\tModalBody,\r\n\tModalCloseButton,\r\n\tModalContent,\r\n\tModalFooter,\r\n\tModalHeader,\r\n\tModalOverlay,\r\n\tText,\r\n\tuseDisclosure,\r\n} from '@chakra-ui/react';\r\nimport React, { RefObject, useRef, useState } from 'react';\r\nimport { FaComment } from 'react-icons/fa';\r\nimport TextareaAutosize from 'react-textarea-autosize';\r\nimport {\r\n\tCommentsDocument,\r\n\tuseCreateCommentMutation,\r\n\tuseMeQuery,\r\n} from '../generated/graphql';\r\nimport { useUserContext } from '../store/context';\r\n\r\ninterface CommentButtonProps {\r\n\tquiz: {\r\n\t\tid: string;\r\n\t\tcommentsCount: number;\r\n\t\tauthor: {\r\n\t\t\temail: string;\r\n\t\t};\r\n\t} & any;\r\n\twithoutCount?: boolean;\r\n}\r\n\r\nexport const CommentButton: React.FC<CommentButtonProps> = ({\r\n\tquiz: {\r\n\t\tid,\r\n\t\tcommentsCount,\r\n\t\tauthor: { email },\r\n\t},\r\n\twithoutCount,\r\n}) => {\r\n\tconst [text, setText] = useState('');\r\n\r\n\tconst { data, loading: loadingMe, error } = useMeQuery();\r\n\r\n\tconst { isOpen, onOpen, onClose } = useDisclosure();\r\n\tconst [createComment, { loading }] = useCreateCommentMutation();\r\n\r\n\tconst initialRef: RefObject<any> = useRef();\r\n\r\n\tif (loadingMe) {\r\n\t\t<Text>...loading</Text>;\r\n\t}\r\n\r\n\tif (!data && !loadingMe) {\r\n\t\treturn <Text>Error {error?.message}</Text>;\r\n\t}\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<Modal\r\n\t\t\t\tisCentered\r\n\t\t\t\tonClose={onClose}\r\n\t\t\t\tisOpen={isOpen}\r\n\t\t\t\tmotionPreset='slideInBottom'\r\n\t\t\t\tinitialFocusRef={initialRef}\r\n\t\t\t>\r\n\t\t\t\t<ModalOverlay />\r\n\t\t\t\t<ModalContent>\r\n\t\t\t\t\t<ModalHeader fontSize='17px' fontWeight='500'>\r\n\t\t\t\t\t\t{`Replying to @${email.split('@')[0]}`}\r\n\t\t\t\t\t</ModalHeader>\r\n\t\t\t\t\t<ModalCloseButton />\r\n\t\t\t\t\t<ModalBody display='flex'>\r\n\t\t\t\t\t\t<Avatar\r\n\t\t\t\t\t\t\tname={data?.me?.profile.name}\r\n\t\t\t\t\t\t\tsrc={data?.me?.avatar || ''}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t<FormControl>\r\n\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\tref={initialRef}\r\n\t\t\t\t\t\t\t\ttype='text'\r\n\t\t\t\t\t\t\t\tplaceholder='Comment your reply'\r\n\t\t\t\t\t\t\t\tbg='none'\r\n\t\t\t\t\t\t\t\tvariant='filled'\r\n\t\t\t\t\t\t\t\tresize='none'\r\n\t\t\t\t\t\t\t\tvalue={text}\r\n\t\t\t\t\t\t\t\tonChange={(e) => setText(e.target.value)}\r\n\t\t\t\t\t\t\t\t_focus={{ outline: 'none', bg: 'none' }}\r\n\t\t\t\t\t\t\t\t_hover={{ bg: 'none' }}\r\n\t\t\t\t\t\t\t\tfontFamily='inter'\r\n\t\t\t\t\t\t\t\toverflow='hidden'\r\n\t\t\t\t\t\t\t\tas={TextareaAutosize}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</FormControl>\r\n\t\t\t\t\t</ModalBody>\r\n\t\t\t\t\t<ModalFooter>\r\n\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\tvariant='ghost'\r\n\t\t\t\t\t\t\tonClick={async () => {\r\n\t\t\t\t\t\t\t\tcreateComment({\r\n\t\t\t\t\t\t\t\t\tvariables: {\r\n\t\t\t\t\t\t\t\t\t\tquiz_id: parseInt(id),\r\n\t\t\t\t\t\t\t\t\t\ttext: text,\r\n\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\tupdate: (cache, { data }) => {\r\n\t\t\t\t\t\t\t\t\t\tcache.writeFragment({\r\n\t\t\t\t\t\t\t\t\t\t\tid: 'Quiz:' + id,\r\n\t\t\t\t\t\t\t\t\t\t\tfragment: gql`\r\n\t\t\t\t\t\t\t\t\t\t\t\tfragment _ on Quiz {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tid\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tcommentsCount\r\n\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t`,\r\n\t\t\t\t\t\t\t\t\t\t\tdata: { commentsCount: commentsCount + 1 },\r\n\t\t\t\t\t\t\t\t\t\t});\r\n\r\n\t\t\t\t\t\t\t\t\t\tsetText('');\r\n\t\t\t\t\t\t\t\t\t\tonClose();\r\n\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\tisLoading={loading}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\tReply\r\n\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t</ModalFooter>\r\n\t\t\t\t</ModalContent>\r\n\t\t\t</Modal>\r\n\t\t\t<Center>\r\n\t\t\t\t<IconButton\r\n\t\t\t\t\tvariant='outline'\r\n\t\t\t\t\tcolorScheme='gray'\r\n\t\t\t\t\taria-label='Like post'\r\n\t\t\t\t\tisRound\r\n\t\t\t\t\tcolor='gray.400'\r\n\t\t\t\t\t_focus={{ outline: 'none' }}\r\n\t\t\t\t\tborder='none'\r\n\t\t\t\t\t_hover={{ color: 'gray.500' }}\r\n\t\t\t\t\tfontSize='20px'\r\n\t\t\t\t\ticon={<FaComment />}\r\n\t\t\t\t\tonClick={onOpen}\r\n\t\t\t\t/>\r\n\t\t\t\t{!withoutCount && (\r\n\t\t\t\t\t<Text fontSize='14px' fontWeight='medium' color='gray.400'>\r\n\t\t\t\t\t\t{commentsCount}\r\n\t\t\t\t\t</Text>\r\n\t\t\t\t)}\r\n\t\t\t</Center>\r\n\t\t</>\r\n\t);\r\n};\r\n"]},"metadata":{},"sourceType":"module"}