{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\mj\\\\Documents\\\\Codes\\\\PROJECTS\\\\quizshare-typescript\\\\client\\\\src\\\\pages\\\\dashboard\\\\published.tsx\";\nimport { Button, useColorModeValue } from '@chakra-ui/react';\nimport React from 'react';\nimport { QuizBox } from '../../components/QuizBox';\nimport { QuizBoxLoading } from '../../components/QuizBoxLoading';\nimport { useMeQuizzesQuery } from '../../generated/graphql';\nimport { DashboardContainer } from '../../layouts/DashboardContainer';\nimport { MainContainer } from '../../layouts/MainContainer';\nimport { withApollo } from '../../utils/withApollo';\n\nconst Published = () => {\n  const buttonColorScheme = useColorModeValue('purple', 'gray');\n  const {\n    data,\n    loading,\n    fetchMore,\n    variables,\n    error\n  } = useMeQuizzesQuery({\n    variables: {\n      limit: 4,\n      cursor: null\n    },\n    notifyOnNetworkStatusChange: true\n  });\n\n  if (!data && loading) {\n    return /*#__PURE__*/_jsxDEV(MainContainer, {\n      display: \"grid\",\n      justifyItems: \"center\",\n      children: /*#__PURE__*/_jsxDEV(DashboardContainer, {\n        display: \"grid\",\n        justifyItems: \"center\",\n        w: \"full\",\n        children: [/*#__PURE__*/_jsxDEV(QuizBoxLoading, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(QuizBoxLoading, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(QuizBoxLoading, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 4\n    }, this);\n  }\n\n  if (!loading && !data) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"you got query failed for some reason\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: error === null || error === void 0 ? void 0 : error.message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 4\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(MainContainer, {\n    children: /*#__PURE__*/_jsxDEV(DashboardContainer, {\n      display: \"grid\",\n      justifyItems: \"center\",\n      children: [data === null || data === void 0 ? void 0 : data.meQuizzes.meQuizzes.map(quiz => {\n        return /*#__PURE__*/_jsxDEV(QuizBox, {\n          quiz: quiz\n        }, quiz.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 13\n        }, this);\n      }), loading && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(QuizBoxLoading, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(QuizBoxLoading, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true), data && data.meQuizzes.meHasMore && /*#__PURE__*/_jsxDEV(Button, {\n        size: \"sm\",\n        colorScheme: buttonColorScheme,\n        variant: \"ghost\",\n        fontSize: 16,\n        my: \"20px\",\n        onClick: () => fetchMore({\n          variables: {\n            limit: variables === null || variables === void 0 ? void 0 : variables.limit,\n            cursor: data.meQuizzes.meQuizzes[data.meQuizzes.meQuizzes.length - 1].created_at\n          }\n        }),\n        isLoading: loading,\n        children: \"Load more\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 6\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 4\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 3\n  }, this);\n};\n\nexport default withApollo({\n  ssr: true\n})(Published);","map":{"version":3,"sources":["C:/Users/mj/Documents/Codes/PROJECTS/quizshare-typescript/client/src/pages/dashboard/published.tsx"],"names":["Button","useColorModeValue","React","QuizBox","QuizBoxLoading","useMeQuizzesQuery","DashboardContainer","MainContainer","withApollo","Published","buttonColorScheme","data","loading","fetchMore","variables","error","limit","cursor","notifyOnNetworkStatusChange","message","meQuizzes","map","quiz","id","meHasMore","length","created_at","ssr"],"mappings":"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","sourcesContent":["import { Button, useColorModeValue } from '@chakra-ui/react';\r\nimport React from 'react';\r\nimport { QuizBox } from '../../components/QuizBox';\r\nimport { QuizBoxLoading } from '../../components/QuizBoxLoading';\r\nimport { useMeQuizzesQuery } from '../../generated/graphql';\r\nimport { DashboardContainer } from '../../layouts/DashboardContainer';\r\nimport { MainContainer } from '../../layouts/MainContainer';\r\nimport { withApollo } from '../../utils/withApollo';\r\n\r\nconst Published: React.FC = () => {\r\n\tconst buttonColorScheme = useColorModeValue('purple', 'gray');\r\n\r\n\tconst { data, loading, fetchMore, variables, error } = useMeQuizzesQuery({\r\n\t\tvariables: {\r\n\t\t\tlimit: 4,\r\n\t\t\tcursor: null,\r\n\t\t},\r\n\t\tnotifyOnNetworkStatusChange: true,\r\n\t});\r\n\r\n\tif (!data && loading) {\r\n\t\treturn (\r\n\t\t\t<MainContainer display='grid' justifyItems='center'>\r\n\t\t\t\t<DashboardContainer display='grid' justifyItems='center' w='full'>\r\n\t\t\t\t\t<QuizBoxLoading />\r\n\t\t\t\t\t<QuizBoxLoading />\r\n\t\t\t\t\t<QuizBoxLoading />\r\n\t\t\t\t</DashboardContainer>\r\n\t\t\t</MainContainer>\r\n\t\t);\r\n\t}\r\n\r\n\tif (!loading && !data) {\r\n\t\treturn (\r\n\t\t\t<div>\r\n\t\t\t\t<div>you got query failed for some reason</div>\r\n\t\t\t\t<div>{error?.message}</div>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n\r\n\treturn (\r\n\t\t<MainContainer>\r\n\t\t\t<DashboardContainer display='grid' justifyItems='center'>\r\n\t\t\t\t{data?.meQuizzes.meQuizzes.map((quiz) => {\r\n\t\t\t\t\treturn <QuizBox key={quiz.id} quiz={quiz} />;\r\n\t\t\t\t})}\r\n\t\t\t\t{loading && (\r\n\t\t\t\t\t<>\r\n\t\t\t\t\t\t<QuizBoxLoading />\r\n\t\t\t\t\t\t<QuizBoxLoading />\r\n\t\t\t\t\t</>\r\n\t\t\t\t)}\r\n\t\t\t\t{data && data.meQuizzes.meHasMore && (\r\n\t\t\t\t\t<Button\r\n\t\t\t\t\t\tsize='sm'\r\n\t\t\t\t\t\tcolorScheme={buttonColorScheme}\r\n\t\t\t\t\t\tvariant='ghost'\r\n\t\t\t\t\t\tfontSize={16}\r\n\t\t\t\t\t\tmy='20px'\r\n\t\t\t\t\t\tonClick={() =>\r\n\t\t\t\t\t\t\tfetchMore({\r\n\t\t\t\t\t\t\t\tvariables: {\r\n\t\t\t\t\t\t\t\t\tlimit: variables?.limit,\r\n\t\t\t\t\t\t\t\t\tcursor:\r\n\t\t\t\t\t\t\t\t\t\tdata.meQuizzes.meQuizzes[\r\n\t\t\t\t\t\t\t\t\t\t\tdata.meQuizzes.meQuizzes.length - 1\r\n\t\t\t\t\t\t\t\t\t\t].created_at,\r\n\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tisLoading={loading}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\tLoad more\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t)}\r\n\t\t\t</DashboardContainer>\r\n\t\t</MainContainer>\r\n\t);\r\n};\r\n\r\nexport default withApollo({ ssr: true })(Published);\r\n"]},"metadata":{},"sourceType":"module"}