{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\mj\\\\Documents\\\\Codes\\\\PROJECTS\\\\quizshare-typescript\\\\client\\\\src\\\\components\\\\create-update-quiz\\\\ChoiceArray.tsx\";\nimport { AspectRatio, Box, Button, Flex, IconButton, Radio, RadioGroup, SimpleGrid, Skeleton, Spacer, Tooltip } from '@chakra-ui/react';\nimport Image from 'next/image';\nimport { useRouter } from 'next/dist/client/router';\nimport React, { useEffect, useState } from 'react';\nimport { Controller, useFieldArray, useFormContext } from 'react-hook-form';\nimport { BsPlusSquare } from 'react-icons/bs';\nimport { MdDelete, MdPhotoSizeSelectActual } from 'react-icons/md';\nimport TextareaAutosize from 'react-textarea-autosize';\nimport { v4 as uuid } from 'uuid';\nimport { uploadCloudinaryImage } from '../../utils/uploadImage';\nimport QuizInputUI from '../custom-inputs/QuizInputUI';\n\nconst ChoiceArray = ({\n  questionIndex,\n  answer,\n  autoAddChoiceInput\n}) => {\n  const router = useRouter();\n  const {\n    0: images,\n    1: setImages\n  } = useState([]);\n  const {\n    control,\n    register,\n    errors\n  } = useFormContext();\n  const {\n    fields,\n    append,\n    remove\n  } = useFieldArray({\n    control,\n    name: `questions[${questionIndex}].choices`\n  });\n\n  const uploadImage = choice_id => {\n    uploadCloudinaryImage((error, photos) => {\n      const imagesThatAreNotChanged = images.filter(img => img.choice_id !== choice_id);\n\n      if (!error && photos.event === 'queues-start') {\n        setImages([...imagesThatAreNotChanged, {\n          choice_id: choice_id,\n          url: 'loading'\n        }]);\n      } else if (!error && photos.event === 'success') {\n        setImages([...imagesThatAreNotChanged, {\n          choice_id: choice_id,\n          url: photos.info.url\n        }]);\n      } else if (error) {\n        console.error(error);\n      }\n    });\n  };\n\n  const addChoice = (shouldFocus = true) => {\n    append({\n      choice_id: uuid(),\n      value: '',\n      choicePhoto: ''\n    }, shouldFocus);\n  };\n\n  useEffect(() => {\n    if (router.pathname.includes('edit') && !autoAddChoiceInput) return;\n    addChoice(false);\n    addChoice(false);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Box, {\n    children: [/*#__PURE__*/_jsxDEV(Flex, {\n      children: [/*#__PURE__*/_jsxDEV(Spacer, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        leftIcon: /*#__PURE__*/_jsxDEV(BsPlusSquare, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 16\n        }, this),\n        colorScheme: \"purple\",\n        variant: \"ghost\",\n        size: \"xs\",\n        onClick: () => addChoice(),\n        children: \"Add Choice\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(Controller, {\n      control: control,\n      name: `questions[${questionIndex}].answer`,\n      rules: {\n        required: true\n      },\n      defaultValue: answer,\n      render: ({\n        onChange,\n        onBlur,\n        value\n      }) => /*#__PURE__*/_jsxDEV(RadioGroup, {\n        onChange: onChange,\n        onBlur: onBlur,\n        value: value,\n        defaultValue: answer,\n        children: /*#__PURE__*/_jsxDEV(SimpleGrid, {\n          my: \"10px\",\n          p: \"2px\",\n          columns: [1, 2],\n          spacing: \"10px\",\n          children: fields.map((choice, i) => {\n            var _images$img, _errors$questions, _errors$questions$que, _errors$questions$que2, _errors$questions$que3, _errors$questions2, _errors$questions2$qu;\n\n            const img = images.findIndex(i => i.choice_id === choice.choice_id);\n            const url = ((_images$img = images[img]) === null || _images$img === void 0 ? void 0 : _images$img.url) || choice.choicePhoto;\n            return /*#__PURE__*/_jsxDEV(Box, {\n              children: /*#__PURE__*/_jsxDEV(Box, {\n                borderRadius: \"md\",\n                pos: \"relative\",\n                overflow: \"hidden\",\n                borderWidth: \"1px\",\n                p: \"4px\",\n                children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"hidden\",\n                  name: `questions[${questionIndex}].choices[${i}].choice_id`,\n                  defaultValue: choice.choice_id,\n                  ref: register()\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 131,\n                  columnNumber: 12\n                }, this), img !== -1 && /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"hidden\",\n                  name: `questions[${questionIndex}].choices[${i}].choicePhoto`,\n                  value: url,\n                  ref: register()\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 138,\n                  columnNumber: 13\n                }, this), url && /*#__PURE__*/_jsxDEV(Box, {\n                  p: \"4px\",\n                  mb: \"2px\",\n                  children: /*#__PURE__*/_jsxDEV(Skeleton, {\n                    isLoaded: url !== 'loading',\n                    children: /*#__PURE__*/_jsxDEV(Box, {\n                      borderRadius: \"8px\",\n                      overflow: \"hidden\",\n                      bg: \"gray.100\",\n                      children: /*#__PURE__*/_jsxDEV(AspectRatio, {\n                        maxW: \"full\",\n                        ratio: 16 / 9,\n                        children: url !== 'loading' ? /*#__PURE__*/_jsxDEV(Image, {\n                          src: url,\n                          alt: `Choice ${i} photo`,\n                          layout: \"fill\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 155,\n                          columnNumber: 18\n                        }, this) : /*#__PURE__*/_jsxDEV(Box, {}, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 161,\n                          columnNumber: 18\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 153,\n                        columnNumber: 16\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 148,\n                      columnNumber: 15\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 147,\n                    columnNumber: 14\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 146,\n                  columnNumber: 13\n                }, this), /*#__PURE__*/_jsxDEV(QuizInputUI, {\n                  register: register({\n                    required: true\n                  }),\n                  input: `questions[${questionIndex}].choices[${i}].value`,\n                  as: TextareaAutosize,\n                  placeholder: \"Type your answer here...\",\n                  resize: \"none\",\n                  overflow: \"hidden\",\n                  defaultValue: choice.value,\n                  py: \"7px\",\n                  error: (_errors$questions = errors.questions) === null || _errors$questions === void 0 ? void 0 : (_errors$questions$que = _errors$questions[questionIndex]) === null || _errors$questions$que === void 0 ? void 0 : (_errors$questions$que2 = _errors$questions$que.choices) === null || _errors$questions$que2 === void 0 ? void 0 : (_errors$questions$que3 = _errors$questions$que2[i]) === null || _errors$questions$que3 === void 0 ? void 0 : _errors$questions$que3.value,\n                  errorMessage: `Choice ${i + 1} is required field: type or remove it.ðŸ˜‰`,\n                  isChoiceInput: true\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 168,\n                  columnNumber: 12\n                }, this), /*#__PURE__*/_jsxDEV(Flex, {\n                  pos: \"absolute\",\n                  bottom: \"2px\",\n                  left: \"4px\",\n                  right: \"2px\",\n                  children: [/*#__PURE__*/_jsxDEV(Radio, {\n                    value: choice.choice_id,\n                    colorScheme: \"green\",\n                    isInvalid: !!((_errors$questions2 = errors.questions) === null || _errors$questions2 === void 0 ? void 0 : (_errors$questions2$qu = _errors$questions2[questionIndex]) === null || _errors$questions2$qu === void 0 ? void 0 : _errors$questions2$qu.answer),\n                    children: \"correct answer\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 186,\n                    columnNumber: 13\n                  }, this), /*#__PURE__*/_jsxDEV(Spacer, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 195,\n                    columnNumber: 13\n                  }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n                    hasArrow: true,\n                    label: (choice === null || choice === void 0 ? void 0 : choice.choicePhoto) ? 'Replace choice photo' : 'Add choice photo',\n                    children: /*#__PURE__*/_jsxDEV(IconButton, {\n                      isRound: true,\n                      icon: /*#__PURE__*/_jsxDEV(MdPhotoSizeSelectActual, {}, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 206,\n                        columnNumber: 21\n                      }, this),\n                      size: \"xs\",\n                      variant: \"ghost\",\n                      color: \"gray.400\",\n                      fontSize: \"13px\",\n                      onClick: () => uploadImage(choice.choice_id),\n                      \"aria-label\": \"upload choice_photo button\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 204,\n                      columnNumber: 14\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 196,\n                    columnNumber: 13\n                  }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n                    hasArrow: true,\n                    label: \"Remove choice\",\n                    children: /*#__PURE__*/_jsxDEV(IconButton, {\n                      isRound: true,\n                      icon: /*#__PURE__*/_jsxDEV(MdDelete, {}, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 218,\n                        columnNumber: 21\n                      }, this),\n                      size: \"xs\",\n                      variant: \"ghost\",\n                      color: \"gray.400\",\n                      fontSize: \"13px\",\n                      onClick: () => remove(i),\n                      isDisabled: fields.length === 1 ? true : false,\n                      \"aria-label\": \"remove choice\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 216,\n                      columnNumber: 14\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 215,\n                    columnNumber: 13\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 185,\n                  columnNumber: 12\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 124,\n                columnNumber: 11\n              }, this)\n            }, choice.choice_id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 123,\n              columnNumber: 10\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 7\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 6\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 90,\n    columnNumber: 3\n  }, this);\n};\n\nexport default ChoiceArray;","map":{"version":3,"sources":["C:/Users/mj/Documents/Codes/PROJECTS/quizshare-typescript/client/src/components/create-update-quiz/ChoiceArray.tsx"],"names":["AspectRatio","Box","Button","Flex","IconButton","Radio","RadioGroup","SimpleGrid","Skeleton","Spacer","Tooltip","Image","useRouter","React","useEffect","useState","Controller","useFieldArray","useFormContext","BsPlusSquare","MdDelete","MdPhotoSizeSelectActual","TextareaAutosize","v4","uuid","uploadCloudinaryImage","QuizInputUI","ChoiceArray","questionIndex","answer","autoAddChoiceInput","router","images","setImages","control","register","errors","fields","append","remove","name","uploadImage","choice_id","error","photos","imagesThatAreNotChanged","filter","img","event","url","info","console","addChoice","shouldFocus","value","choicePhoto","pathname","includes","required","onChange","onBlur","map","choice","i","findIndex","questions","choices","length"],"mappings":"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","sourcesContent":["import {\r\n\tAspectRatio,\r\n\tBox,\r\n\tButton,\r\n\tFlex,\r\n\tIconButton,\r\n\tRadio,\r\n\tRadioGroup,\r\n\tSimpleGrid,\r\n\tSkeleton,\r\n\tSpacer,\r\n\tTooltip,\r\n} from '@chakra-ui/react';\r\nimport Image from 'next/image';\r\nimport { useRouter } from 'next/dist/client/router';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { Controller, useFieldArray, useFormContext } from 'react-hook-form';\r\nimport { BsPlusSquare } from 'react-icons/bs';\r\nimport { MdDelete, MdPhotoSizeSelectActual } from 'react-icons/md';\r\nimport TextareaAutosize from 'react-textarea-autosize';\r\nimport { v4 as uuid } from 'uuid';\r\nimport { ChoiceInput, QuizInput } from '../../generated/graphql';\r\nimport { uploadCloudinaryImage } from '../../utils/uploadImage';\r\nimport QuizInputUI from '../custom-inputs/QuizInputUI';\r\n\r\ndeclare global {\r\n\tinterface Window {\r\n\t\tcloudinary: any;\r\n\t}\r\n}\r\ninterface ChoiceArrayProps {\r\n\tquestionIndex: number;\r\n\tanswer: string;\r\n\tautoAddChoiceInput?: boolean;\r\n}\r\n\r\nconst ChoiceArray: React.FC<ChoiceArrayProps> = ({\r\n\tquestionIndex,\r\n\tanswer,\r\n\tautoAddChoiceInput,\r\n}) => {\r\n\tconst router = useRouter();\r\n\tconst [images, setImages] = useState<\r\n\t\t{ choice_id: string; url: string | 'loading' }[]\r\n\t>([]);\r\n\r\n\tconst { control, register, errors } = useFormContext<QuizInput>();\r\n\tconst { fields, append, remove } = useFieldArray<ChoiceInput>({\r\n\t\tcontrol,\r\n\t\tname: `questions[${questionIndex}].choices`,\r\n\t});\r\n\r\n\tconst uploadImage = (choice_id: string) => {\r\n\t\tuploadCloudinaryImage(\r\n\t\t\t(error: any, photos: { event: string; info: { url: any } }) => {\r\n\t\t\t\tconst imagesThatAreNotChanged = images.filter(\r\n\t\t\t\t\t(img) => img.choice_id !== choice_id\r\n\t\t\t\t);\r\n\t\t\t\tif (!error && photos.event === 'queues-start') {\r\n\t\t\t\t\tsetImages([\r\n\t\t\t\t\t\t...imagesThatAreNotChanged,\r\n\t\t\t\t\t\t{ choice_id: choice_id, url: 'loading' },\r\n\t\t\t\t\t]);\r\n\t\t\t\t} else if (!error && photos.event === 'success') {\r\n\t\t\t\t\tsetImages([\r\n\t\t\t\t\t\t...imagesThatAreNotChanged,\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tchoice_id: choice_id,\r\n\t\t\t\t\t\t\turl: photos.info.url,\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t]);\r\n\t\t\t\t} else if (error) {\r\n\t\t\t\t\tconsole.error(error);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t);\r\n\t};\r\n\r\n\tconst addChoice = (shouldFocus: boolean = true) => {\r\n\t\tappend({ choice_id: uuid(), value: '', choicePhoto: '' }, shouldFocus);\r\n\t};\r\n\r\n\tuseEffect(() => {\r\n\t\tif (router.pathname.includes('edit') && !autoAddChoiceInput) return;\r\n\t\taddChoice(false);\r\n\t\taddChoice(false);\r\n\t}, []);\r\n\r\n\treturn (\r\n\t\t<Box>\r\n\t\t\t<Flex>\r\n\t\t\t\t<Spacer />\r\n\t\t\t\t<Button\r\n\t\t\t\t\tleftIcon={<BsPlusSquare />}\r\n\t\t\t\t\tcolorScheme='purple'\r\n\t\t\t\t\tvariant='ghost'\r\n\t\t\t\t\tsize='xs'\r\n\t\t\t\t\tonClick={() => addChoice()}\r\n\t\t\t\t>\r\n\t\t\t\t\tAdd Choice\r\n\t\t\t\t</Button>\r\n\t\t\t</Flex>\r\n\t\t\t<Controller\r\n\t\t\t\tcontrol={control}\r\n\t\t\t\tname={`questions[${questionIndex}].answer`}\r\n\t\t\t\trules={{ required: true }}\r\n\t\t\t\tdefaultValue={answer}\r\n\t\t\t\trender={({ onChange, onBlur, value }) => (\r\n\t\t\t\t\t<RadioGroup\r\n\t\t\t\t\t\tonChange={onChange}\r\n\t\t\t\t\t\tonBlur={onBlur}\r\n\t\t\t\t\t\tvalue={value}\r\n\t\t\t\t\t\tdefaultValue={answer}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<SimpleGrid my='10px' p='2px' columns={[1, 2]} spacing='10px'>\r\n\t\t\t\t\t\t\t{fields.map((choice, i) => {\r\n\t\t\t\t\t\t\t\tconst img = images.findIndex(\r\n\t\t\t\t\t\t\t\t\t(i) => i.choice_id === choice.choice_id\r\n\t\t\t\t\t\t\t\t);\r\n\r\n\t\t\t\t\t\t\t\tconst url = images[img]?.url || choice.choicePhoto!;\r\n\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t<Box key={choice.choice_id}>\r\n\t\t\t\t\t\t\t\t\t\t<Box\r\n\t\t\t\t\t\t\t\t\t\t\tborderRadius='md'\r\n\t\t\t\t\t\t\t\t\t\t\tpos='relative'\r\n\t\t\t\t\t\t\t\t\t\t\toverflow='hidden'\r\n\t\t\t\t\t\t\t\t\t\t\tborderWidth='1px'\r\n\t\t\t\t\t\t\t\t\t\t\tp='4px'\r\n\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\t\t\t\t\t\ttype='hidden'\r\n\t\t\t\t\t\t\t\t\t\t\t\tname={`questions[${questionIndex}].choices[${i}].choice_id`}\r\n\t\t\t\t\t\t\t\t\t\t\t\tdefaultValue={choice.choice_id}\r\n\t\t\t\t\t\t\t\t\t\t\t\tref={register()}\r\n\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t{img !== -1 && (\r\n\t\t\t\t\t\t\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\t\t\t\t\t\t\ttype='hidden'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tname={`questions[${questionIndex}].choices[${i}].choicePhoto`}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={url}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tref={register()}\r\n\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t\t\t\t{url && (\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Box p='4px' mb='2px'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Skeleton isLoaded={url !== 'loading'}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Box\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tborderRadius='8px'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\toverflow='hidden'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tbg='gray.100'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<AspectRatio maxW='full' ratio={16 / 9}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{url !== 'loading' ? (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Image\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsrc={url}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\talt={`Choice ${i} photo`}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tlayout='fill'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Box></Box>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</AspectRatio>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</Skeleton>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t\t\t\t<QuizInputUI\r\n\t\t\t\t\t\t\t\t\t\t\t\tregister={register({ required: true })}\r\n\t\t\t\t\t\t\t\t\t\t\t\tinput={`questions[${questionIndex}].choices[${i}].value`}\r\n\t\t\t\t\t\t\t\t\t\t\t\tas={TextareaAutosize}\r\n\t\t\t\t\t\t\t\t\t\t\t\tplaceholder='Type your answer here...'\r\n\t\t\t\t\t\t\t\t\t\t\t\tresize='none'\r\n\t\t\t\t\t\t\t\t\t\t\t\toverflow='hidden'\r\n\t\t\t\t\t\t\t\t\t\t\t\tdefaultValue={choice.value}\r\n\t\t\t\t\t\t\t\t\t\t\t\tpy='7px'\r\n\t\t\t\t\t\t\t\t\t\t\t\terror={\r\n\t\t\t\t\t\t\t\t\t\t\t\t\terrors.questions?.[questionIndex]?.choices?.[i]?.value\r\n\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\terrorMessage={`Choice ${\r\n\t\t\t\t\t\t\t\t\t\t\t\t\ti + 1\r\n\t\t\t\t\t\t\t\t\t\t\t\t} is required field: type or remove it.ðŸ˜‰`}\r\n\t\t\t\t\t\t\t\t\t\t\t\tisChoiceInput\r\n\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t<Flex pos='absolute' bottom='2px' left='4px' right='2px'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Radio\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={choice.choice_id}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tcolorScheme='green'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tisInvalid={\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t!!errors.questions?.[questionIndex]?.answer\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tcorrect answer\r\n\t\t\t\t\t\t\t\t\t\t\t\t</Radio>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Spacer />\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Tooltip\r\n\t\t\t\t\t\t\t\t\t\t\t\t\thasArrow\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tlabel={\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tchoice?.choicePhoto\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t? 'Replace choice photo'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t: 'Add choice photo'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<IconButton\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tisRound\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\ticon={<MdPhotoSizeSelectActual />}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tsize='xs'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tvariant='ghost'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tcolor='gray.400'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tfontSize='13px'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={() => uploadImage(choice.choice_id!)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\taria-label='upload choice_photo button'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</Tooltip>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Tooltip hasArrow label='Remove choice'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<IconButton\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tisRound\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\ticon={<MdDelete />}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tsize='xs'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tvariant='ghost'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tcolor='gray.400'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tfontSize='13px'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={() => remove(i)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tisDisabled={fields.length === 1 ? true : false}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\taria-label='remove choice'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</Tooltip>\r\n\t\t\t\t\t\t\t\t\t\t\t</Flex>\r\n\t\t\t\t\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t</SimpleGrid>\r\n\t\t\t\t\t</RadioGroup>\r\n\t\t\t\t)}\r\n\t\t\t/>\r\n\t\t</Box>\r\n\t);\r\n};\r\nexport default ChoiceArray;\r\n"]},"metadata":{},"sourceType":"module"}