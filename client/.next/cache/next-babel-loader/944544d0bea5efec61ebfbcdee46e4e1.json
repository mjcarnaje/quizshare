{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\mj\\\\Documents\\\\Codes\\\\PROJECTS\\\\quizshare-typescript\\\\client\\\\src\\\\components\\\\dasboard\\\\AccountInformationEdit.tsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { AspectRatio, Avatar, Box, Button, Center, Divider, Flex, GridItem, Skeleton, Text, useColorModeValue, VStack } from '@chakra-ui/react';\nimport Image from 'next/image';\nimport React, { useEffect, useState } from 'react';\nimport { useForm } from 'react-hook-form';\nimport { FiEdit } from 'react-icons/fi';\nimport { MdPhotoSizeSelectActual } from 'react-icons/md';\nimport { MeDocument, useUpdateAccountMutation } from '../../generated/graphql';\nimport errorMapper from '../../utils/errorMapper';\nimport { uploadCloudinaryImage } from '../../utils/uploadImage';\nimport MainInputUI from '../custom-inputs/MainInputUI';\nexport var AccountInformationEdit = function AccountInformationEdit(_ref) {\n  _s();\n\n  var _ref$accInfoProps = _ref.accInfoProps,\n      email = _ref$accInfoProps.email,\n      avatar = _ref$accInfoProps.avatar,\n      username = _ref$accInfoProps.username,\n      cover_photo = _ref$accInfoProps.cover_photo,\n      name = _ref$accInfoProps.profile.name,\n      setEditMode = _ref.setEditMode;\n  var coverPhotoBg = useColorModeValue('gray.50', 'rgba(255, 255, 255, 0.04)');\n\n  var _useState = useState(),\n      coverPhoto = _useState[0],\n      setCoverPhoto = _useState[1];\n\n  var _useState2 = useState(),\n      profilePhoto = _useState2[0],\n      setProfilePhoto = _useState2[1];\n\n  var _useUpdateAccountMuta = useUpdateAccountMutation(),\n      _useUpdateAccountMuta2 = _slicedToArray(_useUpdateAccountMuta, 2),\n      updateAccount = _useUpdateAccountMuta2[0],\n      loading = _useUpdateAccountMuta2[1].loading;\n\n  var _useForm = useForm(),\n      register = _useForm.register,\n      handleSubmit = _useForm.handleSubmit,\n      errors = _useForm.errors,\n      setError = _useForm.setError;\n\n  var onSumbit = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(values) {\n      var _yield$updateAccount, data;\n\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              _context.next = 3;\n              return updateAccount({\n                variables: {\n                  data: _objectSpread(_objectSpread({}, values), {}, {\n                    username: values.username === username ? null : values.username,\n                    email: values.email === email ? null : values.email,\n                    cover_photo: coverPhoto !== null && coverPhoto !== void 0 ? coverPhoto : null,\n                    avatar: profilePhoto !== null && profilePhoto !== void 0 ? profilePhoto : null\n                  })\n                },\n                update: function update(cache, _ref3) {\n                  var data = _ref3.data;\n                  cache.writeQuery({\n                    query: MeDocument,\n                    data: {\n                      __typename: 'Query',\n                      me: data === null || data === void 0 ? void 0 : data.updateAccount\n                    }\n                  });\n                }\n              });\n\n            case 3:\n              _yield$updateAccount = _context.sent;\n              data = _yield$updateAccount.data;\n\n              if (data === null || data === void 0 ? void 0 : data.updateAccount) {\n                setEditMode(false);\n              }\n\n              _context.next = 11;\n              break;\n\n            case 8:\n              _context.prev = 8;\n              _context.t0 = _context[\"catch\"](0);\n              errorMapper(_context.t0, setError);\n\n            case 11:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[0, 8]]);\n    }));\n\n    return function onSumbit(_x) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  var uploadCoverPhoto = function uploadCoverPhoto() {\n    uploadCloudinaryImage(function (error, photos) {\n      if (!error && photos.event === 'queues-start') {\n        setCoverPhoto('loading');\n      } else if (!error && photos.event === 'success') {\n        setCoverPhoto(photos.info.url);\n      } else if (error) {\n        console.error(error);\n      }\n    }, 16 / 5);\n  };\n\n  var uploadProfilePhoto = function uploadProfilePhoto() {\n    uploadCloudinaryImage(function (error, photos) {\n      if (!error && photos.event === 'queues-start') {\n        setProfilePhoto('loading');\n      } else if (!error && photos.event === 'success') {\n        setProfilePhoto(photos.info.url);\n      } else if (error) {\n        console.error(error);\n      }\n    }, 1);\n  };\n\n  useEffect(function () {\n    cover_photo && setCoverPhoto(cover_photo);\n    avatar && setProfilePhoto(avatar);\n  }, [cover_photo, avatar]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(GridItem, {\n      colSpan: 10,\n      display: \"flex\",\n      justifyContent: \"space-between\",\n      alignItems: \"center\",\n      py: \"8px\",\n      px: \"6px\",\n      children: [/*#__PURE__*/_jsxDEV(Text, {\n        px: \"16px\",\n        children: \"Account Information\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 5\n      }, _this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: function onClick() {\n          return setEditMode(false);\n        },\n        rightIcon: /*#__PURE__*/_jsxDEV(FiEdit, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 17\n        }, _this),\n        colorScheme: \"purple\",\n        variant: \"ghost\",\n        children: \"Cancel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 5\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 4\n    }, _this), /*#__PURE__*/_jsxDEV(GridItem, {\n      colSpan: 10,\n      children: /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 5\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 4\n    }, _this), /*#__PURE__*/_jsxDEV(GridItem, {\n      colSpan: 10,\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit(onSumbit),\n        children: [/*#__PURE__*/_jsxDEV(Box, {\n          p: \"5px\",\n          textAlign: \"center\",\n          children: [/*#__PURE__*/_jsxDEV(Skeleton, {\n            isLoaded: coverPhoto !== 'loading',\n            children: /*#__PURE__*/_jsxDEV(Box, {\n              bg: \"gray.100\",\n              children: /*#__PURE__*/_jsxDEV(AspectRatio, {\n                maxW: \"full\",\n                ratio: 16 / 5,\n                children: coverPhoto && coverPhoto !== 'loading' ? /*#__PURE__*/_jsxDEV(Image, {\n                  src: coverPhoto,\n                  alt: \"Cover Photo\",\n                  layout: \"fill\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 158,\n                  columnNumber: 11\n                }, _this) : /*#__PURE__*/_jsxDEV(Center, {\n                  bg: coverPhotoBg,\n                  children: /*#__PURE__*/_jsxDEV(Button, {\n                    onClick: uploadCoverPhoto,\n                    leftIcon: /*#__PURE__*/_jsxDEV(MdPhotoSizeSelectActual, {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 163,\n                      columnNumber: 23\n                    }, _this),\n                    colorScheme: \"gray\",\n                    variant: \"ghost\",\n                    children: \"Upload cover photo\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 161,\n                    columnNumber: 12\n                  }, _this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 160,\n                  columnNumber: 11\n                }, _this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 156,\n                columnNumber: 9\n              }, _this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 155,\n              columnNumber: 8\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 154,\n            columnNumber: 7\n          }, _this), coverPhoto && /*#__PURE__*/_jsxDEV(Button, {\n            mt: \"10px\",\n            onClick: uploadCoverPhoto,\n            leftIcon: /*#__PURE__*/_jsxDEV(MdPhotoSizeSelectActual, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 179,\n              columnNumber: 19\n            }, _this),\n            colorScheme: \"gray\",\n            variant: \"ghost\",\n            children: \"Upload cover photo\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 176,\n            columnNumber: 8\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 6\n        }, _this), /*#__PURE__*/_jsxDEV(VStack, {\n          pl: \"32px\",\n          spacing: \"10px\",\n          py: \"20px\",\n          align: \"flex-start\",\n          w: \"60%\",\n          children: [/*#__PURE__*/_jsxDEV(VStack, {\n            spacing: \"12px\",\n            align: \"flex-start\",\n            children: [/*#__PURE__*/_jsxDEV(Text, {\n              fontWeight: \"semibold\",\n              children: \"Profile Image\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 189,\n              columnNumber: 8\n            }, _this), /*#__PURE__*/_jsxDEV(Flex, {\n              align: \"center\",\n              children: [/*#__PURE__*/_jsxDEV(Skeleton, {\n                isLoaded: profilePhoto !== 'loading',\n                children: /*#__PURE__*/_jsxDEV(Avatar, {\n                  name: name,\n                  size: \"xl\",\n                  src: profilePhoto !== null && profilePhoto !== void 0 ? profilePhoto : ''\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 192,\n                  columnNumber: 10\n                }, _this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 191,\n                columnNumber: 9\n              }, _this), /*#__PURE__*/_jsxDEV(Button, {\n                ml: \"16px\",\n                size: \"sm\",\n                leftIcon: /*#__PURE__*/_jsxDEV(MdPhotoSizeSelectActual, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 197,\n                  columnNumber: 20\n                }, _this),\n                colorScheme: \"gray\",\n                variant: \"ghost\",\n                onClick: uploadProfilePhoto,\n                children: \"Upload profile photo\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 194,\n                columnNumber: 9\n              }, _this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 190,\n              columnNumber: 8\n            }, _this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 188,\n            columnNumber: 7\n          }, _this), /*#__PURE__*/_jsxDEV(MainInputUI, {\n            error: errors.username,\n            input: \"username\",\n            name: \"Username\",\n            placeholder: \"Enter new username\",\n            register: register,\n            type: \"text\",\n            forDashboard: true,\n            defaultValue: username\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 206,\n            columnNumber: 7\n          }, _this), /*#__PURE__*/_jsxDEV(MainInputUI, {\n            error: errors.email,\n            input: \"email\",\n            name: \"Email\",\n            placeholder: \"Enter new email\",\n            register: register,\n            type: \"text\",\n            forDashboard: true,\n            defaultValue: email\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 216,\n            columnNumber: 7\n          }, _this), /*#__PURE__*/_jsxDEV(MainInputUI, {\n            error: errors.password,\n            input: \"password\",\n            name: \"Password\",\n            placeholder: \"Enter new password (optional)\",\n            register: register,\n            type: \"password\",\n            forDashboard: true,\n            helperText: ['Password must be at least 6 characters, and a combination of letters and numbers.', 'Avoid using a password that you use with other websites or that might be easy for someone else to guess.']\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 226,\n            columnNumber: 7\n          }, _this), /*#__PURE__*/_jsxDEV(MainInputUI, {\n            error: errors.confirm_password,\n            input: \"confirm_password\",\n            name: \"Confirm password\",\n            placeholder: \"Confirm new password (optional)\",\n            register: register,\n            type: \"password\",\n            forDashboard: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 239,\n            columnNumber: 7\n          }, _this), /*#__PURE__*/_jsxDEV(Button, {\n            type: \"submit\",\n            isLoading: loading,\n            children: \"Update account\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 248,\n            columnNumber: 7\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 6\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 5\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 4\n    }, _this)]\n  }, void 0, true);\n};\n\n_s(AccountInformationEdit, \"p4BJP+Exi9wPBXkxI6dX3gtrZrs=\", false, function () {\n  return [useColorModeValue, useUpdateAccountMutation, useForm];\n});\n\n_c = AccountInformationEdit;\n\nvar _c;\n\n$RefreshReg$(_c, \"AccountInformationEdit\");","map":{"version":3,"sources":["C:/Users/mj/Documents/Codes/PROJECTS/quizshare-typescript/client/src/components/dasboard/AccountInformationEdit.tsx"],"names":["AspectRatio","Avatar","Box","Button","Center","Divider","Flex","GridItem","Skeleton","Text","useColorModeValue","VStack","Image","React","useEffect","useState","useForm","FiEdit","MdPhotoSizeSelectActual","MeDocument","useUpdateAccountMutation","errorMapper","uploadCloudinaryImage","MainInputUI","AccountInformationEdit","accInfoProps","email","avatar","username","cover_photo","name","profile","setEditMode","coverPhotoBg","coverPhoto","setCoverPhoto","profilePhoto","setProfilePhoto","updateAccount","loading","register","handleSubmit","errors","setError","onSumbit","values","variables","data","update","cache","writeQuery","query","__typename","me","uploadCoverPhoto","error","photos","event","info","url","console","uploadProfilePhoto","password","confirm_password"],"mappings":"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","sourcesContent":["import {\r\n\tAspectRatio,\r\n\tAvatar,\r\n\tBox,\r\n\tButton,\r\n\tCenter,\r\n\tDivider,\r\n\tFlex,\r\n\tGridItem,\r\n\tSkeleton,\r\n\tText,\r\n\tuseColorModeValue,\r\n\tVStack,\r\n} from '@chakra-ui/react';\r\nimport Image from 'next/image';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { useForm } from 'react-hook-form';\r\nimport { FiEdit } from 'react-icons/fi';\r\nimport { MdPhotoSizeSelectActual } from 'react-icons/md';\r\nimport {\r\n\tMeDocument,\r\n\tMeQuery,\r\n\tUpdateAccountInput,\r\n\tUserResponseFragment,\r\n\tuseUpdateAccountMutation,\r\n} from '../../generated/graphql';\r\nimport errorMapper from '../../utils/errorMapper';\r\nimport { uploadCloudinaryImage } from '../../utils/uploadImage';\r\nimport MainInputUI from '../custom-inputs/MainInputUI';\r\n\r\ninterface AccountInformationEditProps {\r\n\taccInfoProps: UserResponseFragment;\r\n\tsetEditMode: (editMode: boolean) => void;\r\n}\r\n\r\nexport const AccountInformationEdit: React.FC<AccountInformationEditProps> = ({\r\n\taccInfoProps: {\r\n\t\temail,\r\n\t\tavatar,\r\n\t\tusername,\r\n\t\tcover_photo,\r\n\t\tprofile: { name },\r\n\t},\r\n\tsetEditMode,\r\n}) => {\r\n\tconst coverPhotoBg = useColorModeValue(\r\n\t\t'gray.50',\r\n\t\t'rgba(255, 255, 255, 0.04)'\r\n\t);\r\n\r\n\tconst [coverPhoto, setCoverPhoto] = useState<string | 'loading'>();\r\n\tconst [profilePhoto, setProfilePhoto] = useState<string | 'loading'>();\r\n\r\n\tconst [updateAccount, { loading }] = useUpdateAccountMutation();\r\n\r\n\tconst {\r\n\t\tregister,\r\n\t\thandleSubmit,\r\n\t\terrors,\r\n\t\tsetError,\r\n\t} = useForm<UpdateAccountInput>();\r\n\r\n\tconst onSumbit = async (values: UpdateAccountInput) => {\r\n\t\ttry {\r\n\t\t\tconst { data } = await updateAccount({\r\n\t\t\t\tvariables: {\r\n\t\t\t\t\tdata: {\r\n\t\t\t\t\t\t...values,\r\n\t\t\t\t\t\tusername: values.username === username ? null : values.username,\r\n\t\t\t\t\t\temail: values.email === email ? null : values.email,\r\n\t\t\t\t\t\tcover_photo: coverPhoto ?? null,\r\n\t\t\t\t\t\tavatar: profilePhoto ?? null,\r\n\t\t\t\t\t},\r\n\t\t\t\t},\r\n\t\t\t\tupdate: (cache, { data }) => {\r\n\t\t\t\t\tcache.writeQuery<MeQuery>({\r\n\t\t\t\t\t\tquery: MeDocument,\r\n\t\t\t\t\t\tdata: {\r\n\t\t\t\t\t\t\t__typename: 'Query',\r\n\t\t\t\t\t\t\tme: data?.updateAccount,\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t});\r\n\t\t\t\t},\r\n\t\t\t});\r\n\t\t\tif (data?.updateAccount) {\r\n\t\t\t\tsetEditMode(false);\r\n\t\t\t}\r\n\t\t} catch (err) {\r\n\t\t\terrorMapper(err, setError);\r\n\t\t}\r\n\t};\r\n\r\n\tconst uploadCoverPhoto = () => {\r\n\t\tuploadCloudinaryImage(\r\n\t\t\t(error: any, photos: { event: string; info: { url: string } }) => {\r\n\t\t\t\tif (!error && photos.event === 'queues-start') {\r\n\t\t\t\t\tsetCoverPhoto('loading');\r\n\t\t\t\t} else if (!error && photos.event === 'success') {\r\n\t\t\t\t\tsetCoverPhoto(photos.info.url);\r\n\t\t\t\t} else if (error) {\r\n\t\t\t\t\tconsole.error(error);\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\t16 / 5\r\n\t\t);\r\n\t};\r\n\r\n\tconst uploadProfilePhoto = () => {\r\n\t\tuploadCloudinaryImage(\r\n\t\t\t(error: any, photos: { event: string; info: { url: string } }) => {\r\n\t\t\t\tif (!error && photos.event === 'queues-start') {\r\n\t\t\t\t\tsetProfilePhoto('loading');\r\n\t\t\t\t} else if (!error && photos.event === 'success') {\r\n\t\t\t\t\tsetProfilePhoto(photos.info.url);\r\n\t\t\t\t} else if (error) {\r\n\t\t\t\t\tconsole.error(error);\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\t1\r\n\t\t);\r\n\t};\r\n\r\n\tuseEffect(() => {\r\n\t\tcover_photo && setCoverPhoto(cover_photo);\r\n\t\tavatar && setProfilePhoto(avatar);\r\n\t}, [cover_photo, avatar]);\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<GridItem\r\n\t\t\t\tcolSpan={10}\r\n\t\t\t\tdisplay='flex'\r\n\t\t\t\tjustifyContent='space-between'\r\n\t\t\t\talignItems='center'\r\n\t\t\t\tpy='8px'\r\n\t\t\t\tpx='6px'\r\n\t\t\t>\r\n\t\t\t\t<Text px='16px'>Account Information</Text>\r\n\t\t\t\t<Button\r\n\t\t\t\t\tonClick={() => setEditMode(false)}\r\n\t\t\t\t\trightIcon={<FiEdit />}\r\n\t\t\t\t\tcolorScheme='purple'\r\n\t\t\t\t\tvariant='ghost'\r\n\t\t\t\t>\r\n\t\t\t\t\tCancel\r\n\t\t\t\t</Button>\r\n\t\t\t</GridItem>\r\n\t\t\t<GridItem colSpan={10}>\r\n\t\t\t\t<Divider />\r\n\t\t\t</GridItem>\r\n\t\t\t<GridItem colSpan={10}>\r\n\t\t\t\t<form onSubmit={handleSubmit(onSumbit)}>\r\n\t\t\t\t\t<Box p='5px' textAlign='center'>\r\n\t\t\t\t\t\t<Skeleton isLoaded={coverPhoto !== 'loading'}>\r\n\t\t\t\t\t\t\t<Box bg='gray.100'>\r\n\t\t\t\t\t\t\t\t<AspectRatio maxW='full' ratio={16 / 5}>\r\n\t\t\t\t\t\t\t\t\t{coverPhoto && coverPhoto !== 'loading' ? (\r\n\t\t\t\t\t\t\t\t\t\t<Image src={coverPhoto} alt='Cover Photo' layout='fill' />\r\n\t\t\t\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t\t\t\t<Center bg={coverPhotoBg}>\r\n\t\t\t\t\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\t\t\t\t\tonClick={uploadCoverPhoto}\r\n\t\t\t\t\t\t\t\t\t\t\t\tleftIcon={<MdPhotoSizeSelectActual />}\r\n\t\t\t\t\t\t\t\t\t\t\t\tcolorScheme='gray'\r\n\t\t\t\t\t\t\t\t\t\t\t\tvariant='ghost'\r\n\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\tUpload cover photo\r\n\t\t\t\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t\t\t\t</Center>\r\n\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t</AspectRatio>\r\n\t\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t\t</Skeleton>\r\n\r\n\t\t\t\t\t\t{coverPhoto && (\r\n\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\tmt='10px'\r\n\t\t\t\t\t\t\t\tonClick={uploadCoverPhoto}\r\n\t\t\t\t\t\t\t\tleftIcon={<MdPhotoSizeSelectActual />}\r\n\t\t\t\t\t\t\t\tcolorScheme='gray'\r\n\t\t\t\t\t\t\t\tvariant='ghost'\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\tUpload cover photo\r\n\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t</Box>\r\n\t\t\t\t\t<VStack pl='32px' spacing='10px' py='20px' align='flex-start' w='60%'>\r\n\t\t\t\t\t\t<VStack spacing='12px' align='flex-start'>\r\n\t\t\t\t\t\t\t<Text fontWeight='semibold'>Profile Image</Text>\r\n\t\t\t\t\t\t\t<Flex align='center'>\r\n\t\t\t\t\t\t\t\t<Skeleton isLoaded={profilePhoto !== 'loading'}>\r\n\t\t\t\t\t\t\t\t\t<Avatar name={name} size='xl' src={profilePhoto ?? ''} />\r\n\t\t\t\t\t\t\t\t</Skeleton>\r\n\t\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\t\tml='16px'\r\n\t\t\t\t\t\t\t\t\tsize='sm'\r\n\t\t\t\t\t\t\t\t\tleftIcon={<MdPhotoSizeSelectActual />}\r\n\t\t\t\t\t\t\t\t\tcolorScheme='gray'\r\n\t\t\t\t\t\t\t\t\tvariant='ghost'\r\n\t\t\t\t\t\t\t\t\tonClick={uploadProfilePhoto}\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\tUpload profile photo\r\n\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t</Flex>\r\n\t\t\t\t\t\t</VStack>\r\n\t\t\t\t\t\t<MainInputUI\r\n\t\t\t\t\t\t\terror={errors.username}\r\n\t\t\t\t\t\t\tinput='username'\r\n\t\t\t\t\t\t\tname='Username'\r\n\t\t\t\t\t\t\tplaceholder='Enter new username'\r\n\t\t\t\t\t\t\tregister={register}\r\n\t\t\t\t\t\t\ttype='text'\r\n\t\t\t\t\t\t\tforDashboard\r\n\t\t\t\t\t\t\tdefaultValue={username}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t<MainInputUI\r\n\t\t\t\t\t\t\terror={errors.email}\r\n\t\t\t\t\t\t\tinput='email'\r\n\t\t\t\t\t\t\tname='Email'\r\n\t\t\t\t\t\t\tplaceholder='Enter new email'\r\n\t\t\t\t\t\t\tregister={register}\r\n\t\t\t\t\t\t\ttype='text'\r\n\t\t\t\t\t\t\tforDashboard\r\n\t\t\t\t\t\t\tdefaultValue={email}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t<MainInputUI\r\n\t\t\t\t\t\t\terror={errors.password}\r\n\t\t\t\t\t\t\tinput='password'\r\n\t\t\t\t\t\t\tname='Password'\r\n\t\t\t\t\t\t\tplaceholder='Enter new password (optional)'\r\n\t\t\t\t\t\t\tregister={register}\r\n\t\t\t\t\t\t\ttype='password'\r\n\t\t\t\t\t\t\tforDashboard\r\n\t\t\t\t\t\t\thelperText={[\r\n\t\t\t\t\t\t\t\t'Password must be at least 6 characters, and a combination of letters and numbers.',\r\n\t\t\t\t\t\t\t\t'Avoid using a password that you use with other websites or that might be easy for someone else to guess.',\r\n\t\t\t\t\t\t\t]}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t<MainInputUI\r\n\t\t\t\t\t\t\terror={errors.confirm_password}\r\n\t\t\t\t\t\t\tinput='confirm_password'\r\n\t\t\t\t\t\t\tname='Confirm password'\r\n\t\t\t\t\t\t\tplaceholder='Confirm new password (optional)'\r\n\t\t\t\t\t\t\tregister={register}\r\n\t\t\t\t\t\t\ttype='password'\r\n\t\t\t\t\t\t\tforDashboard\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t<Button type='submit' isLoading={loading}>\r\n\t\t\t\t\t\t\tUpdate account\r\n\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t</VStack>\r\n\t\t\t\t</form>\r\n\t\t\t</GridItem>\r\n\t\t</>\r\n\t);\r\n};\r\n"]},"metadata":{},"sourceType":"module"}